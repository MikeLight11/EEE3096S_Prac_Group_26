ARM GAS  C:\Users\User\AppData\Local\Temp\ccfpKVWv.s 			page 1


   1              		.cpu cortex-m0
   2              		.arch armv6s-m
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 1
  11              		.eabi_attribute 34, 0
  12              		.eabi_attribute 18, 4
  13              		.file	"main.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.file 1 "Core/Src/main.c"
  18              		.section	.text.MX_GPIO_Init,"ax",%progbits
  19              		.align	1
  20              		.syntax unified
  21              		.code	16
  22              		.thumb_func
  24              	MX_GPIO_Init:
  25              	.LFB42:
   1:Core/Src/main.c **** /* USER CODE BEGIN Header */
   2:Core/Src/main.c **** /**
   3:Core/Src/main.c ****   ******************************************************************************
   4:Core/Src/main.c ****   * @file           : main.c
   5:Core/Src/main.c ****   * @brief          : Main program body
   6:Core/Src/main.c ****   ******************************************************************************
   7:Core/Src/main.c ****   * @attention
   8:Core/Src/main.c ****   *
   9:Core/Src/main.c ****   * Copyright (c) 2025 STMicroelectronics.
  10:Core/Src/main.c ****   * All rights reserved.
  11:Core/Src/main.c ****   *
  12:Core/Src/main.c ****   * This software is licensed under terms that can be found in the LICENSE file
  13:Core/Src/main.c ****   * in the root directory of this software component.
  14:Core/Src/main.c ****   * If no LICENSE file comes with this software, it is provided AS-IS.
  15:Core/Src/main.c ****   *
  16:Core/Src/main.c ****   ******************************************************************************
  17:Core/Src/main.c ****   */
  18:Core/Src/main.c **** /* USER CODE END Header */
  19:Core/Src/main.c **** /* Includes ------------------------------------------------------------------*/
  20:Core/Src/main.c **** #include "main.h"
  21:Core/Src/main.c **** 
  22:Core/Src/main.c **** /* Private includes ----------------------------------------------------------*/
  23:Core/Src/main.c **** /* USER CODE BEGIN Includes */
  24:Core/Src/main.c **** #include <stdint.h>
  25:Core/Src/main.c **** #include "stm32f0xx.h"
  26:Core/Src/main.c **** /* USER CODE END Includes */
  27:Core/Src/main.c **** 
  28:Core/Src/main.c **** /* Private typedef -----------------------------------------------------------*/
  29:Core/Src/main.c **** /* USER CODE BEGIN PTD */
  30:Core/Src/main.c **** #define MAX_ITER 100
  31:Core/Src/main.c **** /* USER CODE END PTD */
  32:Core/Src/main.c **** 
  33:Core/Src/main.c **** /* Private define ------------------------------------------------------------*/
ARM GAS  C:\Users\User\AppData\Local\Temp\ccfpKVWv.s 			page 2


  34:Core/Src/main.c **** /* USER CODE BEGIN PD */
  35:Core/Src/main.c **** 
  36:Core/Src/main.c **** /* USER CODE END PD */
  37:Core/Src/main.c **** 
  38:Core/Src/main.c **** /* Private macro -------------------------------------------------------------*/
  39:Core/Src/main.c **** /* USER CODE BEGIN PM */
  40:Core/Src/main.c **** 
  41:Core/Src/main.c **** /* USER CODE END PM */
  42:Core/Src/main.c **** 
  43:Core/Src/main.c **** /* Private variables ---------------------------------------------------------*/
  44:Core/Src/main.c **** 
  45:Core/Src/main.c **** /* USER CODE BEGIN PV */
  46:Core/Src/main.c **** //TODO: Define and initialize the global variables required
  47:Core/Src/main.c **** 
  48:Core/Src/main.c **** uint32_t start_time;       // Clock time at start of operation
  49:Core/Src/main.c **** uint32_t end_time;         // Clock time at end of operation
  50:Core/Src/main.c **** uint32_t execution_time;   // Difference between start and end time
  51:Core/Src/main.c **** uint64_t checksum;         // Sum returned by Mandelbrot function
  52:Core/Src/main.c **** int init_width = 128;            // Initial height of 2D plane
  53:Core/Src/main.c **** int init_height = 128;           // Initial width of 2D plane
  54:Core/Src/main.c **** int size_array[] = {128, 160, 192, 224, 256};
  55:Core/Src/main.c **** uint64_t checksum_array[5] = {0}; // Array to hold checksums for different sizes
  56:Core/Src/main.c **** uint32_t execution_time_array[5] = {0}; // Array to hold execution times for different sizes
  57:Core/Src/main.c **** 
  58:Core/Src/main.c **** 
  59:Core/Src/main.c **** /* USER CODE END PV */
  60:Core/Src/main.c **** 
  61:Core/Src/main.c **** /* Private function prototypes -----------------------------------------------*/
  62:Core/Src/main.c **** void SystemClock_Config(void);
  63:Core/Src/main.c **** static void MX_GPIO_Init(void);
  64:Core/Src/main.c **** /* USER CODE BEGIN PFP */
  65:Core/Src/main.c **** uint64_t calculate_mandelbrot_fixed_point_arithmetic(int width, int height, int max_iterations);
  66:Core/Src/main.c **** uint64_t calculate_mandelbrot_double(int width, int height, int max_iterations);
  67:Core/Src/main.c **** 
  68:Core/Src/main.c **** /* USER CODE END PFP */
  69:Core/Src/main.c **** 
  70:Core/Src/main.c **** /* Private user code ---------------------------------------------------------*/
  71:Core/Src/main.c **** /* USER CODE BEGIN 0 */
  72:Core/Src/main.c **** 
  73:Core/Src/main.c **** /* USER CODE END 0 */
  74:Core/Src/main.c **** 
  75:Core/Src/main.c **** /**
  76:Core/Src/main.c ****   * @brief  The application entry point.
  77:Core/Src/main.c ****   * @retval int
  78:Core/Src/main.c ****   */
  79:Core/Src/main.c **** int main(void)
  80:Core/Src/main.c **** {
  81:Core/Src/main.c ****   /* USER CODE BEGIN 1 */
  82:Core/Src/main.c **** 
  83:Core/Src/main.c ****   /* USER CODE END 1 */
  84:Core/Src/main.c **** 
  85:Core/Src/main.c ****   /* MCU Configuration--------------------------------------------------------*/
  86:Core/Src/main.c **** 
  87:Core/Src/main.c ****   /* Reset of all peripherals, Initializes the Flash interface and the Systick. */
  88:Core/Src/main.c ****   HAL_Init();
  89:Core/Src/main.c **** 
  90:Core/Src/main.c ****   /* USER CODE BEGIN Init */
ARM GAS  C:\Users\User\AppData\Local\Temp\ccfpKVWv.s 			page 3


  91:Core/Src/main.c **** 
  92:Core/Src/main.c ****   /* USER CODE END Init */
  93:Core/Src/main.c **** 
  94:Core/Src/main.c ****   /* Configure the system clock */
  95:Core/Src/main.c ****   SystemClock_Config();
  96:Core/Src/main.c **** 
  97:Core/Src/main.c ****   /* USER CODE BEGIN SysInit */
  98:Core/Src/main.c **** 
  99:Core/Src/main.c ****   /* USER CODE END SysInit */
 100:Core/Src/main.c **** 
 101:Core/Src/main.c ****   /* Initialize all configured peripherals */
 102:Core/Src/main.c ****   MX_GPIO_Init();
 103:Core/Src/main.c ****   /* USER CODE BEGIN 2 */
 104:Core/Src/main.c ****   //TODO: Turn on LED 0 to signify the start of the operation
 105:Core/Src/main.c ****   HAL_GPIO_WritePin(GPIOB, GPIO_PIN_0, GPIO_PIN_SET);
 106:Core/Src/main.c **** 
 107:Core/Src/main.c ****   //TODO: Record the start time
 108:Core/Src/main.c ****   //start_time = HAL_GetTick();
 109:Core/Src/main.c ****   
 110:Core/Src/main.c ****   //TODO: Call the Mandelbrot Function and store the output in the checksum variable defined initia
 111:Core/Src/main.c ****   
 112:Core/Src/main.c **** 
 113:Core/Src/main.c ****   //TODO: Record the end time
 114:Core/Src/main.c ****   //end_time = HAL_GetTick();
 115:Core/Src/main.c **** 
 116:Core/Src/main.c ****   //TODO: Calculate the execution time
 117:Core/Src/main.c ****   //execution_time = end_time - start_time;
 118:Core/Src/main.c **** 
 119:Core/Src/main.c ****   for (int i = 0; i < 5; i++) {
 120:Core/Src/main.c ****         start_time = HAL_GetTick();
 121:Core/Src/main.c ****         checksum_array[i] = calculate_mandelbrot_fixed_point_arithmetic(size_array[i], size_array[i
 122:Core/Src/main.c ****         //checksum_array[i] = calculate_mandelbrot_double(size_array[i], size_array[i], MAX_ITER);
 123:Core/Src/main.c ****         end_time = HAL_GetTick();
 124:Core/Src/main.c ****         execution_time_array[i] = end_time - start_time;
 125:Core/Src/main.c ****     }
 126:Core/Src/main.c **** 
 127:Core/Src/main.c ****   //TODO: Turn on LED 1 to signify the end of the operation
 128:Core/Src/main.c ****   HAL_GPIO_WritePin(GPIOB, GPIO_PIN_1, GPIO_PIN_SET);
 129:Core/Src/main.c **** 
 130:Core/Src/main.c ****   //TODO: Hold the LEDs on for a 1s delay
 131:Core/Src/main.c ****   HAL_Delay(1000);
 132:Core/Src/main.c **** 
 133:Core/Src/main.c ****   //TODO: Turn off the LEDs
 134:Core/Src/main.c ****   HAL_GPIO_WritePin(GPIOB, GPIO_PIN_0|GPIO_PIN_1, GPIO_PIN_RESET);
 135:Core/Src/main.c **** 
 136:Core/Src/main.c ****   /* USER CODE END 2 */
 137:Core/Src/main.c **** 
 138:Core/Src/main.c ****   /* Infinite loop */
 139:Core/Src/main.c ****   /* USER CODE BEGIN WHILE */
 140:Core/Src/main.c ****   while (1)
 141:Core/Src/main.c ****   {
 142:Core/Src/main.c ****     /* USER CODE END WHILE */
 143:Core/Src/main.c ****     /* USER CODE BEGIN 3 */
 144:Core/Src/main.c ****   }
 145:Core/Src/main.c ****   /* USER CODE END 3 */
 146:Core/Src/main.c **** }
 147:Core/Src/main.c **** 
ARM GAS  C:\Users\User\AppData\Local\Temp\ccfpKVWv.s 			page 4


 148:Core/Src/main.c **** /**
 149:Core/Src/main.c ****   * @brief System Clock Configuration
 150:Core/Src/main.c ****   * @retval None
 151:Core/Src/main.c ****   */
 152:Core/Src/main.c **** void SystemClock_Config(void)
 153:Core/Src/main.c **** {
 154:Core/Src/main.c ****   RCC_OscInitTypeDef RCC_OscInitStruct = {0};
 155:Core/Src/main.c ****   RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 156:Core/Src/main.c **** 
 157:Core/Src/main.c ****   /** Initializes the RCC Oscillators according to the specified parameters
 158:Core/Src/main.c ****   * in the RCC_OscInitTypeDef structure.
 159:Core/Src/main.c ****   */
 160:Core/Src/main.c ****   RCC_OscInitStruct.OscillatorType = RCC_OSCILLATORTYPE_HSI;
 161:Core/Src/main.c ****   RCC_OscInitStruct.HSIState = RCC_HSI_ON;
 162:Core/Src/main.c ****   RCC_OscInitStruct.HSICalibrationValue = RCC_HSICALIBRATION_DEFAULT;
 163:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_NONE;
 164:Core/Src/main.c ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 165:Core/Src/main.c ****   {
 166:Core/Src/main.c ****     Error_Handler();
 167:Core/Src/main.c ****   }
 168:Core/Src/main.c **** 
 169:Core/Src/main.c ****   /** Initializes the CPU, AHB and APB buses clocks
 170:Core/Src/main.c ****   */
 171:Core/Src/main.c ****   RCC_ClkInitStruct.ClockType = RCC_CLOCKTYPE_HCLK|RCC_CLOCKTYPE_SYSCLK
 172:Core/Src/main.c ****                               |RCC_CLOCKTYPE_PCLK1;
 173:Core/Src/main.c ****   RCC_ClkInitStruct.SYSCLKSource = RCC_SYSCLKSOURCE_HSI;
 174:Core/Src/main.c ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 175:Core/Src/main.c ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV1;
 176:Core/Src/main.c **** 
 177:Core/Src/main.c ****   if (HAL_RCC_ClockConfig(&RCC_ClkInitStruct, FLASH_LATENCY_0) != HAL_OK)
 178:Core/Src/main.c ****   {
 179:Core/Src/main.c ****     Error_Handler();
 180:Core/Src/main.c ****   }
 181:Core/Src/main.c **** }
 182:Core/Src/main.c **** 
 183:Core/Src/main.c **** /**
 184:Core/Src/main.c ****   * @brief GPIO Initialization Function
 185:Core/Src/main.c ****   * @param None
 186:Core/Src/main.c ****   * @retval None
 187:Core/Src/main.c ****   */
 188:Core/Src/main.c **** static void MX_GPIO_Init(void)
 189:Core/Src/main.c **** {
  26              		.loc 1 189 1 view -0
  27              		.cfi_startproc
  28              		@ args = 0, pretend = 0, frame = 32
  29              		@ frame_needed = 0, uses_anonymous_args = 0
  30 0000 10B5     		push	{r4, lr}
  31              	.LCFI0:
  32              		.cfi_def_cfa_offset 8
  33              		.cfi_offset 4, -8
  34              		.cfi_offset 14, -4
  35 0002 88B0     		sub	sp, sp, #32
  36              	.LCFI1:
  37              		.cfi_def_cfa_offset 40
 190:Core/Src/main.c ****   GPIO_InitTypeDef GPIO_InitStruct = {0};
  38              		.loc 1 190 3 view .LVU1
  39              		.loc 1 190 20 is_stmt 0 view .LVU2
ARM GAS  C:\Users\User\AppData\Local\Temp\ccfpKVWv.s 			page 5


  40 0004 1422     		movs	r2, #20
  41 0006 0021     		movs	r1, #0
  42 0008 03A8     		add	r0, sp, #12
  43 000a FFF7FEFF 		bl	memset
  44              	.LVL0:
 191:Core/Src/main.c **** /* USER CODE BEGIN MX_GPIO_Init_1 */
 192:Core/Src/main.c **** /* USER CODE END MX_GPIO_Init_1 */
 193:Core/Src/main.c **** 
 194:Core/Src/main.c ****   /* GPIO Ports Clock Enable */
 195:Core/Src/main.c ****   __HAL_RCC_GPIOB_CLK_ENABLE();
  45              		.loc 1 195 3 is_stmt 1 view .LVU3
  46              	.LBB4:
  47              		.loc 1 195 3 view .LVU4
  48              		.loc 1 195 3 view .LVU5
  49 000e 134B     		ldr	r3, .L2
  50 0010 5A69     		ldr	r2, [r3, #20]
  51 0012 8021     		movs	r1, #128
  52 0014 C902     		lsls	r1, r1, #11
  53 0016 0A43     		orrs	r2, r1
  54 0018 5A61     		str	r2, [r3, #20]
  55              		.loc 1 195 3 view .LVU6
  56 001a 5A69     		ldr	r2, [r3, #20]
  57 001c 0A40     		ands	r2, r1
  58 001e 0192     		str	r2, [sp, #4]
  59              		.loc 1 195 3 view .LVU7
  60 0020 019A     		ldr	r2, [sp, #4]
  61              	.LBE4:
  62              		.loc 1 195 3 view .LVU8
 196:Core/Src/main.c ****   __HAL_RCC_GPIOA_CLK_ENABLE();
  63              		.loc 1 196 3 view .LVU9
  64              	.LBB5:
  65              		.loc 1 196 3 view .LVU10
  66              		.loc 1 196 3 view .LVU11
  67 0022 5A69     		ldr	r2, [r3, #20]
  68 0024 8021     		movs	r1, #128
  69 0026 8902     		lsls	r1, r1, #10
  70 0028 0A43     		orrs	r2, r1
  71 002a 5A61     		str	r2, [r3, #20]
  72              		.loc 1 196 3 view .LVU12
  73 002c 5B69     		ldr	r3, [r3, #20]
  74 002e 0B40     		ands	r3, r1
  75 0030 0293     		str	r3, [sp, #8]
  76              		.loc 1 196 3 view .LVU13
  77 0032 029B     		ldr	r3, [sp, #8]
  78              	.LBE5:
  79              		.loc 1 196 3 view .LVU14
 197:Core/Src/main.c **** 
 198:Core/Src/main.c ****   /*Configure GPIO pin Output Level */
 199:Core/Src/main.c ****   HAL_GPIO_WritePin(GPIOB, GPIO_PIN_0|GPIO_PIN_1, GPIO_PIN_RESET);
  80              		.loc 1 199 3 view .LVU15
  81 0034 0A4C     		ldr	r4, .L2+4
  82 0036 0022     		movs	r2, #0
  83 0038 0321     		movs	r1, #3
  84 003a 2000     		movs	r0, r4
  85 003c FFF7FEFF 		bl	HAL_GPIO_WritePin
  86              	.LVL1:
 200:Core/Src/main.c **** 
ARM GAS  C:\Users\User\AppData\Local\Temp\ccfpKVWv.s 			page 6


 201:Core/Src/main.c ****   /*Configure GPIO pins : PB0 PB1 */
 202:Core/Src/main.c ****   GPIO_InitStruct.Pin = GPIO_PIN_0|GPIO_PIN_1;
  87              		.loc 1 202 3 view .LVU16
  88              		.loc 1 202 23 is_stmt 0 view .LVU17
  89 0040 0323     		movs	r3, #3
  90 0042 0393     		str	r3, [sp, #12]
 203:Core/Src/main.c ****   GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
  91              		.loc 1 203 3 is_stmt 1 view .LVU18
  92              		.loc 1 203 24 is_stmt 0 view .LVU19
  93 0044 023B     		subs	r3, r3, #2
  94 0046 0493     		str	r3, [sp, #16]
 204:Core/Src/main.c ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
  95              		.loc 1 204 3 is_stmt 1 view .LVU20
  96              		.loc 1 204 24 is_stmt 0 view .LVU21
  97 0048 0023     		movs	r3, #0
  98 004a 0593     		str	r3, [sp, #20]
 205:Core/Src/main.c ****   GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
  99              		.loc 1 205 3 is_stmt 1 view .LVU22
 100              		.loc 1 205 25 is_stmt 0 view .LVU23
 101 004c 0693     		str	r3, [sp, #24]
 206:Core/Src/main.c ****   HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 102              		.loc 1 206 3 is_stmt 1 view .LVU24
 103 004e 03A9     		add	r1, sp, #12
 104 0050 2000     		movs	r0, r4
 105 0052 FFF7FEFF 		bl	HAL_GPIO_Init
 106              	.LVL2:
 207:Core/Src/main.c **** 
 208:Core/Src/main.c **** /* USER CODE BEGIN MX_GPIO_Init_2 */
 209:Core/Src/main.c **** /* USER CODE END MX_GPIO_Init_2 */
 210:Core/Src/main.c **** }
 107              		.loc 1 210 1 is_stmt 0 view .LVU25
 108 0056 08B0     		add	sp, sp, #32
 109              		@ sp needed
 110 0058 10BD     		pop	{r4, pc}
 111              	.L3:
 112 005a C046     		.align	2
 113              	.L2:
 114 005c 00100240 		.word	1073876992
 115 0060 00040048 		.word	1207960576
 116              		.cfi_endproc
 117              	.LFE42:
 119              		.global	__aeabi_idiv
 120              		.section	.text.calculate_mandelbrot_fixed_point_arithmetic,"ax",%progbits
 121              		.align	1
 122              		.global	calculate_mandelbrot_fixed_point_arithmetic
 123              		.syntax unified
 124              		.code	16
 125              		.thumb_func
 127              	calculate_mandelbrot_fixed_point_arithmetic:
 128              	.LVL3:
 129              	.LFB43:
 211:Core/Src/main.c **** 
 212:Core/Src/main.c **** /* USER CODE BEGIN 4 */
 213:Core/Src/main.c **** //TODO: Mandelbrot using variable type integers and fixed point arithmetic
 214:Core/Src/main.c **** uint64_t calculate_mandelbrot_fixed_point_arithmetic(int width, int height, int max_iterations){
 130              		.loc 1 214 96 is_stmt 1 view -0
 131              		.cfi_startproc
ARM GAS  C:\Users\User\AppData\Local\Temp\ccfpKVWv.s 			page 7


 132              		@ args = 0, pretend = 0, frame = 32
 133              		@ frame_needed = 0, uses_anonymous_args = 0
 134              		.loc 1 214 96 is_stmt 0 view .LVU27
 135 0000 F0B5     		push	{r4, r5, r6, r7, lr}
 136              	.LCFI2:
 137              		.cfi_def_cfa_offset 20
 138              		.cfi_offset 4, -20
 139              		.cfi_offset 5, -16
 140              		.cfi_offset 6, -12
 141              		.cfi_offset 7, -8
 142              		.cfi_offset 14, -4
 143 0002 DE46     		mov	lr, fp
 144 0004 5746     		mov	r7, r10
 145 0006 4E46     		mov	r6, r9
 146 0008 4546     		mov	r5, r8
 147 000a E0B5     		push	{r5, r6, r7, lr}
 148              	.LCFI3:
 149              		.cfi_def_cfa_offset 36
 150              		.cfi_offset 8, -36
 151              		.cfi_offset 9, -32
 152              		.cfi_offset 10, -28
 153              		.cfi_offset 11, -24
 154 000c 89B0     		sub	sp, sp, #36
 155              	.LCFI4:
 156              		.cfi_def_cfa_offset 72
 157 000e 8346     		mov	fp, r0
 158 0010 8A46     		mov	r10, r1
 159 0012 0192     		str	r2, [sp, #4]
 215:Core/Src/main.c ****     const int16_t SCALE = 1000;
 160              		.loc 1 215 5 is_stmt 1 view .LVU28
 161              	.LVL4:
 216:Core/Src/main.c ****     const int16_t THREE_FIVE = 3500;
 162              		.loc 1 216 5 view .LVU29
 217:Core/Src/main.c ****     const int16_t TWO = 2000;
 163              		.loc 1 217 5 view .LVU30
 218:Core/Src/main.c ****     const int16_t TWO_FIVE = 2500;
 164              		.loc 1 218 5 view .LVU31
 219:Core/Src/main.c ****     const int16_t ONE = 1000;
 165              		.loc 1 219 5 view .LVU32
 220:Core/Src/main.c ****     const int16_t FOUR = 4000;
 166              		.loc 1 220 5 view .LVU33
 221:Core/Src/main.c **** 
 222:Core/Src/main.c ****     checksum = 0;
 167              		.loc 1 222 5 view .LVU34
 168              		.loc 1 222 14 is_stmt 0 view .LVU35
 169 0014 374B     		ldr	r3, .L14
 170 0016 0020     		movs	r0, #0
 171              	.LVL5:
 172              		.loc 1 222 14 view .LVU36
 173 0018 0021     		movs	r1, #0
 174              	.LVL6:
 175              		.loc 1 222 14 view .LVU37
 176 001a 1860     		str	r0, [r3]
 177 001c 5960     		str	r1, [r3, #4]
 223:Core/Src/main.c ****     for (int16_t y = 0; y < height; y++) {
 178              		.loc 1 223 5 is_stmt 1 view .LVU38
 179              	.LBB6:
ARM GAS  C:\Users\User\AppData\Local\Temp\ccfpKVWv.s 			page 8


 180              		.loc 1 223 10 view .LVU39
 181              	.LVL7:
 182              		.loc 1 223 18 is_stmt 0 view .LVU40
 183 001e 0024     		movs	r4, #0
 184 0020 0694     		str	r4, [sp, #24]
 185 0022 5B46     		mov	r3, fp
 186 0024 0793     		str	r3, [sp, #28]
 187              		.loc 1 223 5 view .LVU41
 188 0026 50E0     		b	.L5
 189              	.LVL8:
 190              	.L8:
 191              	.LBB7:
 192              	.LBB8:
 193              	.LBB9:
 224:Core/Src/main.c ****         for (int16_t x = 0; x < width; x++) {
 225:Core/Src/main.c ****         	int16_t x0 = (x * THREE_FIVE) / width - TWO_FIVE;
 226:Core/Src/main.c ****         	int16_t y0 = (y * TWO) / height - ONE;
 227:Core/Src/main.c ****         	int16_t xi = 0;
 228:Core/Src/main.c ****         	int16_t yi = 0;
 229:Core/Src/main.c ****         	int16_t iteration = 0;
 230:Core/Src/main.c ****             while (((((int16_t)xi * xi + (int16_t)yi * yi) / SCALE) <= FOUR) && (iteration < max_it
 231:Core/Src/main.c ****             	int16_t xi_temp = (xi * xi - yi * yi) / SCALE + x0;
 194              		.loc 1 231 14 is_stmt 1 view .LVU42
 195              		.loc 1 231 41 is_stmt 0 view .LVU43
 196 0028 E01A     		subs	r0, r4, r3
 197              		.loc 1 231 52 view .LVU44
 198 002a FA21     		movs	r1, #250
 199 002c 8900     		lsls	r1, r1, #2
 200 002e FFF7FEFF 		bl	__aeabi_idiv
 201              	.LVL9:
 202              		.loc 1 231 60 view .LVU45
 203 0032 4844     		add	r0, r0, r9
 204              		.loc 1 231 22 view .LVU46
 205 0034 04B2     		sxth	r4, r0
 206              	.LVL10:
 232:Core/Src/main.c ****             	int16_t yi_temp = ((int16_t)2 * xi * yi) / SCALE + y0;
 207              		.loc 1 232 14 is_stmt 1 view .LVU47
 208              		.loc 1 232 49 is_stmt 0 view .LVU48
 209 0036 3000     		movs	r0, r6
 210 0038 7843     		muls	r0, r7
 211              		.loc 1 232 55 view .LVU49
 212 003a FA21     		movs	r1, #250
 213 003c 4900     		lsls	r1, r1, #1
 214 003e FFF7FEFF 		bl	__aeabi_idiv
 215              	.LVL11:
 216              		.loc 1 232 63 view .LVU50
 217 0042 0300     		movs	r3, r0
 218 0044 4344     		add	r3, r3, r8
 219              		.loc 1 232 22 view .LVU51
 220 0046 1BB2     		sxth	r3, r3
 221              	.LVL12:
 233:Core/Src/main.c ****                 xi = xi_temp;
 222              		.loc 1 233 17 is_stmt 1 view .LVU52
 234:Core/Src/main.c ****                 yi = yi_temp;
 223              		.loc 1 234 17 view .LVU53
 235:Core/Src/main.c ****                 iteration++;
 224              		.loc 1 235 17 view .LVU54
ARM GAS  C:\Users\User\AppData\Local\Temp\ccfpKVWv.s 			page 9


 225              		.loc 1 235 26 is_stmt 0 view .LVU55
 226 0048 0135     		adds	r5, r5, #1
 227              	.LVL13:
 228              		.loc 1 235 26 view .LVU56
 229 004a 2DB2     		sxth	r5, r5
 230              	.LVL14:
 231              	.L6:
 232              		.loc 1 235 26 view .LVU57
 233              	.LBE9:
 230:Core/Src/main.c ****             	int16_t xi_temp = (xi * xi - yi * yi) / SCALE + x0;
 234              		.loc 1 230 78 is_stmt 1 view .LVU58
 230:Core/Src/main.c ****             	int16_t xi_temp = (xi * xi - yi * yi) / SCALE + x0;
 235              		.loc 1 230 23 is_stmt 0 view .LVU59
 236 004c 2700     		movs	r7, r4
 230:Core/Src/main.c ****             	int16_t xi_temp = (xi * xi - yi * yi) / SCALE + x0;
 237              		.loc 1 230 35 view .LVU60
 238 004e 6443     		muls	r4, r4
 239              	.LVL15:
 230:Core/Src/main.c ****             	int16_t xi_temp = (xi * xi - yi * yi) / SCALE + x0;
 240              		.loc 1 230 42 view .LVU61
 241 0050 1E00     		movs	r6, r3
 230:Core/Src/main.c ****             	int16_t xi_temp = (xi * xi - yi * yi) / SCALE + x0;
 242              		.loc 1 230 54 view .LVU62
 243 0052 5B43     		muls	r3, r3
 244              	.LVL16:
 230:Core/Src/main.c ****             	int16_t xi_temp = (xi * xi - yi * yi) / SCALE + x0;
 245              		.loc 1 230 40 view .LVU63
 246 0054 E118     		adds	r1, r4, r3
 230:Core/Src/main.c ****             	int16_t xi_temp = (xi * xi - yi * yi) / SCALE + x0;
 247              		.loc 1 230 78 view .LVU64
 248 0056 284A     		ldr	r2, .L14+4
 249 0058 9142     		cmp	r1, r2
 250 005a 02DC     		bgt	.L7
 230:Core/Src/main.c ****             	int16_t xi_temp = (xi * xi - yi * yi) / SCALE + x0;
 251              		.loc 1 230 78 discriminator 1 view .LVU65
 252 005c 019A     		ldr	r2, [sp, #4]
 253 005e 9542     		cmp	r5, r2
 254 0060 E2DB     		blt	.L8
 255              	.L7:
 236:Core/Src/main.c ****             }
 237:Core/Src/main.c ****             checksum += iteration;
 256              		.loc 1 237 22 view .LVU66
 257 0062 049F     		ldr	r7, [sp, #16]
 258              	.LVL17:
 259              		.loc 1 237 13 is_stmt 1 view .LVU67
 260              		.loc 1 237 22 is_stmt 0 view .LVU68
 261 0064 2349     		ldr	r1, .L14
 262 0066 0295     		str	r5, [sp, #8]
 263 0068 EB17     		asrs	r3, r5, #31
 264 006a 0393     		str	r3, [sp, #12]
 265 006c 0A68     		ldr	r2, [r1]
 266 006e 4B68     		ldr	r3, [r1, #4]
 267 0070 029C     		ldr	r4, [sp, #8]
 268 0072 039D     		ldr	r5, [sp, #12]
 269 0074 1219     		adds	r2, r2, r4
 270 0076 6B41     		adcs	r3, r3, r5
 271 0078 0A60     		str	r2, [r1]
ARM GAS  C:\Users\User\AppData\Local\Temp\ccfpKVWv.s 			page 10


 272 007a 4B60     		str	r3, [r1, #4]
 273              	.LBE8:
 224:Core/Src/main.c ****         	int16_t x0 = (x * THREE_FIVE) / width - TWO_FIVE;
 274              		.loc 1 224 41 is_stmt 1 discriminator 2 view .LVU69
 275 007c 0137     		adds	r7, r7, #1
 276 007e 3FB2     		sxth	r7, r7
 277              	.LVL18:
 278              	.L10:
 224:Core/Src/main.c ****         	int16_t x0 = (x * THREE_FIVE) / width - TWO_FIVE;
 279              		.loc 1 224 31 discriminator 1 view .LVU70
 280 0080 5745     		cmp	r7, r10
 281 0082 1DDA     		bge	.L12
 282              	.LBB10:
 225:Core/Src/main.c ****         	int16_t y0 = (y * TWO) / height - ONE;
 283              		.loc 1 225 10 view .LVU71
 225:Core/Src/main.c ****         	int16_t y0 = (y * TWO) / height - ONE;
 284              		.loc 1 225 26 is_stmt 0 view .LVU72
 285 0084 1D48     		ldr	r0, .L14+8
 286 0086 7843     		muls	r0, r7
 225:Core/Src/main.c ****         	int16_t y0 = (y * TWO) / height - ONE;
 287              		.loc 1 225 40 view .LVU73
 288 0088 5146     		mov	r1, r10
 289 008a FFF7FEFF 		bl	__aeabi_idiv
 290              	.LVL19:
 225:Core/Src/main.c ****         	int16_t y0 = (y * TWO) / height - ONE;
 291              		.loc 1 225 48 view .LVU74
 292 008e 1C4B     		ldr	r3, .L14+12
 293 0090 9C46     		mov	ip, r3
 294 0092 6044     		add	r0, r0, ip
 295 0094 83B2     		uxth	r3, r0
 296 0096 9946     		mov	r9, r3
 297              	.LVL20:
 226:Core/Src/main.c ****         	int16_t xi = 0;
 298              		.loc 1 226 10 is_stmt 1 view .LVU75
 226:Core/Src/main.c ****         	int16_t xi = 0;
 299              		.loc 1 226 26 is_stmt 0 view .LVU76
 300 0098 059B     		ldr	r3, [sp, #20]
 301 009a 5801     		lsls	r0, r3, #5
 302 009c C01A     		subs	r0, r0, r3
 303 009e 8000     		lsls	r0, r0, #2
 304 00a0 9C46     		mov	ip, r3
 305 00a2 6044     		add	r0, r0, ip
 306 00a4 0001     		lsls	r0, r0, #4
 226:Core/Src/main.c ****         	int16_t xi = 0;
 307              		.loc 1 226 33 view .LVU77
 308 00a6 5946     		mov	r1, fp
 309 00a8 FFF7FEFF 		bl	__aeabi_idiv
 310              	.LVL21:
 226:Core/Src/main.c ****         	int16_t xi = 0;
 311              		.loc 1 226 42 view .LVU78
 312 00ac 154B     		ldr	r3, .L14+16
 313 00ae 9C46     		mov	ip, r3
 314 00b0 6044     		add	r0, r0, ip
 315 00b2 83B2     		uxth	r3, r0
 316 00b4 9846     		mov	r8, r3
 317              	.LVL22:
 227:Core/Src/main.c ****         	int16_t yi = 0;
ARM GAS  C:\Users\User\AppData\Local\Temp\ccfpKVWv.s 			page 11


 318              		.loc 1 227 10 is_stmt 1 view .LVU79
 228:Core/Src/main.c ****         	int16_t iteration = 0;
 319              		.loc 1 228 10 view .LVU80
 229:Core/Src/main.c ****             while (((((int16_t)xi * xi + (int16_t)yi * yi) / SCALE) <= FOUR) && (iteration < max_it
 320              		.loc 1 229 10 view .LVU81
 230:Core/Src/main.c ****             	int16_t xi_temp = (xi * xi - yi * yi) / SCALE + x0;
 321              		.loc 1 230 13 view .LVU82
 229:Core/Src/main.c ****             while (((((int16_t)xi * xi + (int16_t)yi * yi) / SCALE) <= FOUR) && (iteration < max_it
 322              		.loc 1 229 18 is_stmt 0 view .LVU83
 323 00b6 0025     		movs	r5, #0
 228:Core/Src/main.c ****         	int16_t iteration = 0;
 324              		.loc 1 228 18 view .LVU84
 325 00b8 0023     		movs	r3, #0
 227:Core/Src/main.c ****         	int16_t yi = 0;
 326              		.loc 1 227 18 view .LVU85
 327 00ba 0024     		movs	r4, #0
 328 00bc 0497     		str	r7, [sp, #16]
 230:Core/Src/main.c ****             	int16_t xi_temp = (xi * xi - yi * yi) / SCALE + x0;
 329              		.loc 1 230 19 view .LVU86
 330 00be C5E7     		b	.L6
 331              	.LVL23:
 332              	.L12:
 230:Core/Src/main.c ****             	int16_t xi_temp = (xi * xi - yi * yi) / SCALE + x0;
 333              		.loc 1 230 19 view .LVU87
 334              	.LBE10:
 335              	.LBE7:
 223:Core/Src/main.c ****         for (int16_t x = 0; x < width; x++) {
 336              		.loc 1 223 38 discriminator 2 view .LVU88
 337 00c0 DA46     		mov	r10, fp
 223:Core/Src/main.c ****         for (int16_t x = 0; x < width; x++) {
 338              		.loc 1 223 38 is_stmt 1 discriminator 2 view .LVU89
 339 00c2 069B     		ldr	r3, [sp, #24]
 340 00c4 0133     		adds	r3, r3, #1
 341 00c6 1BB2     		sxth	r3, r3
 342 00c8 0693     		str	r3, [sp, #24]
 343              	.LVL24:
 344              	.L5:
 223:Core/Src/main.c ****         for (int16_t x = 0; x < width; x++) {
 345              		.loc 1 223 27 discriminator 1 view .LVU90
 346 00ca 069B     		ldr	r3, [sp, #24]
 347 00cc 9B46     		mov	fp, r3
 348 00ce 5345     		cmp	r3, r10
 349 00d0 06DA     		bge	.L13
 350              	.LBB11:
 224:Core/Src/main.c ****         	int16_t x0 = (x * THREE_FIVE) / width - TWO_FIVE;
 351              		.loc 1 224 22 is_stmt 0 view .LVU91
 352 00d2 0027     		movs	r7, #0
 353 00d4 5B46     		mov	r3, fp
 354 00d6 0593     		str	r3, [sp, #20]
 355 00d8 D346     		mov	fp, r10
 356 00da 079B     		ldr	r3, [sp, #28]
 357 00dc 9A46     		mov	r10, r3
 358              	.LVL25:
 224:Core/Src/main.c ****         	int16_t x0 = (x * THREE_FIVE) / width - TWO_FIVE;
 359              		.loc 1 224 22 view .LVU92
 360 00de CFE7     		b	.L10
 361              	.LVL26:
ARM GAS  C:\Users\User\AppData\Local\Temp\ccfpKVWv.s 			page 12


 362              	.L13:
 224:Core/Src/main.c ****         	int16_t x0 = (x * THREE_FIVE) / width - TWO_FIVE;
 363              		.loc 1 224 22 view .LVU93
 364              	.LBE11:
 365              	.LBE6:
 238:Core/Src/main.c ****         }
 239:Core/Src/main.c ****     }
 240:Core/Src/main.c ****     return checksum;
 366              		.loc 1 240 5 is_stmt 1 view .LVU94
 367              		.loc 1 240 12 is_stmt 0 view .LVU95
 368 00e0 044B     		ldr	r3, .L14
 369              		.loc 1 240 12 discriminator 1 view .LVU96
 370 00e2 1868     		ldr	r0, [r3]
 371 00e4 5968     		ldr	r1, [r3, #4]
 241:Core/Src/main.c **** }
 372              		.loc 1 241 1 view .LVU97
 373 00e6 09B0     		add	sp, sp, #36
 374              		@ sp needed
 375              	.LVL27:
 376              		.loc 1 241 1 view .LVU98
 377 00e8 F0BC     		pop	{r4, r5, r6, r7}
 378 00ea BB46     		mov	fp, r7
 379 00ec B246     		mov	r10, r6
 380 00ee A946     		mov	r9, r5
 381 00f0 A046     		mov	r8, r4
 382 00f2 F0BD     		pop	{r4, r5, r6, r7, pc}
 383              	.L15:
 384              		.align	2
 385              	.L14:
 386 00f4 00000000 		.word	checksum
 387 00f8 E70C3D00 		.word	4000999
 388 00fc AC0D0000 		.word	3500
 389 0100 3CF6FFFF 		.word	-2500
 390 0104 18FCFFFF 		.word	-1000
 391              		.cfi_endproc
 392              	.LFE43:
 394              		.global	__aeabi_i2d
 395              		.global	__aeabi_ddiv
 396              		.global	__aeabi_dmul
 397              		.global	__aeabi_dsub
 398              		.global	__aeabi_dadd
 399              		.global	__aeabi_dcmple
 400              		.section	.text.calculate_mandelbrot_double,"ax",%progbits
 401              		.align	1
 402              		.global	calculate_mandelbrot_double
 403              		.syntax unified
 404              		.code	16
 405              		.thumb_func
 407              	calculate_mandelbrot_double:
 408              	.LVL28:
 409              	.LFB44:
 242:Core/Src/main.c **** 
 243:Core/Src/main.c **** //TODO: Mandelbroat using variable type double
 244:Core/Src/main.c **** uint64_t calculate_mandelbrot_double(int width, int height, int max_iterations){
 410              		.loc 1 244 80 is_stmt 1 view -0
 411              		.cfi_startproc
 412              		@ args = 0, pretend = 0, frame = 56
ARM GAS  C:\Users\User\AppData\Local\Temp\ccfpKVWv.s 			page 13


 413              		@ frame_needed = 0, uses_anonymous_args = 0
 414              		.loc 1 244 80 is_stmt 0 view .LVU100
 415 0000 F0B5     		push	{r4, r5, r6, r7, lr}
 416              	.LCFI5:
 417              		.cfi_def_cfa_offset 20
 418              		.cfi_offset 4, -20
 419              		.cfi_offset 5, -16
 420              		.cfi_offset 6, -12
 421              		.cfi_offset 7, -8
 422              		.cfi_offset 14, -4
 423 0002 DE46     		mov	lr, fp
 424 0004 5746     		mov	r7, r10
 425 0006 4E46     		mov	r6, r9
 426 0008 4546     		mov	r5, r8
 427 000a E0B5     		push	{r5, r6, r7, lr}
 428              	.LCFI6:
 429              		.cfi_def_cfa_offset 36
 430              		.cfi_offset 8, -36
 431              		.cfi_offset 9, -32
 432              		.cfi_offset 10, -28
 433              		.cfi_offset 11, -24
 434 000c 8FB0     		sub	sp, sp, #60
 435              	.LCFI7:
 436              		.cfi_def_cfa_offset 96
 437 000e 0D91     		str	r1, [sp, #52]
 438 0010 9146     		mov	r9, r2
 245:Core/Src/main.c ****     //uint64_t mandelbrot_sum = 0;
 246:Core/Src/main.c ****     //TODO: Complete the function implementation
 247:Core/Src/main.c ****     checksum = 0;
 439              		.loc 1 247 5 is_stmt 1 view .LVU101
 440              		.loc 1 247 14 is_stmt 0 view .LVU102
 441 0012 5749     		ldr	r1, .L28
 442              	.LVL29:
 443              		.loc 1 247 14 view .LVU103
 444 0014 0022     		movs	r2, #0
 445              	.LVL30:
 446              		.loc 1 247 14 view .LVU104
 447 0016 0023     		movs	r3, #0
 448 0018 0A60     		str	r2, [r1]
 449 001a 4B60     		str	r3, [r1, #4]
 248:Core/Src/main.c ****     for (int y = 0; y <= height-1; y++) {
 450              		.loc 1 248 5 is_stmt 1 view .LVU105
 451              	.LBB12:
 452              		.loc 1 248 10 view .LVU106
 453              	.LVL31:
 454              		.loc 1 248 14 is_stmt 0 view .LVU107
 455 001c 0023     		movs	r3, #0
 456 001e 0C93     		str	r3, [sp, #48]
 457 0020 0B90     		str	r0, [sp, #44]
 458              		.loc 1 248 5 view .LVU108
 459 0022 8EE0     		b	.L17
 460              	.LVL32:
 461              	.L21:
 462              	.LBB13:
 463              	.LBB14:
 464              	.LBB15:
 249:Core/Src/main.c ****         for (int x = 0; x <= width-1; x++) {
ARM GAS  C:\Users\User\AppData\Local\Temp\ccfpKVWv.s 			page 14


 250:Core/Src/main.c ****             double x0 = ((double)x/(double)width)*(3.5)-2.5;
 251:Core/Src/main.c ****             double y0 = ((double)y/(double)height)*(2.0)-1.0;
 252:Core/Src/main.c ****             int iteration = 0;
 253:Core/Src/main.c ****             double xi = 0;
 254:Core/Src/main.c ****             double yi = 0;
 255:Core/Src/main.c ****             while ((xi*xi + yi*yi) <= (4) && iteration < max_iterations) {
 256:Core/Src/main.c ****                 double temp = (xi*xi - yi*yi);
 465              		.loc 1 256 17 is_stmt 1 view .LVU109
 466              		.loc 1 256 24 is_stmt 0 view .LVU110
 467 0024 029A     		ldr	r2, [sp, #8]
 468 0026 039B     		ldr	r3, [sp, #12]
 469 0028 0098     		ldr	r0, [sp]
 470 002a 0199     		ldr	r1, [sp, #4]
 471 002c FFF7FEFF 		bl	__aeabi_dsub
 472              	.LVL33:
 473 0030 0090     		str	r0, [sp]
 474 0032 0191     		str	r1, [sp, #4]
 475              	.LVL34:
 257:Core/Src/main.c ****                 yi = (2*xi*yi)+y0;
 476              		.loc 1 257 17 is_stmt 1 view .LVU111
 477              		.loc 1 257 24 is_stmt 0 view .LVU112
 478 0034 3200     		movs	r2, r6
 479 0036 3B00     		movs	r3, r7
 480 0038 3000     		movs	r0, r6
 481              	.LVL35:
 482              		.loc 1 257 24 view .LVU113
 483 003a 3900     		movs	r1, r7
 484 003c FFF7FEFF 		bl	__aeabi_dadd
 485              	.LVL36:
 486              		.loc 1 257 27 view .LVU114
 487 0040 2200     		movs	r2, r4
 488 0042 2B00     		movs	r3, r5
 489 0044 FFF7FEFF 		bl	__aeabi_dmul
 490              	.LVL37:
 491              		.loc 1 257 20 view .LVU115
 492 0048 069A     		ldr	r2, [sp, #24]
 493 004a 079B     		ldr	r3, [sp, #28]
 494 004c FFF7FEFF 		bl	__aeabi_dadd
 495              	.LVL38:
 496 0050 0400     		movs	r4, r0
 497              	.LVL39:
 498              		.loc 1 257 20 view .LVU116
 499 0052 0D00     		movs	r5, r1
 500              	.LVL40:
 258:Core/Src/main.c ****                 xi = temp+x0;
 501              		.loc 1 258 17 is_stmt 1 view .LVU117
 502              		.loc 1 258 20 is_stmt 0 view .LVU118
 503 0054 009A     		ldr	r2, [sp]
 504 0056 019B     		ldr	r3, [sp, #4]
 505 0058 0498     		ldr	r0, [sp, #16]
 506 005a 0599     		ldr	r1, [sp, #20]
 507 005c FFF7FEFF 		bl	__aeabi_dadd
 508              	.LVL41:
 509 0060 0600     		movs	r6, r0
 510              	.LVL42:
 511              		.loc 1 258 20 view .LVU119
 512 0062 0F00     		movs	r7, r1
ARM GAS  C:\Users\User\AppData\Local\Temp\ccfpKVWv.s 			page 15


 513              	.LVL43:
 259:Core/Src/main.c ****                 iteration++;
 514              		.loc 1 259 17 is_stmt 1 view .LVU120
 515              		.loc 1 259 26 is_stmt 0 view .LVU121
 516 0064 0123     		movs	r3, #1
 517 0066 9C46     		mov	ip, r3
 518 0068 E044     		add	r8, r8, ip
 519              	.LVL44:
 520              	.L18:
 521              		.loc 1 259 26 view .LVU122
 522              	.LBE15:
 255:Core/Src/main.c ****                 double temp = (xi*xi - yi*yi);
 523              		.loc 1 255 43 is_stmt 1 view .LVU123
 255:Core/Src/main.c ****                 double temp = (xi*xi - yi*yi);
 524              		.loc 1 255 23 is_stmt 0 view .LVU124
 525 006a 3200     		movs	r2, r6
 526 006c 3B00     		movs	r3, r7
 527 006e 3000     		movs	r0, r6
 528 0070 3900     		movs	r1, r7
 529 0072 FFF7FEFF 		bl	__aeabi_dmul
 530              	.LVL45:
 531 0076 0090     		str	r0, [sp]
 532 0078 0191     		str	r1, [sp, #4]
 255:Core/Src/main.c ****                 double temp = (xi*xi - yi*yi);
 533              		.loc 1 255 31 view .LVU125
 534 007a 2200     		movs	r2, r4
 535 007c 2B00     		movs	r3, r5
 536 007e 2000     		movs	r0, r4
 537 0080 2900     		movs	r1, r5
 538 0082 FFF7FEFF 		bl	__aeabi_dmul
 539              	.LVL46:
 540 0086 0200     		movs	r2, r0
 541 0088 0B00     		movs	r3, r1
 542 008a 0292     		str	r2, [sp, #8]
 543 008c 0393     		str	r3, [sp, #12]
 255:Core/Src/main.c ****                 double temp = (xi*xi - yi*yi);
 544              		.loc 1 255 27 view .LVU126
 545 008e 0098     		ldr	r0, [sp]
 546 0090 0199     		ldr	r1, [sp, #4]
 547 0092 FFF7FEFF 		bl	__aeabi_dadd
 548              	.LVL47:
 255:Core/Src/main.c ****                 double temp = (xi*xi - yi*yi);
 549              		.loc 1 255 43 view .LVU127
 550 0096 0022     		movs	r2, #0
 551 0098 364B     		ldr	r3, .L28+4
 552 009a FFF7FEFF 		bl	__aeabi_dcmple
 553              	.LVL48:
 554 009e 0028     		cmp	r0, #0
 555 00a0 01D0     		beq	.L19
 255:Core/Src/main.c ****                 double temp = (xi*xi - yi*yi);
 556              		.loc 1 255 43 discriminator 1 view .LVU128
 557 00a2 C845     		cmp	r8, r9
 558 00a4 BEDB     		blt	.L21
 559              	.L19:
 260:Core/Src/main.c ****             }
 261:Core/Src/main.c ****             checksum += iteration;
 560              		.loc 1 261 13 is_stmt 1 view .LVU129
ARM GAS  C:\Users\User\AppData\Local\Temp\ccfpKVWv.s 			page 16


 561              		.loc 1 261 22 is_stmt 0 view .LVU130
 562 00a6 3249     		ldr	r1, .L28
 563 00a8 4346     		mov	r3, r8
 564 00aa 0893     		str	r3, [sp, #32]
 565 00ac DB17     		asrs	r3, r3, #31
 566 00ae 0993     		str	r3, [sp, #36]
 567 00b0 0A68     		ldr	r2, [r1]
 568 00b2 4B68     		ldr	r3, [r1, #4]
 569 00b4 089C     		ldr	r4, [sp, #32]
 570 00b6 099D     		ldr	r5, [sp, #36]
 571              	.LVL49:
 572              		.loc 1 261 22 view .LVU131
 573 00b8 1219     		adds	r2, r2, r4
 574 00ba 6B41     		adcs	r3, r3, r5
 575 00bc 0A60     		str	r2, [r1]
 576 00be 4B60     		str	r3, [r1, #4]
 577              	.LBE14:
 249:Core/Src/main.c ****             double x0 = ((double)x/(double)width)*(3.5)-2.5;
 578              		.loc 1 249 40 is_stmt 1 discriminator 2 view .LVU132
 579 00c0 0A9B     		ldr	r3, [sp, #40]
 580 00c2 0133     		adds	r3, r3, #1
 581 00c4 0A93     		str	r3, [sp, #40]
 582              	.LVL50:
 583              	.L23:
 249:Core/Src/main.c ****             double x0 = ((double)x/(double)width)*(3.5)-2.5;
 584              		.loc 1 249 27 discriminator 1 view .LVU133
 585 00c6 0A9B     		ldr	r3, [sp, #40]
 586 00c8 0B9A     		ldr	r2, [sp, #44]
 587 00ca 9342     		cmp	r3, r2
 588 00cc 36DA     		bge	.L26
 589              	.LBB16:
 250:Core/Src/main.c ****             double y0 = ((double)y/(double)height)*(2.0)-1.0;
 590              		.loc 1 250 13 view .LVU134
 250:Core/Src/main.c ****             double y0 = ((double)y/(double)height)*(2.0)-1.0;
 591              		.loc 1 250 26 is_stmt 0 view .LVU135
 592 00ce 0A98     		ldr	r0, [sp, #40]
 593 00d0 FFF7FEFF 		bl	__aeabi_i2d
 594              	.LVL51:
 595 00d4 0400     		movs	r4, r0
 596 00d6 0D00     		movs	r5, r1
 250:Core/Src/main.c ****             double y0 = ((double)y/(double)height)*(2.0)-1.0;
 597              		.loc 1 250 36 view .LVU136
 598 00d8 0B98     		ldr	r0, [sp, #44]
 599 00da FFF7FEFF 		bl	__aeabi_i2d
 600              	.LVL52:
 601 00de 0200     		movs	r2, r0
 602 00e0 0B00     		movs	r3, r1
 250:Core/Src/main.c ****             double y0 = ((double)y/(double)height)*(2.0)-1.0;
 603              		.loc 1 250 35 view .LVU137
 604 00e2 2000     		movs	r0, r4
 605 00e4 2900     		movs	r1, r5
 606 00e6 FFF7FEFF 		bl	__aeabi_ddiv
 607              	.LVL53:
 250:Core/Src/main.c ****             double y0 = ((double)y/(double)height)*(2.0)-1.0;
 608              		.loc 1 250 50 view .LVU138
 609 00ea 0022     		movs	r2, #0
 610 00ec 224B     		ldr	r3, .L28+8
ARM GAS  C:\Users\User\AppData\Local\Temp\ccfpKVWv.s 			page 17


 611 00ee FFF7FEFF 		bl	__aeabi_dmul
 612              	.LVL54:
 250:Core/Src/main.c ****             double y0 = ((double)y/(double)height)*(2.0)-1.0;
 613              		.loc 1 250 20 view .LVU139
 614 00f2 0022     		movs	r2, #0
 615 00f4 214B     		ldr	r3, .L28+12
 616 00f6 FFF7FEFF 		bl	__aeabi_dsub
 617              	.LVL55:
 618 00fa 0490     		str	r0, [sp, #16]
 619 00fc 0591     		str	r1, [sp, #20]
 620              	.LVL56:
 251:Core/Src/main.c ****             int iteration = 0;
 621              		.loc 1 251 13 is_stmt 1 view .LVU140
 251:Core/Src/main.c ****             int iteration = 0;
 622              		.loc 1 251 26 is_stmt 0 view .LVU141
 623 00fe 5846     		mov	r0, fp
 624              	.LVL57:
 251:Core/Src/main.c ****             int iteration = 0;
 625              		.loc 1 251 26 view .LVU142
 626 0100 FFF7FEFF 		bl	__aeabi_i2d
 627              	.LVL58:
 628 0104 0400     		movs	r4, r0
 629 0106 0D00     		movs	r5, r1
 251:Core/Src/main.c ****             int iteration = 0;
 630              		.loc 1 251 36 view .LVU143
 631 0108 5046     		mov	r0, r10
 632 010a FFF7FEFF 		bl	__aeabi_i2d
 633              	.LVL59:
 634 010e 0200     		movs	r2, r0
 635 0110 0B00     		movs	r3, r1
 251:Core/Src/main.c ****             int iteration = 0;
 636              		.loc 1 251 35 view .LVU144
 637 0112 2000     		movs	r0, r4
 638 0114 2900     		movs	r1, r5
 639 0116 FFF7FEFF 		bl	__aeabi_ddiv
 640              	.LVL60:
 251:Core/Src/main.c ****             int iteration = 0;
 641              		.loc 1 251 51 view .LVU145
 642 011a 0200     		movs	r2, r0
 643 011c 0B00     		movs	r3, r1
 644 011e FFF7FEFF 		bl	__aeabi_dadd
 645              	.LVL61:
 251:Core/Src/main.c ****             int iteration = 0;
 646              		.loc 1 251 20 view .LVU146
 647 0122 0022     		movs	r2, #0
 648 0124 164B     		ldr	r3, .L28+16
 649 0126 FFF7FEFF 		bl	__aeabi_dsub
 650              	.LVL62:
 651 012a 0690     		str	r0, [sp, #24]
 652 012c 0791     		str	r1, [sp, #28]
 653              	.LVL63:
 252:Core/Src/main.c ****             double xi = 0;
 654              		.loc 1 252 13 is_stmt 1 view .LVU147
 253:Core/Src/main.c ****             double yi = 0;
 655              		.loc 1 253 13 view .LVU148
 254:Core/Src/main.c ****             while ((xi*xi + yi*yi) <= (4) && iteration < max_iterations) {
 656              		.loc 1 254 13 view .LVU149
ARM GAS  C:\Users\User\AppData\Local\Temp\ccfpKVWv.s 			page 18


 255:Core/Src/main.c ****                 double temp = (xi*xi - yi*yi);
 657              		.loc 1 255 13 view .LVU150
 254:Core/Src/main.c ****             while ((xi*xi + yi*yi) <= (4) && iteration < max_iterations) {
 658              		.loc 1 254 20 is_stmt 0 view .LVU151
 659 012e 0024     		movs	r4, #0
 660 0130 0025     		movs	r5, #0
 253:Core/Src/main.c ****             double yi = 0;
 661              		.loc 1 253 20 view .LVU152
 662 0132 2600     		movs	r6, r4
 663 0134 2F00     		movs	r7, r5
 252:Core/Src/main.c ****             double xi = 0;
 664              		.loc 1 252 17 view .LVU153
 665 0136 0023     		movs	r3, #0
 666 0138 9846     		mov	r8, r3
 255:Core/Src/main.c ****                 double temp = (xi*xi - yi*yi);
 667              		.loc 1 255 19 view .LVU154
 668 013a 96E7     		b	.L18
 669              	.LVL64:
 670              	.L26:
 255:Core/Src/main.c ****                 double temp = (xi*xi - yi*yi);
 671              		.loc 1 255 19 view .LVU155
 672              	.LBE16:
 673              	.LBE13:
 248:Core/Src/main.c ****         for (int x = 0; x <= width-1; x++) {
 674              		.loc 1 248 37 is_stmt 1 discriminator 2 view .LVU156
 675 013c 0C9B     		ldr	r3, [sp, #48]
 676              	.LVL65:
 248:Core/Src/main.c ****         for (int x = 0; x <= width-1; x++) {
 677              		.loc 1 248 37 is_stmt 0 discriminator 2 view .LVU157
 678 013e 0133     		adds	r3, r3, #1
 679 0140 0C93     		str	r3, [sp, #48]
 680              	.LVL66:
 681              	.L17:
 248:Core/Src/main.c ****         for (int x = 0; x <= width-1; x++) {
 682              		.loc 1 248 23 is_stmt 1 discriminator 1 view .LVU158
 683 0142 0C9B     		ldr	r3, [sp, #48]
 684 0144 0D9A     		ldr	r2, [sp, #52]
 685 0146 9342     		cmp	r3, r2
 686 0148 08DA     		bge	.L27
 687              	.LBB17:
 249:Core/Src/main.c ****             double x0 = ((double)x/(double)width)*(3.5)-2.5;
 688              		.loc 1 249 18 is_stmt 0 view .LVU159
 689 014a 0023     		movs	r3, #0
 690 014c 9A46     		mov	r10, r3
 691 014e 0C9B     		ldr	r3, [sp, #48]
 692 0150 9B46     		mov	fp, r3
 693 0152 5346     		mov	r3, r10
 694 0154 0A93     		str	r3, [sp, #40]
 695 0156 0D9B     		ldr	r3, [sp, #52]
 696 0158 9A46     		mov	r10, r3
 697 015a B4E7     		b	.L23
 698              	.LVL67:
 699              	.L27:
 249:Core/Src/main.c ****             double x0 = ((double)x/(double)width)*(3.5)-2.5;
 700              		.loc 1 249 18 view .LVU160
 701              	.LBE17:
 702              	.LBE12:
ARM GAS  C:\Users\User\AppData\Local\Temp\ccfpKVWv.s 			page 19


 262:Core/Src/main.c ****         }
 263:Core/Src/main.c ****     }
 264:Core/Src/main.c ****     return checksum;
 703              		.loc 1 264 5 is_stmt 1 view .LVU161
 704              		.loc 1 264 12 is_stmt 0 view .LVU162
 705 015c 044B     		ldr	r3, .L28
 706              	.LVL68:
 707              		.loc 1 264 12 discriminator 1 view .LVU163
 708 015e 1868     		ldr	r0, [r3]
 709 0160 5968     		ldr	r1, [r3, #4]
 265:Core/Src/main.c **** }
 710              		.loc 1 265 1 view .LVU164
 711 0162 0FB0     		add	sp, sp, #60
 712              		@ sp needed
 713              	.LVL69:
 714              		.loc 1 265 1 view .LVU165
 715 0164 F0BC     		pop	{r4, r5, r6, r7}
 716 0166 BB46     		mov	fp, r7
 717 0168 B246     		mov	r10, r6
 718 016a A946     		mov	r9, r5
 719 016c A046     		mov	r8, r4
 720 016e F0BD     		pop	{r4, r5, r6, r7, pc}
 721              	.L29:
 722              		.align	2
 723              	.L28:
 724 0170 00000000 		.word	checksum
 725 0174 00001040 		.word	1074790400
 726 0178 00000C40 		.word	1074528256
 727 017c 00000440 		.word	1074003968
 728 0180 0000F03F 		.word	1072693248
 729              		.cfi_endproc
 730              	.LFE44:
 732              		.section	.text.Error_Handler,"ax",%progbits
 733              		.align	1
 734              		.global	Error_Handler
 735              		.syntax unified
 736              		.code	16
 737              		.thumb_func
 739              	Error_Handler:
 740              	.LFB45:
 266:Core/Src/main.c **** 
 267:Core/Src/main.c **** /* USER CODE END 4 */
 268:Core/Src/main.c **** 
 269:Core/Src/main.c **** /**
 270:Core/Src/main.c ****   * @brief  This function is executed in case of error occurrence.
 271:Core/Src/main.c ****   * @retval None
 272:Core/Src/main.c ****   */
 273:Core/Src/main.c **** void Error_Handler(void)
 274:Core/Src/main.c **** {
 741              		.loc 1 274 1 is_stmt 1 view -0
 742              		.cfi_startproc
 743              		@ Volatile: function does not return.
 744              		@ args = 0, pretend = 0, frame = 0
 745              		@ frame_needed = 0, uses_anonymous_args = 0
 746              		@ link register save eliminated.
 275:Core/Src/main.c ****   /* USER CODE BEGIN Error_Handler_Debug */
 276:Core/Src/main.c ****   /* User can add his own implementation to report the HAL error return state */
ARM GAS  C:\Users\User\AppData\Local\Temp\ccfpKVWv.s 			page 20


 277:Core/Src/main.c ****   __disable_irq();
 747              		.loc 1 277 3 view .LVU167
 748              	.LBB18:
 749              	.LBI18:
 750              		.file 2 "Drivers/CMSIS/Include/cmsis_gcc.h"
   1:Drivers/CMSIS/Include/cmsis_gcc.h **** /**************************************************************************//**
   2:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @file     cmsis_gcc.h
   3:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @brief    CMSIS compiler GCC header file
   4:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @version  V5.0.4
   5:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @date     09. April 2018
   6:Drivers/CMSIS/Include/cmsis_gcc.h ****  ******************************************************************************/
   7:Drivers/CMSIS/Include/cmsis_gcc.h **** /*
   8:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Copyright (c) 2009-2018 Arm Limited. All rights reserved.
   9:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  10:Drivers/CMSIS/Include/cmsis_gcc.h ****  * SPDX-License-Identifier: Apache-2.0
  11:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  12:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Licensed under the Apache License, Version 2.0 (the License); you may
  13:Drivers/CMSIS/Include/cmsis_gcc.h ****  * not use this file except in compliance with the License.
  14:Drivers/CMSIS/Include/cmsis_gcc.h ****  * You may obtain a copy of the License at
  15:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  16:Drivers/CMSIS/Include/cmsis_gcc.h ****  * www.apache.org/licenses/LICENSE-2.0
  17:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  18:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Unless required by applicable law or agreed to in writing, software
  19:Drivers/CMSIS/Include/cmsis_gcc.h ****  * distributed under the License is distributed on an AS IS BASIS, WITHOUT
  20:Drivers/CMSIS/Include/cmsis_gcc.h ****  * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  21:Drivers/CMSIS/Include/cmsis_gcc.h ****  * See the License for the specific language governing permissions and
  22:Drivers/CMSIS/Include/cmsis_gcc.h ****  * limitations under the License.
  23:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
  24:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  25:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __CMSIS_GCC_H
  26:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_H
  27:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  28:Drivers/CMSIS/Include/cmsis_gcc.h **** /* ignore some GCC warnings */
  29:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic push
  30:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wsign-conversion"
  31:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wconversion"
  32:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wunused-parameter"
  33:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  34:Drivers/CMSIS/Include/cmsis_gcc.h **** /* Fallback for __has_builtin */
  35:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __has_builtin
  36:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __has_builtin(x) (0)
  37:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  38:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  39:Drivers/CMSIS/Include/cmsis_gcc.h **** /* CMSIS compiler specific defines */
  40:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __ASM
  41:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __ASM                                  __asm
  42:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  43:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __INLINE
  44:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __INLINE                               inline
  45:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  46:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __STATIC_INLINE
  47:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __STATIC_INLINE                        static inline
  48:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  49:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __STATIC_FORCEINLINE                 
  50:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __STATIC_FORCEINLINE                   __attribute__((always_inline)) static inline
  51:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif                                           
  52:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __NO_RETURN
ARM GAS  C:\Users\User\AppData\Local\Temp\ccfpKVWv.s 			page 21


  53:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __NO_RETURN                            __attribute__((__noreturn__))
  54:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  55:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __USED
  56:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __USED                                 __attribute__((used))
  57:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  58:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __WEAK
  59:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __WEAK                                 __attribute__((weak))
  60:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  61:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED
  62:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED                               __attribute__((packed, aligned(1)))
  63:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  64:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED_STRUCT
  65:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED_STRUCT                        struct __attribute__((packed, aligned(1)))
  66:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  67:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED_UNION
  68:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED_UNION                         union __attribute__((packed, aligned(1)))
  69:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  70:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32        /* deprecated */
  71:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  72:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  73:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  74:Drivers/CMSIS/Include/cmsis_gcc.h ****   struct __attribute__((packed)) T_UINT32 { uint32_t v; };
  75:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  76:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32(x)                  (((struct T_UINT32 *)(x))->v)
  77:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  78:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT16_WRITE
  79:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  80:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  81:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  82:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT16_WRITE { uint16_t v; };
  83:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  84:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT16_WRITE(addr, val)    (void)((((struct T_UINT16_WRITE *)(void *)(addr))-
  85:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  86:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT16_READ
  87:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  88:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  89:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  90:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT16_READ { uint16_t v; };
  91:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  92:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT16_READ(addr)          (((const struct T_UINT16_READ *)(const void *)(add
  93:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  94:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32_WRITE
  95:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  96:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  97:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  98:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT32_WRITE { uint32_t v; };
  99:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
 100:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32_WRITE(addr, val)    (void)((((struct T_UINT32_WRITE *)(void *)(addr))-
 101:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 102:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32_READ
 103:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
 104:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
 105:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
 106:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT32_READ { uint32_t v; };
 107:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
 108:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32_READ(addr)          (((const struct T_UINT32_READ *)(const void *)(add
 109:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
ARM GAS  C:\Users\User\AppData\Local\Temp\ccfpKVWv.s 			page 22


 110:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __ALIGNED
 111:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __ALIGNED(x)                           __attribute__((aligned(x)))
 112:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 113:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __RESTRICT
 114:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __RESTRICT                             __restrict
 115:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 116:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 117:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 118:Drivers/CMSIS/Include/cmsis_gcc.h **** /* ###########################  Core Function Access  ########################### */
 119:Drivers/CMSIS/Include/cmsis_gcc.h **** /** \ingroup  CMSIS_Core_FunctionInterface
 120:Drivers/CMSIS/Include/cmsis_gcc.h ****     \defgroup CMSIS_Core_RegAccFunctions CMSIS Core Register Access Functions
 121:Drivers/CMSIS/Include/cmsis_gcc.h ****   @{
 122:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 123:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 124:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 125:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Enable IRQ Interrupts
 126:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Enables IRQ interrupts by clearing the I-bit in the CPSR.
 127:Drivers/CMSIS/Include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 128:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 129:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __enable_irq(void)
 130:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 131:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("cpsie i" : : : "memory");
 132:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 133:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 134:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 135:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 136:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Disable IRQ Interrupts
 137:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Disables IRQ interrupts by setting the I-bit in the CPSR.
 138:Drivers/CMSIS/Include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 139:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 140:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __disable_irq(void)
 751              		.loc 2 140 27 view .LVU168
 752              	.LBB19:
 141:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 142:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("cpsid i" : : : "memory");
 753              		.loc 2 142 3 view .LVU169
 754              		.syntax divided
 755              	@ 142 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 756 0000 72B6     		cpsid i
 757              	@ 0 "" 2
 758              		.thumb
 759              		.syntax unified
 760              	.L31:
 761              	.LBE19:
 762              	.LBE18:
 278:Core/Src/main.c ****   while (1)
 763              		.loc 1 278 3 view .LVU170
 279:Core/Src/main.c ****   {
 280:Core/Src/main.c ****   }
 764              		.loc 1 280 3 view .LVU171
 278:Core/Src/main.c ****   while (1)
 765              		.loc 1 278 9 view .LVU172
 766 0002 FEE7     		b	.L31
 767              		.cfi_endproc
 768              	.LFE45:
 770              		.section	.text.SystemClock_Config,"ax",%progbits
 771              		.align	1
ARM GAS  C:\Users\User\AppData\Local\Temp\ccfpKVWv.s 			page 23


 772              		.global	SystemClock_Config
 773              		.syntax unified
 774              		.code	16
 775              		.thumb_func
 777              	SystemClock_Config:
 778              	.LFB41:
 153:Core/Src/main.c ****   RCC_OscInitTypeDef RCC_OscInitStruct = {0};
 779              		.loc 1 153 1 view -0
 780              		.cfi_startproc
 781              		@ args = 0, pretend = 0, frame = 64
 782              		@ frame_needed = 0, uses_anonymous_args = 0
 783 0000 00B5     		push	{lr}
 784              	.LCFI8:
 785              		.cfi_def_cfa_offset 4
 786              		.cfi_offset 14, -4
 787 0002 91B0     		sub	sp, sp, #68
 788              	.LCFI9:
 789              		.cfi_def_cfa_offset 72
 154:Core/Src/main.c ****   RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 790              		.loc 1 154 3 view .LVU174
 154:Core/Src/main.c ****   RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 791              		.loc 1 154 22 is_stmt 0 view .LVU175
 792 0004 3022     		movs	r2, #48
 793 0006 0021     		movs	r1, #0
 794 0008 04A8     		add	r0, sp, #16
 795 000a FFF7FEFF 		bl	memset
 796              	.LVL70:
 155:Core/Src/main.c **** 
 797              		.loc 1 155 3 is_stmt 1 view .LVU176
 155:Core/Src/main.c **** 
 798              		.loc 1 155 22 is_stmt 0 view .LVU177
 799 000e 1022     		movs	r2, #16
 800 0010 0021     		movs	r1, #0
 801 0012 6846     		mov	r0, sp
 802 0014 FFF7FEFF 		bl	memset
 803              	.LVL71:
 160:Core/Src/main.c ****   RCC_OscInitStruct.HSIState = RCC_HSI_ON;
 804              		.loc 1 160 3 is_stmt 1 view .LVU178
 160:Core/Src/main.c ****   RCC_OscInitStruct.HSIState = RCC_HSI_ON;
 805              		.loc 1 160 36 is_stmt 0 view .LVU179
 806 0018 0223     		movs	r3, #2
 807 001a 0493     		str	r3, [sp, #16]
 161:Core/Src/main.c ****   RCC_OscInitStruct.HSICalibrationValue = RCC_HSICALIBRATION_DEFAULT;
 808              		.loc 1 161 3 is_stmt 1 view .LVU180
 161:Core/Src/main.c ****   RCC_OscInitStruct.HSICalibrationValue = RCC_HSICALIBRATION_DEFAULT;
 809              		.loc 1 161 30 is_stmt 0 view .LVU181
 810 001c 013B     		subs	r3, r3, #1
 811 001e 0793     		str	r3, [sp, #28]
 162:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_NONE;
 812              		.loc 1 162 3 is_stmt 1 view .LVU182
 162:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_NONE;
 813              		.loc 1 162 41 is_stmt 0 view .LVU183
 814 0020 0F33     		adds	r3, r3, #15
 815 0022 0893     		str	r3, [sp, #32]
 163:Core/Src/main.c ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 816              		.loc 1 163 3 is_stmt 1 view .LVU184
 164:Core/Src/main.c ****   {
ARM GAS  C:\Users\User\AppData\Local\Temp\ccfpKVWv.s 			page 24


 817              		.loc 1 164 3 view .LVU185
 164:Core/Src/main.c ****   {
 818              		.loc 1 164 7 is_stmt 0 view .LVU186
 819 0024 04A8     		add	r0, sp, #16
 820 0026 FFF7FEFF 		bl	HAL_RCC_OscConfig
 821              	.LVL72:
 164:Core/Src/main.c ****   {
 822              		.loc 1 164 6 discriminator 1 view .LVU187
 823 002a 0028     		cmp	r0, #0
 824 002c 0DD1     		bne	.L35
 171:Core/Src/main.c ****                               |RCC_CLOCKTYPE_PCLK1;
 825              		.loc 1 171 3 is_stmt 1 view .LVU188
 171:Core/Src/main.c ****                               |RCC_CLOCKTYPE_PCLK1;
 826              		.loc 1 171 31 is_stmt 0 view .LVU189
 827 002e 0723     		movs	r3, #7
 828 0030 0093     		str	r3, [sp]
 173:Core/Src/main.c ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 829              		.loc 1 173 3 is_stmt 1 view .LVU190
 173:Core/Src/main.c ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 830              		.loc 1 173 34 is_stmt 0 view .LVU191
 831 0032 0023     		movs	r3, #0
 832 0034 0193     		str	r3, [sp, #4]
 174:Core/Src/main.c ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV1;
 833              		.loc 1 174 3 is_stmt 1 view .LVU192
 174:Core/Src/main.c ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV1;
 834              		.loc 1 174 35 is_stmt 0 view .LVU193
 835 0036 0293     		str	r3, [sp, #8]
 175:Core/Src/main.c **** 
 836              		.loc 1 175 3 is_stmt 1 view .LVU194
 175:Core/Src/main.c **** 
 837              		.loc 1 175 36 is_stmt 0 view .LVU195
 838 0038 0393     		str	r3, [sp, #12]
 177:Core/Src/main.c ****   {
 839              		.loc 1 177 3 is_stmt 1 view .LVU196
 177:Core/Src/main.c ****   {
 840              		.loc 1 177 7 is_stmt 0 view .LVU197
 841 003a 0021     		movs	r1, #0
 842 003c 6846     		mov	r0, sp
 843 003e FFF7FEFF 		bl	HAL_RCC_ClockConfig
 844              	.LVL73:
 177:Core/Src/main.c ****   {
 845              		.loc 1 177 6 discriminator 1 view .LVU198
 846 0042 0028     		cmp	r0, #0
 847 0044 03D1     		bne	.L36
 181:Core/Src/main.c **** 
 848              		.loc 1 181 1 view .LVU199
 849 0046 11B0     		add	sp, sp, #68
 850              		@ sp needed
 851 0048 00BD     		pop	{pc}
 852              	.L35:
 166:Core/Src/main.c ****   }
 853              		.loc 1 166 5 is_stmt 1 view .LVU200
 854 004a FFF7FEFF 		bl	Error_Handler
 855              	.LVL74:
 856              	.L36:
 179:Core/Src/main.c ****   }
 857              		.loc 1 179 5 view .LVU201
ARM GAS  C:\Users\User\AppData\Local\Temp\ccfpKVWv.s 			page 25


 858 004e FFF7FEFF 		bl	Error_Handler
 859              	.LVL75:
 860              		.cfi_endproc
 861              	.LFE41:
 863              		.section	.text.main,"ax",%progbits
 864              		.align	1
 865              		.global	main
 866              		.syntax unified
 867              		.code	16
 868              		.thumb_func
 870              	main:
 871              	.LFB40:
  80:Core/Src/main.c ****   /* USER CODE BEGIN 1 */
 872              		.loc 1 80 1 view -0
 873              		.cfi_startproc
 874              		@ args = 0, pretend = 0, frame = 0
 875              		@ frame_needed = 0, uses_anonymous_args = 0
 876 0000 70B5     		push	{r4, r5, r6, lr}
 877              	.LCFI10:
 878              		.cfi_def_cfa_offset 16
 879              		.cfi_offset 4, -16
 880              		.cfi_offset 5, -12
 881              		.cfi_offset 6, -8
 882              		.cfi_offset 14, -4
  88:Core/Src/main.c **** 
 883              		.loc 1 88 3 view .LVU203
 884 0002 FFF7FEFF 		bl	HAL_Init
 885              	.LVL76:
  95:Core/Src/main.c **** 
 886              		.loc 1 95 3 view .LVU204
 887 0006 FFF7FEFF 		bl	SystemClock_Config
 888              	.LVL77:
 102:Core/Src/main.c ****   /* USER CODE BEGIN 2 */
 889              		.loc 1 102 3 view .LVU205
 890 000a FFF7FEFF 		bl	MX_GPIO_Init
 891              	.LVL78:
 105:Core/Src/main.c **** 
 892              		.loc 1 105 3 view .LVU206
 893 000e 0122     		movs	r2, #1
 894 0010 0121     		movs	r1, #1
 895 0012 1848     		ldr	r0, .L41
 896 0014 FFF7FEFF 		bl	HAL_GPIO_WritePin
 897              	.LVL79:
 119:Core/Src/main.c ****         start_time = HAL_GetTick();
 898              		.loc 1 119 3 view .LVU207
 899              	.LBB20:
 119:Core/Src/main.c ****         start_time = HAL_GetTick();
 900              		.loc 1 119 8 view .LVU208
 119:Core/Src/main.c ****         start_time = HAL_GetTick();
 901              		.loc 1 119 12 is_stmt 0 view .LVU209
 902 0018 0024     		movs	r4, #0
 119:Core/Src/main.c ****         start_time = HAL_GetTick();
 903              		.loc 1 119 3 view .LVU210
 904 001a 18E0     		b	.L38
 905              	.LVL80:
 906              	.L39:
 120:Core/Src/main.c ****         checksum_array[i] = calculate_mandelbrot_fixed_point_arithmetic(size_array[i], size_array[i
ARM GAS  C:\Users\User\AppData\Local\Temp\ccfpKVWv.s 			page 26


 907              		.loc 1 120 9 is_stmt 1 view .LVU211
 120:Core/Src/main.c ****         checksum_array[i] = calculate_mandelbrot_fixed_point_arithmetic(size_array[i], size_array[i
 908              		.loc 1 120 22 is_stmt 0 view .LVU212
 909 001c FFF7FEFF 		bl	HAL_GetTick
 910              	.LVL81:
 120:Core/Src/main.c ****         checksum_array[i] = calculate_mandelbrot_fixed_point_arithmetic(size_array[i], size_array[i
 911              		.loc 1 120 20 discriminator 1 view .LVU213
 912 0020 154E     		ldr	r6, .L41+4
 913 0022 3060     		str	r0, [r6]
 121:Core/Src/main.c ****         //checksum_array[i] = calculate_mandelbrot_double(size_array[i], size_array[i], MAX_ITER);
 914              		.loc 1 121 9 is_stmt 1 view .LVU214
 121:Core/Src/main.c ****         //checksum_array[i] = calculate_mandelbrot_double(size_array[i], size_array[i], MAX_ITER);
 915              		.loc 1 121 29 is_stmt 0 view .LVU215
 916 0024 154B     		ldr	r3, .L41+8
 917 0026 A500     		lsls	r5, r4, #2
 918 0028 E858     		ldr	r0, [r5, r3]
 919 002a 6422     		movs	r2, #100
 920 002c 0100     		movs	r1, r0
 921 002e FFF7FEFF 		bl	calculate_mandelbrot_fixed_point_arithmetic
 922              	.LVL82:
 121:Core/Src/main.c ****         //checksum_array[i] = calculate_mandelbrot_double(size_array[i], size_array[i], MAX_ITER);
 923              		.loc 1 121 27 discriminator 1 view .LVU216
 924 0032 134B     		ldr	r3, .L41+12
 925 0034 E200     		lsls	r2, r4, #3
 926 0036 9B18     		adds	r3, r3, r2
 927 0038 1860     		str	r0, [r3]
 928 003a 5960     		str	r1, [r3, #4]
 123:Core/Src/main.c ****         execution_time_array[i] = end_time - start_time;
 929              		.loc 1 123 9 is_stmt 1 view .LVU217
 123:Core/Src/main.c ****         execution_time_array[i] = end_time - start_time;
 930              		.loc 1 123 20 is_stmt 0 view .LVU218
 931 003c FFF7FEFF 		bl	HAL_GetTick
 932              	.LVL83:
 123:Core/Src/main.c ****         execution_time_array[i] = end_time - start_time;
 933              		.loc 1 123 18 discriminator 1 view .LVU219
 934 0040 104B     		ldr	r3, .L41+16
 935 0042 1860     		str	r0, [r3]
 124:Core/Src/main.c ****     }
 936              		.loc 1 124 9 is_stmt 1 view .LVU220
 124:Core/Src/main.c ****     }
 937              		.loc 1 124 44 is_stmt 0 view .LVU221
 938 0044 3368     		ldr	r3, [r6]
 939 0046 C01A     		subs	r0, r0, r3
 124:Core/Src/main.c ****     }
 940              		.loc 1 124 33 view .LVU222
 941 0048 0F4B     		ldr	r3, .L41+20
 942 004a E850     		str	r0, [r5, r3]
 119:Core/Src/main.c ****         start_time = HAL_GetTick();
 943              		.loc 1 119 27 is_stmt 1 discriminator 3 view .LVU223
 944 004c 0134     		adds	r4, r4, #1
 945              	.LVL84:
 946              	.L38:
 119:Core/Src/main.c ****         start_time = HAL_GetTick();
 947              		.loc 1 119 21 discriminator 1 view .LVU224
 948 004e 042C     		cmp	r4, #4
 949 0050 E4DD     		ble	.L39
 950              	.LBE20:
ARM GAS  C:\Users\User\AppData\Local\Temp\ccfpKVWv.s 			page 27


 128:Core/Src/main.c **** 
 951              		.loc 1 128 3 view .LVU225
 952 0052 084C     		ldr	r4, .L41
 953              	.LVL85:
 128:Core/Src/main.c **** 
 954              		.loc 1 128 3 is_stmt 0 view .LVU226
 955 0054 0122     		movs	r2, #1
 956 0056 0221     		movs	r1, #2
 957 0058 2000     		movs	r0, r4
 958 005a FFF7FEFF 		bl	HAL_GPIO_WritePin
 959              	.LVL86:
 131:Core/Src/main.c **** 
 960              		.loc 1 131 3 is_stmt 1 view .LVU227
 961 005e FA20     		movs	r0, #250
 962 0060 8000     		lsls	r0, r0, #2
 963 0062 FFF7FEFF 		bl	HAL_Delay
 964              	.LVL87:
 134:Core/Src/main.c **** 
 965              		.loc 1 134 3 view .LVU228
 966 0066 0022     		movs	r2, #0
 967 0068 0321     		movs	r1, #3
 968 006a 2000     		movs	r0, r4
 969 006c FFF7FEFF 		bl	HAL_GPIO_WritePin
 970              	.LVL88:
 971              	.L40:
 140:Core/Src/main.c ****   {
 972              		.loc 1 140 3 view .LVU229
 144:Core/Src/main.c ****   /* USER CODE END 3 */
 973              		.loc 1 144 3 view .LVU230
 140:Core/Src/main.c ****   {
 974              		.loc 1 140 9 view .LVU231
 975 0070 FEE7     		b	.L40
 976              	.L42:
 977 0072 C046     		.align	2
 978              	.L41:
 979 0074 00040048 		.word	1207960576
 980 0078 00000000 		.word	start_time
 981 007c 00000000 		.word	size_array
 982 0080 00000000 		.word	checksum_array
 983 0084 00000000 		.word	end_time
 984 0088 00000000 		.word	execution_time_array
 985              		.cfi_endproc
 986              	.LFE40:
 988              		.global	execution_time_array
 989              		.section	.bss.execution_time_array,"aw",%nobits
 990              		.align	2
 993              	execution_time_array:
 994 0000 00000000 		.space	20
 994      00000000 
 994      00000000 
 994      00000000 
 994      00000000 
 995              		.global	checksum_array
 996              		.section	.bss.checksum_array,"aw",%nobits
 997              		.align	3
 1000              	checksum_array:
 1001 0000 00000000 		.space	40
ARM GAS  C:\Users\User\AppData\Local\Temp\ccfpKVWv.s 			page 28


 1001      00000000 
 1001      00000000 
 1001      00000000 
 1001      00000000 
 1002              		.global	size_array
 1003              		.section	.data.size_array,"aw"
 1004              		.align	2
 1007              	size_array:
 1008 0000 80000000 		.word	128
 1009 0004 A0000000 		.word	160
 1010 0008 C0000000 		.word	192
 1011 000c E0000000 		.word	224
 1012 0010 00010000 		.word	256
 1013              		.global	init_height
 1014              		.section	.data.init_height,"aw"
 1015              		.align	2
 1018              	init_height:
 1019 0000 80000000 		.word	128
 1020              		.global	init_width
 1021              		.section	.data.init_width,"aw"
 1022              		.align	2
 1025              	init_width:
 1026 0000 80000000 		.word	128
 1027              		.global	checksum
 1028              		.section	.bss.checksum,"aw",%nobits
 1029              		.align	3
 1032              	checksum:
 1033 0000 00000000 		.space	8
 1033      00000000 
 1034              		.global	execution_time
 1035              		.section	.bss.execution_time,"aw",%nobits
 1036              		.align	2
 1039              	execution_time:
 1040 0000 00000000 		.space	4
 1041              		.global	end_time
 1042              		.section	.bss.end_time,"aw",%nobits
 1043              		.align	2
 1046              	end_time:
 1047 0000 00000000 		.space	4
 1048              		.global	start_time
 1049              		.section	.bss.start_time,"aw",%nobits
 1050              		.align	2
 1053              	start_time:
 1054 0000 00000000 		.space	4
 1055              		.text
 1056              	.Letext0:
 1057              		.file 3 "C:\\ST\\STM32CubeIDE_1.19.0\\STM32CubeIDE\\plugins\\com.st.stm32cube.ide.mcu.externaltool
 1058              		.file 4 "C:\\ST\\STM32CubeIDE_1.19.0\\STM32CubeIDE\\plugins\\com.st.stm32cube.ide.mcu.externaltool
 1059              		.file 5 "Drivers/CMSIS/Device/ST/STM32F0xx/Include/stm32f051x8.h"
 1060              		.file 6 "Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_hal_def.h"
 1061              		.file 7 "Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_hal_rcc.h"
 1062              		.file 8 "Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_hal_gpio.h"
 1063              		.file 9 "Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_hal.h"
 1064              		.file 10 "<built-in>"
ARM GAS  C:\Users\User\AppData\Local\Temp\ccfpKVWv.s 			page 29


DEFINED SYMBOLS
                            *ABS*:00000000 main.c
C:\Users\User\AppData\Local\Temp\ccfpKVWv.s:19     .text.MX_GPIO_Init:00000000 $t
C:\Users\User\AppData\Local\Temp\ccfpKVWv.s:24     .text.MX_GPIO_Init:00000000 MX_GPIO_Init
C:\Users\User\AppData\Local\Temp\ccfpKVWv.s:114    .text.MX_GPIO_Init:0000005c $d
C:\Users\User\AppData\Local\Temp\ccfpKVWv.s:121    .text.calculate_mandelbrot_fixed_point_arithmetic:00000000 $t
C:\Users\User\AppData\Local\Temp\ccfpKVWv.s:127    .text.calculate_mandelbrot_fixed_point_arithmetic:00000000 calculate_mandelbrot_fixed_point_arithmetic
C:\Users\User\AppData\Local\Temp\ccfpKVWv.s:386    .text.calculate_mandelbrot_fixed_point_arithmetic:000000f4 $d
C:\Users\User\AppData\Local\Temp\ccfpKVWv.s:1032   .bss.checksum:00000000 checksum
C:\Users\User\AppData\Local\Temp\ccfpKVWv.s:401    .text.calculate_mandelbrot_double:00000000 $t
C:\Users\User\AppData\Local\Temp\ccfpKVWv.s:407    .text.calculate_mandelbrot_double:00000000 calculate_mandelbrot_double
C:\Users\User\AppData\Local\Temp\ccfpKVWv.s:724    .text.calculate_mandelbrot_double:00000170 $d
C:\Users\User\AppData\Local\Temp\ccfpKVWv.s:733    .text.Error_Handler:00000000 $t
C:\Users\User\AppData\Local\Temp\ccfpKVWv.s:739    .text.Error_Handler:00000000 Error_Handler
C:\Users\User\AppData\Local\Temp\ccfpKVWv.s:771    .text.SystemClock_Config:00000000 $t
C:\Users\User\AppData\Local\Temp\ccfpKVWv.s:777    .text.SystemClock_Config:00000000 SystemClock_Config
C:\Users\User\AppData\Local\Temp\ccfpKVWv.s:864    .text.main:00000000 $t
C:\Users\User\AppData\Local\Temp\ccfpKVWv.s:870    .text.main:00000000 main
C:\Users\User\AppData\Local\Temp\ccfpKVWv.s:979    .text.main:00000074 $d
C:\Users\User\AppData\Local\Temp\ccfpKVWv.s:1053   .bss.start_time:00000000 start_time
C:\Users\User\AppData\Local\Temp\ccfpKVWv.s:1007   .data.size_array:00000000 size_array
C:\Users\User\AppData\Local\Temp\ccfpKVWv.s:1000   .bss.checksum_array:00000000 checksum_array
C:\Users\User\AppData\Local\Temp\ccfpKVWv.s:1046   .bss.end_time:00000000 end_time
C:\Users\User\AppData\Local\Temp\ccfpKVWv.s:993    .bss.execution_time_array:00000000 execution_time_array
C:\Users\User\AppData\Local\Temp\ccfpKVWv.s:990    .bss.execution_time_array:00000000 $d
C:\Users\User\AppData\Local\Temp\ccfpKVWv.s:997    .bss.checksum_array:00000000 $d
C:\Users\User\AppData\Local\Temp\ccfpKVWv.s:1004   .data.size_array:00000000 $d
C:\Users\User\AppData\Local\Temp\ccfpKVWv.s:1018   .data.init_height:00000000 init_height
C:\Users\User\AppData\Local\Temp\ccfpKVWv.s:1015   .data.init_height:00000000 $d
C:\Users\User\AppData\Local\Temp\ccfpKVWv.s:1025   .data.init_width:00000000 init_width
C:\Users\User\AppData\Local\Temp\ccfpKVWv.s:1022   .data.init_width:00000000 $d
C:\Users\User\AppData\Local\Temp\ccfpKVWv.s:1029   .bss.checksum:00000000 $d
C:\Users\User\AppData\Local\Temp\ccfpKVWv.s:1039   .bss.execution_time:00000000 execution_time
C:\Users\User\AppData\Local\Temp\ccfpKVWv.s:1036   .bss.execution_time:00000000 $d
C:\Users\User\AppData\Local\Temp\ccfpKVWv.s:1043   .bss.end_time:00000000 $d
C:\Users\User\AppData\Local\Temp\ccfpKVWv.s:1050   .bss.start_time:00000000 $d

UNDEFINED SYMBOLS
memset
HAL_GPIO_WritePin
HAL_GPIO_Init
__aeabi_idiv
__aeabi_i2d
__aeabi_ddiv
__aeabi_dmul
__aeabi_dsub
__aeabi_dadd
__aeabi_dcmple
HAL_RCC_OscConfig
HAL_RCC_ClockConfig
HAL_Init
HAL_GetTick
HAL_Delay
