ARM GAS  C:\Users\User\AppData\Local\Temp\ccac0GrA.s 			page 1


   1              		.cpu cortex-m0
   2              		.arch armv6s-m
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 1
  11              		.eabi_attribute 34, 0
  12              		.eabi_attribute 18, 4
  13              		.file	"main.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.file 1 "Core/Src/main.c"
  18              		.section	.text.MX_GPIO_Init,"ax",%progbits
  19              		.align	1
  20              		.syntax unified
  21              		.code	16
  22              		.thumb_func
  24              	MX_GPIO_Init:
  25              	.LFB42:
   1:Core/Src/main.c **** /* USER CODE BEGIN Header */
   2:Core/Src/main.c **** /**
   3:Core/Src/main.c ****   ******************************************************************************
   4:Core/Src/main.c ****   * @file           : main.c
   5:Core/Src/main.c ****   * @brief          : Main program body
   6:Core/Src/main.c ****   ******************************************************************************
   7:Core/Src/main.c ****   * @attention
   8:Core/Src/main.c ****   *
   9:Core/Src/main.c ****   * Copyright (c) 2025 STMicroelectronics.
  10:Core/Src/main.c ****   * All rights reserved.
  11:Core/Src/main.c ****   *
  12:Core/Src/main.c ****   * This software is licensed under terms that can be found in the LICENSE file
  13:Core/Src/main.c ****   * in the root directory of this software component.
  14:Core/Src/main.c ****   * If no LICENSE file comes with this software, it is provided AS-IS.
  15:Core/Src/main.c ****   *
  16:Core/Src/main.c ****   ******************************************************************************
  17:Core/Src/main.c ****   */
  18:Core/Src/main.c **** /* USER CODE END Header */
  19:Core/Src/main.c **** /* Includes ------------------------------------------------------------------*/
  20:Core/Src/main.c **** #include "main.h"
  21:Core/Src/main.c **** 
  22:Core/Src/main.c **** /* Private includes ----------------------------------------------------------*/
  23:Core/Src/main.c **** /* USER CODE BEGIN Includes */
  24:Core/Src/main.c **** #include <stdint.h>
  25:Core/Src/main.c **** #include "stm32f0xx.h"
  26:Core/Src/main.c **** /* USER CODE END Includes */
  27:Core/Src/main.c **** 
  28:Core/Src/main.c **** /* Private typedef -----------------------------------------------------------*/
  29:Core/Src/main.c **** /* USER CODE BEGIN PTD */
  30:Core/Src/main.c **** #define MAX_ITER 100
  31:Core/Src/main.c **** /* USER CODE END PTD */
  32:Core/Src/main.c **** 
  33:Core/Src/main.c **** /* Private define ------------------------------------------------------------*/
ARM GAS  C:\Users\User\AppData\Local\Temp\ccac0GrA.s 			page 2


  34:Core/Src/main.c **** /* USER CODE BEGIN PD */
  35:Core/Src/main.c **** 
  36:Core/Src/main.c **** /* USER CODE END PD */
  37:Core/Src/main.c **** 
  38:Core/Src/main.c **** /* Private macro -------------------------------------------------------------*/
  39:Core/Src/main.c **** /* USER CODE BEGIN PM */
  40:Core/Src/main.c **** 
  41:Core/Src/main.c **** /* USER CODE END PM */
  42:Core/Src/main.c **** 
  43:Core/Src/main.c **** /* Private variables ---------------------------------------------------------*/
  44:Core/Src/main.c **** 
  45:Core/Src/main.c **** /* USER CODE BEGIN PV */
  46:Core/Src/main.c **** //TODO: Define and initialise the global varibales required
  47:Core/Src/main.c **** 
  48:Core/Src/main.c **** uint32_t start_time;
  49:Core/Src/main.c **** uint32_t end_time;
  50:Core/Src/main.c **** uint32_t execution_time;
  51:Core/Src/main.c **** uint64_t checksum;
  52:Core/Src/main.c **** int init_width;
  53:Core/Src/main.c **** int init_height;
  54:Core/Src/main.c **** 
  55:Core/Src/main.c **** 
  56:Core/Src/main.c **** /* USER CODE END PV */
  57:Core/Src/main.c **** 
  58:Core/Src/main.c **** /* Private function prototypes -----------------------------------------------*/
  59:Core/Src/main.c **** void SystemClock_Config(void);
  60:Core/Src/main.c **** static void MX_GPIO_Init(void);
  61:Core/Src/main.c **** /* USER CODE BEGIN PFP */
  62:Core/Src/main.c **** uint64_t calculate_mandelbrot_fixed_point_arithmetic(int width, int height, int max_iterations);
  63:Core/Src/main.c **** uint64_t calculate_mandelbrot_double(int width, int height, int max_iterations);
  64:Core/Src/main.c **** 
  65:Core/Src/main.c **** 
  66:Core/Src/main.c **** /* USER CODE END PFP */
  67:Core/Src/main.c **** 
  68:Core/Src/main.c **** /* Private user code ---------------------------------------------------------*/
  69:Core/Src/main.c **** /* USER CODE BEGIN 0 */
  70:Core/Src/main.c **** 
  71:Core/Src/main.c **** /* USER CODE END 0 */
  72:Core/Src/main.c **** 
  73:Core/Src/main.c **** /**
  74:Core/Src/main.c ****   * @brief  The application entry point.
  75:Core/Src/main.c ****   * @retval int
  76:Core/Src/main.c ****   */
  77:Core/Src/main.c **** int main(void)
  78:Core/Src/main.c **** {
  79:Core/Src/main.c ****   /* USER CODE BEGIN 1 */
  80:Core/Src/main.c **** 
  81:Core/Src/main.c ****   /* USER CODE END 1 */
  82:Core/Src/main.c **** 
  83:Core/Src/main.c ****   /* MCU Configuration--------------------------------------------------------*/
  84:Core/Src/main.c **** 
  85:Core/Src/main.c ****   /* Reset of all peripherals, Initializes the Flash interface and the Systick. */
  86:Core/Src/main.c ****   HAL_Init();
  87:Core/Src/main.c **** 
  88:Core/Src/main.c ****   /* USER CODE BEGIN Init */
  89:Core/Src/main.c **** 
  90:Core/Src/main.c ****   /* USER CODE END Init */
ARM GAS  C:\Users\User\AppData\Local\Temp\ccac0GrA.s 			page 3


  91:Core/Src/main.c **** 
  92:Core/Src/main.c ****   /* Configure the system clock */
  93:Core/Src/main.c ****   SystemClock_Config();
  94:Core/Src/main.c **** 
  95:Core/Src/main.c ****   /* USER CODE BEGIN SysInit */
  96:Core/Src/main.c **** 
  97:Core/Src/main.c ****   /* USER CODE END SysInit */
  98:Core/Src/main.c **** 
  99:Core/Src/main.c ****   /* Initialize all configured peripherals */
 100:Core/Src/main.c ****   MX_GPIO_Init();
 101:Core/Src/main.c ****   /* USER CODE BEGIN 2 */
 102:Core/Src/main.c ****   //TODO: Turn on LED 0 to signify the start of the operation
 103:Core/Src/main.c ****   HAL_GPIO_WritePin(GPIOB, GPIO_PIN_0, GPIO_PIN_SET);
 104:Core/Src/main.c **** 
 105:Core/Src/main.c ****   //TODO: Record the start time
 106:Core/Src/main.c ****   start_time = HAL_GetTick();
 107:Core/Src/main.c ****   
 108:Core/Src/main.c ****   //TODO: Call the Mandelbrot Function and store the output in the checksum variable defined initia
 109:Core/Src/main.c ****   
 110:Core/Src/main.c **** 
 111:Core/Src/main.c ****   //TODO: Record the end time
 112:Core/Src/main.c ****   end_time = HAL_GetTick();
 113:Core/Src/main.c **** 
 114:Core/Src/main.c ****   //TODO: Calculate the execution time
 115:Core/Src/main.c ****   execution_time = end_time - start_time;
 116:Core/Src/main.c **** 
 117:Core/Src/main.c ****   //TODO: Turn on LED 1 to signify the end of the operation
 118:Core/Src/main.c ****   HAL_GPIO_WritePin(GPIOB, GPIO_PIN_1, GPIO_PIN_SET);
 119:Core/Src/main.c **** 
 120:Core/Src/main.c ****   //TODO: Hold the LEDs on for a 1s delay
 121:Core/Src/main.c ****   HAL_Delay(1000);
 122:Core/Src/main.c **** 
 123:Core/Src/main.c ****   //TODO: Turn off the LEDs
 124:Core/Src/main.c ****   HAL_GPIO_WritePin(GPIOB, GPIO_PIN_0|GPIO_PIN_1, GPIO_PIN_RESET);
 125:Core/Src/main.c **** 
 126:Core/Src/main.c ****   /* USER CODE END 2 */
 127:Core/Src/main.c **** 
 128:Core/Src/main.c ****   /* Infinite loop */
 129:Core/Src/main.c ****   /* USER CODE BEGIN WHILE */
 130:Core/Src/main.c ****   while (1)
 131:Core/Src/main.c ****   {
 132:Core/Src/main.c ****     /* USER CODE END WHILE */
 133:Core/Src/main.c **** 
 134:Core/Src/main.c ****     /* USER CODE BEGIN 3 */
 135:Core/Src/main.c ****   }
 136:Core/Src/main.c ****   /* USER CODE END 3 */
 137:Core/Src/main.c **** }
 138:Core/Src/main.c **** 
 139:Core/Src/main.c **** /**
 140:Core/Src/main.c ****   * @brief System Clock Configuration
 141:Core/Src/main.c ****   * @retval None
 142:Core/Src/main.c ****   */
 143:Core/Src/main.c **** void SystemClock_Config(void)
 144:Core/Src/main.c **** {
 145:Core/Src/main.c ****   RCC_OscInitTypeDef RCC_OscInitStruct = {0};
 146:Core/Src/main.c ****   RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 147:Core/Src/main.c **** 
ARM GAS  C:\Users\User\AppData\Local\Temp\ccac0GrA.s 			page 4


 148:Core/Src/main.c ****   /** Initializes the RCC Oscillators according to the specified parameters
 149:Core/Src/main.c ****   * in the RCC_OscInitTypeDef structure.
 150:Core/Src/main.c ****   */
 151:Core/Src/main.c ****   RCC_OscInitStruct.OscillatorType = RCC_OSCILLATORTYPE_HSI;
 152:Core/Src/main.c ****   RCC_OscInitStruct.HSIState = RCC_HSI_ON;
 153:Core/Src/main.c ****   RCC_OscInitStruct.HSICalibrationValue = RCC_HSICALIBRATION_DEFAULT;
 154:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_NONE;
 155:Core/Src/main.c ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 156:Core/Src/main.c ****   {
 157:Core/Src/main.c ****     Error_Handler();
 158:Core/Src/main.c ****   }
 159:Core/Src/main.c **** 
 160:Core/Src/main.c ****   /** Initializes the CPU, AHB and APB buses clocks
 161:Core/Src/main.c ****   */
 162:Core/Src/main.c ****   RCC_ClkInitStruct.ClockType = RCC_CLOCKTYPE_HCLK|RCC_CLOCKTYPE_SYSCLK
 163:Core/Src/main.c ****                               |RCC_CLOCKTYPE_PCLK1;
 164:Core/Src/main.c ****   RCC_ClkInitStruct.SYSCLKSource = RCC_SYSCLKSOURCE_HSI;
 165:Core/Src/main.c ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 166:Core/Src/main.c ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV1;
 167:Core/Src/main.c **** 
 168:Core/Src/main.c ****   if (HAL_RCC_ClockConfig(&RCC_ClkInitStruct, FLASH_LATENCY_0) != HAL_OK)
 169:Core/Src/main.c ****   {
 170:Core/Src/main.c ****     Error_Handler();
 171:Core/Src/main.c ****   }
 172:Core/Src/main.c **** }
 173:Core/Src/main.c **** 
 174:Core/Src/main.c **** /**
 175:Core/Src/main.c ****   * @brief GPIO Initialization Function
 176:Core/Src/main.c ****   * @param None
 177:Core/Src/main.c ****   * @retval None
 178:Core/Src/main.c ****   */
 179:Core/Src/main.c **** static void MX_GPIO_Init(void)
 180:Core/Src/main.c **** {
  26              		.loc 1 180 1 view -0
  27              		.cfi_startproc
  28              		@ args = 0, pretend = 0, frame = 32
  29              		@ frame_needed = 0, uses_anonymous_args = 0
  30 0000 10B5     		push	{r4, lr}
  31              	.LCFI0:
  32              		.cfi_def_cfa_offset 8
  33              		.cfi_offset 4, -8
  34              		.cfi_offset 14, -4
  35 0002 88B0     		sub	sp, sp, #32
  36              	.LCFI1:
  37              		.cfi_def_cfa_offset 40
 181:Core/Src/main.c ****   GPIO_InitTypeDef GPIO_InitStruct = {0};
  38              		.loc 1 181 3 view .LVU1
  39              		.loc 1 181 20 is_stmt 0 view .LVU2
  40 0004 1422     		movs	r2, #20
  41 0006 0021     		movs	r1, #0
  42 0008 03A8     		add	r0, sp, #12
  43 000a FFF7FEFF 		bl	memset
  44              	.LVL0:
 182:Core/Src/main.c **** /* USER CODE BEGIN MX_GPIO_Init_1 */
 183:Core/Src/main.c **** /* USER CODE END MX_GPIO_Init_1 */
 184:Core/Src/main.c **** 
 185:Core/Src/main.c ****   /* GPIO Ports Clock Enable */
ARM GAS  C:\Users\User\AppData\Local\Temp\ccac0GrA.s 			page 5


 186:Core/Src/main.c ****   __HAL_RCC_GPIOB_CLK_ENABLE();
  45              		.loc 1 186 3 is_stmt 1 view .LVU3
  46              	.LBB4:
  47              		.loc 1 186 3 view .LVU4
  48              		.loc 1 186 3 view .LVU5
  49 000e 134B     		ldr	r3, .L2
  50 0010 5A69     		ldr	r2, [r3, #20]
  51 0012 8021     		movs	r1, #128
  52 0014 C902     		lsls	r1, r1, #11
  53 0016 0A43     		orrs	r2, r1
  54 0018 5A61     		str	r2, [r3, #20]
  55              		.loc 1 186 3 view .LVU6
  56 001a 5A69     		ldr	r2, [r3, #20]
  57 001c 0A40     		ands	r2, r1
  58 001e 0192     		str	r2, [sp, #4]
  59              		.loc 1 186 3 view .LVU7
  60 0020 019A     		ldr	r2, [sp, #4]
  61              	.LBE4:
  62              		.loc 1 186 3 view .LVU8
 187:Core/Src/main.c ****   __HAL_RCC_GPIOA_CLK_ENABLE();
  63              		.loc 1 187 3 view .LVU9
  64              	.LBB5:
  65              		.loc 1 187 3 view .LVU10
  66              		.loc 1 187 3 view .LVU11
  67 0022 5A69     		ldr	r2, [r3, #20]
  68 0024 8021     		movs	r1, #128
  69 0026 8902     		lsls	r1, r1, #10
  70 0028 0A43     		orrs	r2, r1
  71 002a 5A61     		str	r2, [r3, #20]
  72              		.loc 1 187 3 view .LVU12
  73 002c 5B69     		ldr	r3, [r3, #20]
  74 002e 0B40     		ands	r3, r1
  75 0030 0293     		str	r3, [sp, #8]
  76              		.loc 1 187 3 view .LVU13
  77 0032 029B     		ldr	r3, [sp, #8]
  78              	.LBE5:
  79              		.loc 1 187 3 view .LVU14
 188:Core/Src/main.c **** 
 189:Core/Src/main.c ****   /*Configure GPIO pin Output Level */
 190:Core/Src/main.c ****   HAL_GPIO_WritePin(GPIOB, GPIO_PIN_0|GPIO_PIN_1, GPIO_PIN_RESET);
  80              		.loc 1 190 3 view .LVU15
  81 0034 0A4C     		ldr	r4, .L2+4
  82 0036 0022     		movs	r2, #0
  83 0038 0321     		movs	r1, #3
  84 003a 2000     		movs	r0, r4
  85 003c FFF7FEFF 		bl	HAL_GPIO_WritePin
  86              	.LVL1:
 191:Core/Src/main.c **** 
 192:Core/Src/main.c ****   /*Configure GPIO pins : PB0 PB1 */
 193:Core/Src/main.c ****   GPIO_InitStruct.Pin = GPIO_PIN_0|GPIO_PIN_1;
  87              		.loc 1 193 3 view .LVU16
  88              		.loc 1 193 23 is_stmt 0 view .LVU17
  89 0040 0323     		movs	r3, #3
  90 0042 0393     		str	r3, [sp, #12]
 194:Core/Src/main.c ****   GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
  91              		.loc 1 194 3 is_stmt 1 view .LVU18
  92              		.loc 1 194 24 is_stmt 0 view .LVU19
ARM GAS  C:\Users\User\AppData\Local\Temp\ccac0GrA.s 			page 6


  93 0044 023B     		subs	r3, r3, #2
  94 0046 0493     		str	r3, [sp, #16]
 195:Core/Src/main.c ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
  95              		.loc 1 195 3 is_stmt 1 view .LVU20
  96              		.loc 1 195 24 is_stmt 0 view .LVU21
  97 0048 0023     		movs	r3, #0
  98 004a 0593     		str	r3, [sp, #20]
 196:Core/Src/main.c ****   GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
  99              		.loc 1 196 3 is_stmt 1 view .LVU22
 100              		.loc 1 196 25 is_stmt 0 view .LVU23
 101 004c 0693     		str	r3, [sp, #24]
 197:Core/Src/main.c ****   HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 102              		.loc 1 197 3 is_stmt 1 view .LVU24
 103 004e 03A9     		add	r1, sp, #12
 104 0050 2000     		movs	r0, r4
 105 0052 FFF7FEFF 		bl	HAL_GPIO_Init
 106              	.LVL2:
 198:Core/Src/main.c **** 
 199:Core/Src/main.c **** /* USER CODE BEGIN MX_GPIO_Init_2 */
 200:Core/Src/main.c **** /* USER CODE END MX_GPIO_Init_2 */
 201:Core/Src/main.c **** }
 107              		.loc 1 201 1 is_stmt 0 view .LVU25
 108 0056 08B0     		add	sp, sp, #32
 109              		@ sp needed
 110 0058 10BD     		pop	{r4, pc}
 111              	.L3:
 112 005a C046     		.align	2
 113              	.L2:
 114 005c 00100240 		.word	1073876992
 115 0060 00040048 		.word	1207960576
 116              		.cfi_endproc
 117              	.LFE42:
 119              		.section	.text.calculate_mandelbrot_fixed_point_arithmetic,"ax",%progbits
 120              		.align	1
 121              		.global	calculate_mandelbrot_fixed_point_arithmetic
 122              		.syntax unified
 123              		.code	16
 124              		.thumb_func
 126              	calculate_mandelbrot_fixed_point_arithmetic:
 127              	.LVL3:
 128              	.LFB43:
 202:Core/Src/main.c **** 
 203:Core/Src/main.c **** /* USER CODE BEGIN 4 */
 204:Core/Src/main.c **** //TODO: Mandelbroat using variable type integers and fixed point arithmetic
 205:Core/Src/main.c **** uint64_t calculate_mandelbrot_fixed_point_arithmetic(int width, int height, int max_iterations) {
 129              		.loc 1 205 97 is_stmt 1 view -0
 130              		.cfi_startproc
 131              		@ args = 0, pretend = 0, frame = 0
 132              		@ frame_needed = 0, uses_anonymous_args = 0
 133              		.loc 1 205 97 is_stmt 0 view .LVU27
 134 0000 30B5     		push	{r4, r5, lr}
 135              	.LCFI2:
 136              		.cfi_def_cfa_offset 12
 137              		.cfi_offset 4, -12
 138              		.cfi_offset 5, -8
 139              		.cfi_offset 14, -4
 206:Core/Src/main.c ****   //uint64_t mandelbrot_sum = 0;
ARM GAS  C:\Users\User\AppData\Local\Temp\ccac0GrA.s 			page 7


 207:Core/Src/main.c ****     //TODO: Complete the function implementation
 208:Core/Src/main.c ****   checksum = 0;
 140              		.loc 1 208 3 is_stmt 1 view .LVU28
 141              		.loc 1 208 12 is_stmt 0 view .LVU29
 142 0002 094B     		ldr	r3, .L9
 143 0004 0024     		movs	r4, #0
 144 0006 0025     		movs	r5, #0
 145 0008 1C60     		str	r4, [r3]
 146 000a 5D60     		str	r5, [r3, #4]
 209:Core/Src/main.c ****   for (int y = 0; y <= height - 1; y++) {
 147              		.loc 1 209 3 is_stmt 1 view .LVU30
 148              	.LBB6:
 149              		.loc 1 209 8 view .LVU31
 150              	.LVL4:
 151              		.loc 1 209 12 is_stmt 0 view .LVU32
 152 000c 0023     		movs	r3, #0
 153              		.loc 1 209 3 view .LVU33
 154 000e 00E0     		b	.L5
 155              	.LVL5:
 156              	.L6:
 210:Core/Src/main.c **** 
 211:Core/Src/main.c ****   }
 157              		.loc 1 211 3 is_stmt 1 view .LVU34
 209:Core/Src/main.c ****   for (int y = 0; y <= height - 1; y++) {
 158              		.loc 1 209 37 discriminator 3 view .LVU35
 159 0010 0133     		adds	r3, r3, #1
 160              	.LVL6:
 161              	.L5:
 209:Core/Src/main.c ****   for (int y = 0; y <= height - 1; y++) {
 162              		.loc 1 209 21 discriminator 1 view .LVU36
 163 0012 8B42     		cmp	r3, r1
 164 0014 FCDB     		blt	.L6
 165              	.LBE6:
 166              	.LBB7:
 212:Core/Src/main.c **** 
 213:Core/Src/main.c ****   for (int x=0; x <= width - 1; x++) {
 167              		.loc 1 213 12 is_stmt 0 view .LVU37
 168 0016 0023     		movs	r3, #0
 169              	.LVL7:
 170              		.loc 1 213 12 view .LVU38
 171 0018 00E0     		b	.L7
 172              	.LVL8:
 173              	.L8:
 214:Core/Src/main.c **** 
 215:Core/Src/main.c ****   }
 174              		.loc 1 215 3 is_stmt 1 view .LVU39
 213:Core/Src/main.c **** 
 175              		.loc 1 213 34 discriminator 3 view .LVU40
 176 001a 0133     		adds	r3, r3, #1
 177              	.LVL9:
 178              	.L7:
 213:Core/Src/main.c **** 
 179              		.loc 1 213 19 discriminator 1 view .LVU41
 180 001c 8342     		cmp	r3, r0
 181 001e FCDB     		blt	.L8
 182              	.LBE7:
 216:Core/Src/main.c **** 
ARM GAS  C:\Users\User\AppData\Local\Temp\ccac0GrA.s 			page 8


 217:Core/Src/main.c ****   return checksum;
 183              		.loc 1 217 3 view .LVU42
 218:Core/Src/main.c **** 
 219:Core/Src/main.c **** }
 184              		.loc 1 219 1 is_stmt 0 view .LVU43
 185 0020 0020     		movs	r0, #0
 186              	.LVL10:
 187              		.loc 1 219 1 view .LVU44
 188 0022 0021     		movs	r1, #0
 189              	.LVL11:
 190              		.loc 1 219 1 view .LVU45
 191              		@ sp needed
 192 0024 30BD     		pop	{r4, r5, pc}
 193              	.L10:
 194 0026 C046     		.align	2
 195              	.L9:
 196 0028 00000000 		.word	checksum
 197              		.cfi_endproc
 198              	.LFE43:
 200              		.section	.text.calculate_mandelbrot_double,"ax",%progbits
 201              		.align	1
 202              		.global	calculate_mandelbrot_double
 203              		.syntax unified
 204              		.code	16
 205              		.thumb_func
 207              	calculate_mandelbrot_double:
 208              	.LVL12:
 209              	.LFB44:
 220:Core/Src/main.c **** 
 221:Core/Src/main.c **** //TODO: Mandelbroat using variable type double
 222:Core/Src/main.c **** uint64_t calculate_mandelbrot_double(int width, int height, int max_iterations){
 210              		.loc 1 222 80 is_stmt 1 view -0
 211              		.cfi_startproc
 212              		@ args = 0, pretend = 0, frame = 0
 213              		@ frame_needed = 0, uses_anonymous_args = 0
 214              		@ link register save eliminated.
 223:Core/Src/main.c ****     uint64_t mandelbrot_sum = 0;
 215              		.loc 1 223 5 view .LVU47
 224:Core/Src/main.c ****     //TODO: Complete the function implementation
 225:Core/Src/main.c ****     
 226:Core/Src/main.c ****     return mandelbrot_sum;
 216              		.loc 1 226 5 view .LVU48
 227:Core/Src/main.c **** }
 217              		.loc 1 227 1 is_stmt 0 view .LVU49
 218 0000 0020     		movs	r0, #0
 219              	.LVL13:
 220              		.loc 1 227 1 view .LVU50
 221 0002 0021     		movs	r1, #0
 222              	.LVL14:
 223              		.loc 1 227 1 view .LVU51
 224              		@ sp needed
 225 0004 7047     		bx	lr
 226              		.cfi_endproc
 227              	.LFE44:
 229              		.section	.text.Error_Handler,"ax",%progbits
 230              		.align	1
 231              		.global	Error_Handler
ARM GAS  C:\Users\User\AppData\Local\Temp\ccac0GrA.s 			page 9


 232              		.syntax unified
 233              		.code	16
 234              		.thumb_func
 236              	Error_Handler:
 237              	.LFB45:
 228:Core/Src/main.c **** 
 229:Core/Src/main.c **** /* USER CODE END 4 */
 230:Core/Src/main.c **** 
 231:Core/Src/main.c **** /**
 232:Core/Src/main.c ****   * @brief  This function is executed in case of error occurrence.
 233:Core/Src/main.c ****   * @retval None
 234:Core/Src/main.c ****   */
 235:Core/Src/main.c **** void Error_Handler(void)
 236:Core/Src/main.c **** {
 238              		.loc 1 236 1 is_stmt 1 view -0
 239              		.cfi_startproc
 240              		@ Volatile: function does not return.
 241              		@ args = 0, pretend = 0, frame = 0
 242              		@ frame_needed = 0, uses_anonymous_args = 0
 243              		@ link register save eliminated.
 237:Core/Src/main.c ****   /* USER CODE BEGIN Error_Handler_Debug */
 238:Core/Src/main.c ****   /* User can add his own implementation to report the HAL error return state */
 239:Core/Src/main.c ****   __disable_irq();
 244              		.loc 1 239 3 view .LVU53
 245              	.LBB8:
 246              	.LBI8:
 247              		.file 2 "Drivers/CMSIS/Include/cmsis_gcc.h"
   1:Drivers/CMSIS/Include/cmsis_gcc.h **** /**************************************************************************//**
   2:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @file     cmsis_gcc.h
   3:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @brief    CMSIS compiler GCC header file
   4:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @version  V5.0.4
   5:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @date     09. April 2018
   6:Drivers/CMSIS/Include/cmsis_gcc.h ****  ******************************************************************************/
   7:Drivers/CMSIS/Include/cmsis_gcc.h **** /*
   8:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Copyright (c) 2009-2018 Arm Limited. All rights reserved.
   9:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  10:Drivers/CMSIS/Include/cmsis_gcc.h ****  * SPDX-License-Identifier: Apache-2.0
  11:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  12:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Licensed under the Apache License, Version 2.0 (the License); you may
  13:Drivers/CMSIS/Include/cmsis_gcc.h ****  * not use this file except in compliance with the License.
  14:Drivers/CMSIS/Include/cmsis_gcc.h ****  * You may obtain a copy of the License at
  15:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  16:Drivers/CMSIS/Include/cmsis_gcc.h ****  * www.apache.org/licenses/LICENSE-2.0
  17:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  18:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Unless required by applicable law or agreed to in writing, software
  19:Drivers/CMSIS/Include/cmsis_gcc.h ****  * distributed under the License is distributed on an AS IS BASIS, WITHOUT
  20:Drivers/CMSIS/Include/cmsis_gcc.h ****  * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  21:Drivers/CMSIS/Include/cmsis_gcc.h ****  * See the License for the specific language governing permissions and
  22:Drivers/CMSIS/Include/cmsis_gcc.h ****  * limitations under the License.
  23:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
  24:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  25:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __CMSIS_GCC_H
  26:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_H
  27:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  28:Drivers/CMSIS/Include/cmsis_gcc.h **** /* ignore some GCC warnings */
  29:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic push
  30:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wsign-conversion"
ARM GAS  C:\Users\User\AppData\Local\Temp\ccac0GrA.s 			page 10


  31:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wconversion"
  32:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wunused-parameter"
  33:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  34:Drivers/CMSIS/Include/cmsis_gcc.h **** /* Fallback for __has_builtin */
  35:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __has_builtin
  36:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __has_builtin(x) (0)
  37:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  38:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  39:Drivers/CMSIS/Include/cmsis_gcc.h **** /* CMSIS compiler specific defines */
  40:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __ASM
  41:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __ASM                                  __asm
  42:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  43:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __INLINE
  44:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __INLINE                               inline
  45:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  46:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __STATIC_INLINE
  47:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __STATIC_INLINE                        static inline
  48:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  49:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __STATIC_FORCEINLINE                 
  50:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __STATIC_FORCEINLINE                   __attribute__((always_inline)) static inline
  51:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif                                           
  52:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __NO_RETURN
  53:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __NO_RETURN                            __attribute__((__noreturn__))
  54:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  55:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __USED
  56:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __USED                                 __attribute__((used))
  57:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  58:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __WEAK
  59:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __WEAK                                 __attribute__((weak))
  60:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  61:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED
  62:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED                               __attribute__((packed, aligned(1)))
  63:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  64:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED_STRUCT
  65:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED_STRUCT                        struct __attribute__((packed, aligned(1)))
  66:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  67:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED_UNION
  68:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED_UNION                         union __attribute__((packed, aligned(1)))
  69:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  70:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32        /* deprecated */
  71:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  72:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  73:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  74:Drivers/CMSIS/Include/cmsis_gcc.h ****   struct __attribute__((packed)) T_UINT32 { uint32_t v; };
  75:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  76:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32(x)                  (((struct T_UINT32 *)(x))->v)
  77:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  78:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT16_WRITE
  79:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  80:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  81:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  82:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT16_WRITE { uint16_t v; };
  83:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  84:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT16_WRITE(addr, val)    (void)((((struct T_UINT16_WRITE *)(void *)(addr))-
  85:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  86:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT16_READ
  87:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
ARM GAS  C:\Users\User\AppData\Local\Temp\ccac0GrA.s 			page 11


  88:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  89:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  90:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT16_READ { uint16_t v; };
  91:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  92:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT16_READ(addr)          (((const struct T_UINT16_READ *)(const void *)(add
  93:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  94:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32_WRITE
  95:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  96:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  97:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  98:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT32_WRITE { uint32_t v; };
  99:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
 100:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32_WRITE(addr, val)    (void)((((struct T_UINT32_WRITE *)(void *)(addr))-
 101:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 102:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32_READ
 103:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
 104:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
 105:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
 106:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT32_READ { uint32_t v; };
 107:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
 108:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32_READ(addr)          (((const struct T_UINT32_READ *)(const void *)(add
 109:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 110:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __ALIGNED
 111:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __ALIGNED(x)                           __attribute__((aligned(x)))
 112:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 113:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __RESTRICT
 114:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __RESTRICT                             __restrict
 115:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 116:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 117:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 118:Drivers/CMSIS/Include/cmsis_gcc.h **** /* ###########################  Core Function Access  ########################### */
 119:Drivers/CMSIS/Include/cmsis_gcc.h **** /** \ingroup  CMSIS_Core_FunctionInterface
 120:Drivers/CMSIS/Include/cmsis_gcc.h ****     \defgroup CMSIS_Core_RegAccFunctions CMSIS Core Register Access Functions
 121:Drivers/CMSIS/Include/cmsis_gcc.h ****   @{
 122:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 123:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 124:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 125:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Enable IRQ Interrupts
 126:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Enables IRQ interrupts by clearing the I-bit in the CPSR.
 127:Drivers/CMSIS/Include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 128:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 129:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __enable_irq(void)
 130:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 131:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("cpsie i" : : : "memory");
 132:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 133:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 134:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 135:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 136:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Disable IRQ Interrupts
 137:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Disables IRQ interrupts by setting the I-bit in the CPSR.
 138:Drivers/CMSIS/Include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 139:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 140:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __disable_irq(void)
 248              		.loc 2 140 27 view .LVU54
 249              	.LBB9:
 141:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 142:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("cpsid i" : : : "memory");
ARM GAS  C:\Users\User\AppData\Local\Temp\ccac0GrA.s 			page 12


 250              		.loc 2 142 3 view .LVU55
 251              		.syntax divided
 252              	@ 142 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 253 0000 72B6     		cpsid i
 254              	@ 0 "" 2
 255              		.thumb
 256              		.syntax unified
 257              	.L13:
 258              	.LBE9:
 259              	.LBE8:
 240:Core/Src/main.c ****   while (1)
 260              		.loc 1 240 3 view .LVU56
 241:Core/Src/main.c ****   {
 242:Core/Src/main.c ****   }
 261              		.loc 1 242 3 view .LVU57
 240:Core/Src/main.c ****   while (1)
 262              		.loc 1 240 9 view .LVU58
 263 0002 FEE7     		b	.L13
 264              		.cfi_endproc
 265              	.LFE45:
 267              		.section	.text.SystemClock_Config,"ax",%progbits
 268              		.align	1
 269              		.global	SystemClock_Config
 270              		.syntax unified
 271              		.code	16
 272              		.thumb_func
 274              	SystemClock_Config:
 275              	.LFB41:
 144:Core/Src/main.c ****   RCC_OscInitTypeDef RCC_OscInitStruct = {0};
 276              		.loc 1 144 1 view -0
 277              		.cfi_startproc
 278              		@ args = 0, pretend = 0, frame = 64
 279              		@ frame_needed = 0, uses_anonymous_args = 0
 280 0000 00B5     		push	{lr}
 281              	.LCFI3:
 282              		.cfi_def_cfa_offset 4
 283              		.cfi_offset 14, -4
 284 0002 91B0     		sub	sp, sp, #68
 285              	.LCFI4:
 286              		.cfi_def_cfa_offset 72
 145:Core/Src/main.c ****   RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 287              		.loc 1 145 3 view .LVU60
 145:Core/Src/main.c ****   RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 288              		.loc 1 145 22 is_stmt 0 view .LVU61
 289 0004 3022     		movs	r2, #48
 290 0006 0021     		movs	r1, #0
 291 0008 04A8     		add	r0, sp, #16
 292 000a FFF7FEFF 		bl	memset
 293              	.LVL15:
 146:Core/Src/main.c **** 
 294              		.loc 1 146 3 is_stmt 1 view .LVU62
 146:Core/Src/main.c **** 
 295              		.loc 1 146 22 is_stmt 0 view .LVU63
 296 000e 1022     		movs	r2, #16
 297 0010 0021     		movs	r1, #0
 298 0012 6846     		mov	r0, sp
 299 0014 FFF7FEFF 		bl	memset
ARM GAS  C:\Users\User\AppData\Local\Temp\ccac0GrA.s 			page 13


 300              	.LVL16:
 151:Core/Src/main.c ****   RCC_OscInitStruct.HSIState = RCC_HSI_ON;
 301              		.loc 1 151 3 is_stmt 1 view .LVU64
 151:Core/Src/main.c ****   RCC_OscInitStruct.HSIState = RCC_HSI_ON;
 302              		.loc 1 151 36 is_stmt 0 view .LVU65
 303 0018 0223     		movs	r3, #2
 304 001a 0493     		str	r3, [sp, #16]
 152:Core/Src/main.c ****   RCC_OscInitStruct.HSICalibrationValue = RCC_HSICALIBRATION_DEFAULT;
 305              		.loc 1 152 3 is_stmt 1 view .LVU66
 152:Core/Src/main.c ****   RCC_OscInitStruct.HSICalibrationValue = RCC_HSICALIBRATION_DEFAULT;
 306              		.loc 1 152 30 is_stmt 0 view .LVU67
 307 001c 013B     		subs	r3, r3, #1
 308 001e 0793     		str	r3, [sp, #28]
 153:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_NONE;
 309              		.loc 1 153 3 is_stmt 1 view .LVU68
 153:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_NONE;
 310              		.loc 1 153 41 is_stmt 0 view .LVU69
 311 0020 0F33     		adds	r3, r3, #15
 312 0022 0893     		str	r3, [sp, #32]
 154:Core/Src/main.c ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 313              		.loc 1 154 3 is_stmt 1 view .LVU70
 155:Core/Src/main.c ****   {
 314              		.loc 1 155 3 view .LVU71
 155:Core/Src/main.c ****   {
 315              		.loc 1 155 7 is_stmt 0 view .LVU72
 316 0024 04A8     		add	r0, sp, #16
 317 0026 FFF7FEFF 		bl	HAL_RCC_OscConfig
 318              	.LVL17:
 155:Core/Src/main.c ****   {
 319              		.loc 1 155 6 discriminator 1 view .LVU73
 320 002a 0028     		cmp	r0, #0
 321 002c 0DD1     		bne	.L17
 162:Core/Src/main.c ****                               |RCC_CLOCKTYPE_PCLK1;
 322              		.loc 1 162 3 is_stmt 1 view .LVU74
 162:Core/Src/main.c ****                               |RCC_CLOCKTYPE_PCLK1;
 323              		.loc 1 162 31 is_stmt 0 view .LVU75
 324 002e 0723     		movs	r3, #7
 325 0030 0093     		str	r3, [sp]
 164:Core/Src/main.c ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 326              		.loc 1 164 3 is_stmt 1 view .LVU76
 164:Core/Src/main.c ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 327              		.loc 1 164 34 is_stmt 0 view .LVU77
 328 0032 0023     		movs	r3, #0
 329 0034 0193     		str	r3, [sp, #4]
 165:Core/Src/main.c ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV1;
 330              		.loc 1 165 3 is_stmt 1 view .LVU78
 165:Core/Src/main.c ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV1;
 331              		.loc 1 165 35 is_stmt 0 view .LVU79
 332 0036 0293     		str	r3, [sp, #8]
 166:Core/Src/main.c **** 
 333              		.loc 1 166 3 is_stmt 1 view .LVU80
 166:Core/Src/main.c **** 
 334              		.loc 1 166 36 is_stmt 0 view .LVU81
 335 0038 0393     		str	r3, [sp, #12]
 168:Core/Src/main.c ****   {
 336              		.loc 1 168 3 is_stmt 1 view .LVU82
 168:Core/Src/main.c ****   {
ARM GAS  C:\Users\User\AppData\Local\Temp\ccac0GrA.s 			page 14


 337              		.loc 1 168 7 is_stmt 0 view .LVU83
 338 003a 0021     		movs	r1, #0
 339 003c 6846     		mov	r0, sp
 340 003e FFF7FEFF 		bl	HAL_RCC_ClockConfig
 341              	.LVL18:
 168:Core/Src/main.c ****   {
 342              		.loc 1 168 6 discriminator 1 view .LVU84
 343 0042 0028     		cmp	r0, #0
 344 0044 03D1     		bne	.L18
 172:Core/Src/main.c **** 
 345              		.loc 1 172 1 view .LVU85
 346 0046 11B0     		add	sp, sp, #68
 347              		@ sp needed
 348 0048 00BD     		pop	{pc}
 349              	.L17:
 157:Core/Src/main.c ****   }
 350              		.loc 1 157 5 is_stmt 1 view .LVU86
 351 004a FFF7FEFF 		bl	Error_Handler
 352              	.LVL19:
 353              	.L18:
 170:Core/Src/main.c ****   }
 354              		.loc 1 170 5 view .LVU87
 355 004e FFF7FEFF 		bl	Error_Handler
 356              	.LVL20:
 357              		.cfi_endproc
 358              	.LFE41:
 360              		.section	.text.main,"ax",%progbits
 361              		.align	1
 362              		.global	main
 363              		.syntax unified
 364              		.code	16
 365              		.thumb_func
 367              	main:
 368              	.LFB40:
  78:Core/Src/main.c ****   /* USER CODE BEGIN 1 */
 369              		.loc 1 78 1 view -0
 370              		.cfi_startproc
 371              		@ Volatile: function does not return.
 372              		@ args = 0, pretend = 0, frame = 0
 373              		@ frame_needed = 0, uses_anonymous_args = 0
 374 0000 70B5     		push	{r4, r5, r6, lr}
 375              	.LCFI5:
 376              		.cfi_def_cfa_offset 16
 377              		.cfi_offset 4, -16
 378              		.cfi_offset 5, -12
 379              		.cfi_offset 6, -8
 380              		.cfi_offset 14, -4
  86:Core/Src/main.c **** 
 381              		.loc 1 86 3 view .LVU89
 382 0002 FFF7FEFF 		bl	HAL_Init
 383              	.LVL21:
  93:Core/Src/main.c **** 
 384              		.loc 1 93 3 view .LVU90
 385 0006 FFF7FEFF 		bl	SystemClock_Config
 386              	.LVL22:
 100:Core/Src/main.c ****   /* USER CODE BEGIN 2 */
 387              		.loc 1 100 3 view .LVU91
ARM GAS  C:\Users\User\AppData\Local\Temp\ccac0GrA.s 			page 15


 388 000a FFF7FEFF 		bl	MX_GPIO_Init
 389              	.LVL23:
 103:Core/Src/main.c **** 
 390              		.loc 1 103 3 view .LVU92
 391 000e 104C     		ldr	r4, .L21
 392 0010 0122     		movs	r2, #1
 393 0012 0121     		movs	r1, #1
 394 0014 2000     		movs	r0, r4
 395 0016 FFF7FEFF 		bl	HAL_GPIO_WritePin
 396              	.LVL24:
 106:Core/Src/main.c ****   
 397              		.loc 1 106 3 view .LVU93
 106:Core/Src/main.c ****   
 398              		.loc 1 106 16 is_stmt 0 view .LVU94
 399 001a FFF7FEFF 		bl	HAL_GetTick
 400              	.LVL25:
 106:Core/Src/main.c ****   
 401              		.loc 1 106 14 discriminator 1 view .LVU95
 402 001e 0D4D     		ldr	r5, .L21+4
 403 0020 2860     		str	r0, [r5]
 112:Core/Src/main.c **** 
 404              		.loc 1 112 3 is_stmt 1 view .LVU96
 112:Core/Src/main.c **** 
 405              		.loc 1 112 14 is_stmt 0 view .LVU97
 406 0022 FFF7FEFF 		bl	HAL_GetTick
 407              	.LVL26:
 112:Core/Src/main.c **** 
 408              		.loc 1 112 12 discriminator 1 view .LVU98
 409 0026 0C4B     		ldr	r3, .L21+8
 410 0028 1860     		str	r0, [r3]
 115:Core/Src/main.c **** 
 411              		.loc 1 115 3 is_stmt 1 view .LVU99
 115:Core/Src/main.c **** 
 412              		.loc 1 115 29 is_stmt 0 view .LVU100
 413 002a 2B68     		ldr	r3, [r5]
 414 002c C01A     		subs	r0, r0, r3
 115:Core/Src/main.c **** 
 415              		.loc 1 115 18 view .LVU101
 416 002e 0B4B     		ldr	r3, .L21+12
 417 0030 1860     		str	r0, [r3]
 118:Core/Src/main.c **** 
 418              		.loc 1 118 3 is_stmt 1 view .LVU102
 419 0032 0122     		movs	r2, #1
 420 0034 0221     		movs	r1, #2
 421 0036 2000     		movs	r0, r4
 422 0038 FFF7FEFF 		bl	HAL_GPIO_WritePin
 423              	.LVL27:
 121:Core/Src/main.c **** 
 424              		.loc 1 121 3 view .LVU103
 425 003c FA20     		movs	r0, #250
 426 003e 8000     		lsls	r0, r0, #2
 427 0040 FFF7FEFF 		bl	HAL_Delay
 428              	.LVL28:
 124:Core/Src/main.c **** 
 429              		.loc 1 124 3 view .LVU104
 430 0044 0022     		movs	r2, #0
 431 0046 0321     		movs	r1, #3
ARM GAS  C:\Users\User\AppData\Local\Temp\ccac0GrA.s 			page 16


 432 0048 2000     		movs	r0, r4
 433 004a FFF7FEFF 		bl	HAL_GPIO_WritePin
 434              	.LVL29:
 435              	.L20:
 130:Core/Src/main.c ****   {
 436              		.loc 1 130 3 view .LVU105
 135:Core/Src/main.c ****   /* USER CODE END 3 */
 437              		.loc 1 135 3 view .LVU106
 130:Core/Src/main.c ****   {
 438              		.loc 1 130 9 view .LVU107
 439 004e FEE7     		b	.L20
 440              	.L22:
 441              		.align	2
 442              	.L21:
 443 0050 00040048 		.word	1207960576
 444 0054 00000000 		.word	start_time
 445 0058 00000000 		.word	end_time
 446 005c 00000000 		.word	execution_time
 447              		.cfi_endproc
 448              	.LFE40:
 450              		.global	init_height
 451              		.section	.bss.init_height,"aw",%nobits
 452              		.align	2
 455              	init_height:
 456 0000 00000000 		.space	4
 457              		.global	init_width
 458              		.section	.bss.init_width,"aw",%nobits
 459              		.align	2
 462              	init_width:
 463 0000 00000000 		.space	4
 464              		.global	checksum
 465              		.section	.bss.checksum,"aw",%nobits
 466              		.align	3
 469              	checksum:
 470 0000 00000000 		.space	8
 470      00000000 
 471              		.global	execution_time
 472              		.section	.bss.execution_time,"aw",%nobits
 473              		.align	2
 476              	execution_time:
 477 0000 00000000 		.space	4
 478              		.global	end_time
 479              		.section	.bss.end_time,"aw",%nobits
 480              		.align	2
 483              	end_time:
 484 0000 00000000 		.space	4
 485              		.global	start_time
 486              		.section	.bss.start_time,"aw",%nobits
 487              		.align	2
 490              	start_time:
 491 0000 00000000 		.space	4
 492              		.text
 493              	.Letext0:
 494              		.file 3 "C:\\ST\\STM32CubeIDE_1.19.0\\STM32CubeIDE\\plugins\\com.st.stm32cube.ide.mcu.externaltool
 495              		.file 4 "C:\\ST\\STM32CubeIDE_1.19.0\\STM32CubeIDE\\plugins\\com.st.stm32cube.ide.mcu.externaltool
 496              		.file 5 "Drivers/CMSIS/Device/ST/STM32F0xx/Include/stm32f051x8.h"
 497              		.file 6 "Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_hal_def.h"
ARM GAS  C:\Users\User\AppData\Local\Temp\ccac0GrA.s 			page 17


 498              		.file 7 "Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_hal_rcc.h"
 499              		.file 8 "Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_hal_gpio.h"
 500              		.file 9 "Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_hal.h"
 501              		.file 10 "<built-in>"
ARM GAS  C:\Users\User\AppData\Local\Temp\ccac0GrA.s 			page 18


DEFINED SYMBOLS
                            *ABS*:00000000 main.c
C:\Users\User\AppData\Local\Temp\ccac0GrA.s:19     .text.MX_GPIO_Init:00000000 $t
C:\Users\User\AppData\Local\Temp\ccac0GrA.s:24     .text.MX_GPIO_Init:00000000 MX_GPIO_Init
C:\Users\User\AppData\Local\Temp\ccac0GrA.s:114    .text.MX_GPIO_Init:0000005c $d
C:\Users\User\AppData\Local\Temp\ccac0GrA.s:120    .text.calculate_mandelbrot_fixed_point_arithmetic:00000000 $t
C:\Users\User\AppData\Local\Temp\ccac0GrA.s:126    .text.calculate_mandelbrot_fixed_point_arithmetic:00000000 calculate_mandelbrot_fixed_point_arithmetic
C:\Users\User\AppData\Local\Temp\ccac0GrA.s:196    .text.calculate_mandelbrot_fixed_point_arithmetic:00000028 $d
C:\Users\User\AppData\Local\Temp\ccac0GrA.s:469    .bss.checksum:00000000 checksum
C:\Users\User\AppData\Local\Temp\ccac0GrA.s:201    .text.calculate_mandelbrot_double:00000000 $t
C:\Users\User\AppData\Local\Temp\ccac0GrA.s:207    .text.calculate_mandelbrot_double:00000000 calculate_mandelbrot_double
C:\Users\User\AppData\Local\Temp\ccac0GrA.s:230    .text.Error_Handler:00000000 $t
C:\Users\User\AppData\Local\Temp\ccac0GrA.s:236    .text.Error_Handler:00000000 Error_Handler
C:\Users\User\AppData\Local\Temp\ccac0GrA.s:268    .text.SystemClock_Config:00000000 $t
C:\Users\User\AppData\Local\Temp\ccac0GrA.s:274    .text.SystemClock_Config:00000000 SystemClock_Config
C:\Users\User\AppData\Local\Temp\ccac0GrA.s:361    .text.main:00000000 $t
C:\Users\User\AppData\Local\Temp\ccac0GrA.s:367    .text.main:00000000 main
C:\Users\User\AppData\Local\Temp\ccac0GrA.s:443    .text.main:00000050 $d
C:\Users\User\AppData\Local\Temp\ccac0GrA.s:490    .bss.start_time:00000000 start_time
C:\Users\User\AppData\Local\Temp\ccac0GrA.s:483    .bss.end_time:00000000 end_time
C:\Users\User\AppData\Local\Temp\ccac0GrA.s:476    .bss.execution_time:00000000 execution_time
C:\Users\User\AppData\Local\Temp\ccac0GrA.s:455    .bss.init_height:00000000 init_height
C:\Users\User\AppData\Local\Temp\ccac0GrA.s:452    .bss.init_height:00000000 $d
C:\Users\User\AppData\Local\Temp\ccac0GrA.s:462    .bss.init_width:00000000 init_width
C:\Users\User\AppData\Local\Temp\ccac0GrA.s:459    .bss.init_width:00000000 $d
C:\Users\User\AppData\Local\Temp\ccac0GrA.s:466    .bss.checksum:00000000 $d
C:\Users\User\AppData\Local\Temp\ccac0GrA.s:473    .bss.execution_time:00000000 $d
C:\Users\User\AppData\Local\Temp\ccac0GrA.s:480    .bss.end_time:00000000 $d
C:\Users\User\AppData\Local\Temp\ccac0GrA.s:487    .bss.start_time:00000000 $d

UNDEFINED SYMBOLS
memset
HAL_GPIO_WritePin
HAL_GPIO_Init
HAL_RCC_OscConfig
HAL_RCC_ClockConfig
HAL_Init
HAL_GetTick
HAL_Delay
