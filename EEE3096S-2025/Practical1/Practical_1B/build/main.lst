ARM GAS  C:\Users\User\AppData\Local\Temp\cc98eHMd.s 			page 1


   1              		.cpu cortex-m0
   2              		.arch armv6s-m
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 1
  11              		.eabi_attribute 34, 0
  12              		.eabi_attribute 18, 4
  13              		.file	"main.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.file 1 "Core/Src/main.c"
  18              		.section	.text.MX_GPIO_Init,"ax",%progbits
  19              		.align	1
  20              		.syntax unified
  21              		.code	16
  22              		.thumb_func
  24              	MX_GPIO_Init:
  25              	.LFB42:
   1:Core/Src/main.c **** /* USER CODE BEGIN Header */
   2:Core/Src/main.c **** /**
   3:Core/Src/main.c ****   ******************************************************************************
   4:Core/Src/main.c ****   * @file           : main.c
   5:Core/Src/main.c ****   * @brief          : Main program body
   6:Core/Src/main.c ****   ******************************************************************************
   7:Core/Src/main.c ****   * @attention
   8:Core/Src/main.c ****   *
   9:Core/Src/main.c ****   * Copyright (c) 2025 STMicroelectronics.
  10:Core/Src/main.c ****   * All rights reserved.
  11:Core/Src/main.c ****   *
  12:Core/Src/main.c ****   * This software is licensed under terms that can be found in the LICENSE file
  13:Core/Src/main.c ****   * in the root directory of this software component.
  14:Core/Src/main.c ****   * If no LICENSE file comes with this software, it is provided AS-IS.
  15:Core/Src/main.c ****   *
  16:Core/Src/main.c ****   ******************************************************************************
  17:Core/Src/main.c ****   */
  18:Core/Src/main.c **** /* USER CODE END Header */
  19:Core/Src/main.c **** /* Includes ------------------------------------------------------------------*/
  20:Core/Src/main.c **** #include "main.h"
  21:Core/Src/main.c **** 
  22:Core/Src/main.c **** /* Private includes ----------------------------------------------------------*/
  23:Core/Src/main.c **** /* USER CODE BEGIN Includes */
  24:Core/Src/main.c **** #include <stdint.h>
  25:Core/Src/main.c **** #include "stm32f0xx.h"
  26:Core/Src/main.c **** /* USER CODE END Includes */
  27:Core/Src/main.c **** 
  28:Core/Src/main.c **** /* Private typedef -----------------------------------------------------------*/
  29:Core/Src/main.c **** /* USER CODE BEGIN PTD */
  30:Core/Src/main.c **** #define MAX_ITER 100
  31:Core/Src/main.c **** /* USER CODE END PTD */
  32:Core/Src/main.c **** 
  33:Core/Src/main.c **** /* Private define ------------------------------------------------------------*/
ARM GAS  C:\Users\User\AppData\Local\Temp\cc98eHMd.s 			page 2


  34:Core/Src/main.c **** /* USER CODE BEGIN PD */
  35:Core/Src/main.c **** 
  36:Core/Src/main.c **** /* USER CODE END PD */
  37:Core/Src/main.c **** 
  38:Core/Src/main.c **** /* Private macro -------------------------------------------------------------*/
  39:Core/Src/main.c **** /* USER CODE BEGIN PM */
  40:Core/Src/main.c **** 
  41:Core/Src/main.c **** /* USER CODE END PM */
  42:Core/Src/main.c **** 
  43:Core/Src/main.c **** /* Private variables ---------------------------------------------------------*/
  44:Core/Src/main.c **** 
  45:Core/Src/main.c **** /* USER CODE BEGIN PV */
  46:Core/Src/main.c **** //TODO: Define and initialize the global variables required
  47:Core/Src/main.c **** 
  48:Core/Src/main.c **** uint32_t start_time;       // Clock time at start of operation
  49:Core/Src/main.c **** uint32_t end_time;         // Clock time at end of operation
  50:Core/Src/main.c **** uint32_t execution_time;   // Difference between start and end time
  51:Core/Src/main.c **** uint64_t checksum;         // Sum returned by Mandelbrot function
  52:Core/Src/main.c **** int init_width = 128;            // Initial height of 2D plane
  53:Core/Src/main.c **** int init_height = 128;           // Initial width of 2D plane
  54:Core/Src/main.c **** 
  55:Core/Src/main.c **** 
  56:Core/Src/main.c **** /* USER CODE END PV */
  57:Core/Src/main.c **** 
  58:Core/Src/main.c **** /* Private function prototypes -----------------------------------------------*/
  59:Core/Src/main.c **** void SystemClock_Config(void);
  60:Core/Src/main.c **** static void MX_GPIO_Init(void);
  61:Core/Src/main.c **** /* USER CODE BEGIN PFP */
  62:Core/Src/main.c **** uint64_t calculate_mandelbrot_fixed_point_arithmetic(int width, int height, int max_iterations);
  63:Core/Src/main.c **** uint64_t calculate_mandelbrot_double(int width, int height, int max_iterations);
  64:Core/Src/main.c **** 
  65:Core/Src/main.c **** /* USER CODE END PFP */
  66:Core/Src/main.c **** 
  67:Core/Src/main.c **** /* Private user code ---------------------------------------------------------*/
  68:Core/Src/main.c **** /* USER CODE BEGIN 0 */
  69:Core/Src/main.c **** 
  70:Core/Src/main.c **** /* USER CODE END 0 */
  71:Core/Src/main.c **** 
  72:Core/Src/main.c **** /**
  73:Core/Src/main.c ****   * @brief  The application entry point.
  74:Core/Src/main.c ****   * @retval int
  75:Core/Src/main.c ****   */
  76:Core/Src/main.c **** int main(void)
  77:Core/Src/main.c **** {
  78:Core/Src/main.c ****   /* USER CODE BEGIN 1 */
  79:Core/Src/main.c **** 
  80:Core/Src/main.c ****   /* USER CODE END 1 */
  81:Core/Src/main.c **** 
  82:Core/Src/main.c ****   /* MCU Configuration--------------------------------------------------------*/
  83:Core/Src/main.c **** 
  84:Core/Src/main.c ****   /* Reset of all peripherals, Initializes the Flash interface and the Systick. */
  85:Core/Src/main.c ****   HAL_Init();
  86:Core/Src/main.c **** 
  87:Core/Src/main.c ****   /* USER CODE BEGIN Init */
  88:Core/Src/main.c **** 
  89:Core/Src/main.c ****   /* USER CODE END Init */
  90:Core/Src/main.c **** 
ARM GAS  C:\Users\User\AppData\Local\Temp\cc98eHMd.s 			page 3


  91:Core/Src/main.c ****   /* Configure the system clock */
  92:Core/Src/main.c ****   SystemClock_Config();
  93:Core/Src/main.c **** 
  94:Core/Src/main.c ****   /* USER CODE BEGIN SysInit */
  95:Core/Src/main.c **** 
  96:Core/Src/main.c ****   /* USER CODE END SysInit */
  97:Core/Src/main.c **** 
  98:Core/Src/main.c ****   /* Initialize all configured peripherals */
  99:Core/Src/main.c ****   MX_GPIO_Init();
 100:Core/Src/main.c ****   /* USER CODE BEGIN 2 */
 101:Core/Src/main.c ****   //TODO: Turn on LED 0 to signify the start of the operation
 102:Core/Src/main.c ****   HAL_GPIO_WritePin(GPIOB, GPIO_PIN_0, GPIO_PIN_SET);
 103:Core/Src/main.c **** 
 104:Core/Src/main.c ****   //TODO: Record the start time
 105:Core/Src/main.c ****   start_time = HAL_GetTick();
 106:Core/Src/main.c ****   
 107:Core/Src/main.c ****   //TODO: Call the Mandelbrot Function and store the output in the checksum variable defined initia
 108:Core/Src/main.c ****   
 109:Core/Src/main.c **** 
 110:Core/Src/main.c ****   //TODO: Record the end time
 111:Core/Src/main.c ****   end_time = HAL_GetTick();
 112:Core/Src/main.c **** 
 113:Core/Src/main.c ****   //TODO: Calculate the execution time
 114:Core/Src/main.c ****   execution_time = end_time - start_time;
 115:Core/Src/main.c **** 
 116:Core/Src/main.c ****   //TODO: Turn on LED 1 to signify the end of the operation
 117:Core/Src/main.c ****   HAL_GPIO_WritePin(GPIOB, GPIO_PIN_1, GPIO_PIN_SET);
 118:Core/Src/main.c **** 
 119:Core/Src/main.c ****   //TODO: Hold the LEDs on for a 1s delay
 120:Core/Src/main.c ****   HAL_Delay(1000);
 121:Core/Src/main.c **** 
 122:Core/Src/main.c ****   //TODO: Turn off the LEDs
 123:Core/Src/main.c ****   HAL_GPIO_WritePin(GPIOB, GPIO_PIN_0|GPIO_PIN_1, GPIO_PIN_RESET);
 124:Core/Src/main.c **** 
 125:Core/Src/main.c ****   /* USER CODE END 2 */
 126:Core/Src/main.c **** 
 127:Core/Src/main.c ****   /* Infinite loop */
 128:Core/Src/main.c ****   /* USER CODE BEGIN WHILE */
 129:Core/Src/main.c ****   while (1)
 130:Core/Src/main.c ****   {
 131:Core/Src/main.c ****     /* USER CODE END WHILE */
 132:Core/Src/main.c ****     /* USER CODE BEGIN 3 */
 133:Core/Src/main.c ****   }
 134:Core/Src/main.c ****   /* USER CODE END 3 */
 135:Core/Src/main.c **** }
 136:Core/Src/main.c **** 
 137:Core/Src/main.c **** /**
 138:Core/Src/main.c ****   * @brief System Clock Configuration
 139:Core/Src/main.c ****   * @retval None
 140:Core/Src/main.c ****   */
 141:Core/Src/main.c **** void SystemClock_Config(void)
 142:Core/Src/main.c **** {
 143:Core/Src/main.c ****   RCC_OscInitTypeDef RCC_OscInitStruct = {0};
 144:Core/Src/main.c ****   RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 145:Core/Src/main.c **** 
 146:Core/Src/main.c ****   /** Initializes the RCC Oscillators according to the specified parameters
 147:Core/Src/main.c ****   * in the RCC_OscInitTypeDef structure.
ARM GAS  C:\Users\User\AppData\Local\Temp\cc98eHMd.s 			page 4


 148:Core/Src/main.c ****   */
 149:Core/Src/main.c ****   RCC_OscInitStruct.OscillatorType = RCC_OSCILLATORTYPE_HSI;
 150:Core/Src/main.c ****   RCC_OscInitStruct.HSIState = RCC_HSI_ON;
 151:Core/Src/main.c ****   RCC_OscInitStruct.HSICalibrationValue = RCC_HSICALIBRATION_DEFAULT;
 152:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_NONE;
 153:Core/Src/main.c ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 154:Core/Src/main.c ****   {
 155:Core/Src/main.c ****     Error_Handler();
 156:Core/Src/main.c ****   }
 157:Core/Src/main.c **** 
 158:Core/Src/main.c ****   /** Initializes the CPU, AHB and APB buses clocks
 159:Core/Src/main.c ****   */
 160:Core/Src/main.c ****   RCC_ClkInitStruct.ClockType = RCC_CLOCKTYPE_HCLK|RCC_CLOCKTYPE_SYSCLK
 161:Core/Src/main.c ****                               |RCC_CLOCKTYPE_PCLK1;
 162:Core/Src/main.c ****   RCC_ClkInitStruct.SYSCLKSource = RCC_SYSCLKSOURCE_HSI;
 163:Core/Src/main.c ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 164:Core/Src/main.c ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV1;
 165:Core/Src/main.c **** 
 166:Core/Src/main.c ****   if (HAL_RCC_ClockConfig(&RCC_ClkInitStruct, FLASH_LATENCY_0) != HAL_OK)
 167:Core/Src/main.c ****   {
 168:Core/Src/main.c ****     Error_Handler();
 169:Core/Src/main.c ****   }
 170:Core/Src/main.c **** }
 171:Core/Src/main.c **** 
 172:Core/Src/main.c **** /**
 173:Core/Src/main.c ****   * @brief GPIO Initialization Function
 174:Core/Src/main.c ****   * @param None
 175:Core/Src/main.c ****   * @retval None
 176:Core/Src/main.c ****   */
 177:Core/Src/main.c **** static void MX_GPIO_Init(void)
 178:Core/Src/main.c **** {
  26              		.loc 1 178 1 view -0
  27              		.cfi_startproc
  28              		@ args = 0, pretend = 0, frame = 32
  29              		@ frame_needed = 0, uses_anonymous_args = 0
  30 0000 10B5     		push	{r4, lr}
  31              	.LCFI0:
  32              		.cfi_def_cfa_offset 8
  33              		.cfi_offset 4, -8
  34              		.cfi_offset 14, -4
  35 0002 88B0     		sub	sp, sp, #32
  36              	.LCFI1:
  37              		.cfi_def_cfa_offset 40
 179:Core/Src/main.c ****   GPIO_InitTypeDef GPIO_InitStruct = {0};
  38              		.loc 1 179 3 view .LVU1
  39              		.loc 1 179 20 is_stmt 0 view .LVU2
  40 0004 1422     		movs	r2, #20
  41 0006 0021     		movs	r1, #0
  42 0008 03A8     		add	r0, sp, #12
  43 000a FFF7FEFF 		bl	memset
  44              	.LVL0:
 180:Core/Src/main.c **** /* USER CODE BEGIN MX_GPIO_Init_1 */
 181:Core/Src/main.c **** /* USER CODE END MX_GPIO_Init_1 */
 182:Core/Src/main.c **** 
 183:Core/Src/main.c ****   /* GPIO Ports Clock Enable */
 184:Core/Src/main.c ****   __HAL_RCC_GPIOB_CLK_ENABLE();
  45              		.loc 1 184 3 is_stmt 1 view .LVU3
ARM GAS  C:\Users\User\AppData\Local\Temp\cc98eHMd.s 			page 5


  46              	.LBB4:
  47              		.loc 1 184 3 view .LVU4
  48              		.loc 1 184 3 view .LVU5
  49 000e 134B     		ldr	r3, .L2
  50 0010 5A69     		ldr	r2, [r3, #20]
  51 0012 8021     		movs	r1, #128
  52 0014 C902     		lsls	r1, r1, #11
  53 0016 0A43     		orrs	r2, r1
  54 0018 5A61     		str	r2, [r3, #20]
  55              		.loc 1 184 3 view .LVU6
  56 001a 5A69     		ldr	r2, [r3, #20]
  57 001c 0A40     		ands	r2, r1
  58 001e 0192     		str	r2, [sp, #4]
  59              		.loc 1 184 3 view .LVU7
  60 0020 019A     		ldr	r2, [sp, #4]
  61              	.LBE4:
  62              		.loc 1 184 3 view .LVU8
 185:Core/Src/main.c ****   __HAL_RCC_GPIOA_CLK_ENABLE();
  63              		.loc 1 185 3 view .LVU9
  64              	.LBB5:
  65              		.loc 1 185 3 view .LVU10
  66              		.loc 1 185 3 view .LVU11
  67 0022 5A69     		ldr	r2, [r3, #20]
  68 0024 8021     		movs	r1, #128
  69 0026 8902     		lsls	r1, r1, #10
  70 0028 0A43     		orrs	r2, r1
  71 002a 5A61     		str	r2, [r3, #20]
  72              		.loc 1 185 3 view .LVU12
  73 002c 5B69     		ldr	r3, [r3, #20]
  74 002e 0B40     		ands	r3, r1
  75 0030 0293     		str	r3, [sp, #8]
  76              		.loc 1 185 3 view .LVU13
  77 0032 029B     		ldr	r3, [sp, #8]
  78              	.LBE5:
  79              		.loc 1 185 3 view .LVU14
 186:Core/Src/main.c **** 
 187:Core/Src/main.c ****   /*Configure GPIO pin Output Level */
 188:Core/Src/main.c ****   HAL_GPIO_WritePin(GPIOB, GPIO_PIN_0|GPIO_PIN_1, GPIO_PIN_RESET);
  80              		.loc 1 188 3 view .LVU15
  81 0034 0A4C     		ldr	r4, .L2+4
  82 0036 0022     		movs	r2, #0
  83 0038 0321     		movs	r1, #3
  84 003a 2000     		movs	r0, r4
  85 003c FFF7FEFF 		bl	HAL_GPIO_WritePin
  86              	.LVL1:
 189:Core/Src/main.c **** 
 190:Core/Src/main.c ****   /*Configure GPIO pins : PB0 PB1 */
 191:Core/Src/main.c ****   GPIO_InitStruct.Pin = GPIO_PIN_0|GPIO_PIN_1;
  87              		.loc 1 191 3 view .LVU16
  88              		.loc 1 191 23 is_stmt 0 view .LVU17
  89 0040 0323     		movs	r3, #3
  90 0042 0393     		str	r3, [sp, #12]
 192:Core/Src/main.c ****   GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
  91              		.loc 1 192 3 is_stmt 1 view .LVU18
  92              		.loc 1 192 24 is_stmt 0 view .LVU19
  93 0044 023B     		subs	r3, r3, #2
  94 0046 0493     		str	r3, [sp, #16]
ARM GAS  C:\Users\User\AppData\Local\Temp\cc98eHMd.s 			page 6


 193:Core/Src/main.c ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
  95              		.loc 1 193 3 is_stmt 1 view .LVU20
  96              		.loc 1 193 24 is_stmt 0 view .LVU21
  97 0048 0023     		movs	r3, #0
  98 004a 0593     		str	r3, [sp, #20]
 194:Core/Src/main.c ****   GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
  99              		.loc 1 194 3 is_stmt 1 view .LVU22
 100              		.loc 1 194 25 is_stmt 0 view .LVU23
 101 004c 0693     		str	r3, [sp, #24]
 195:Core/Src/main.c ****   HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 102              		.loc 1 195 3 is_stmt 1 view .LVU24
 103 004e 03A9     		add	r1, sp, #12
 104 0050 2000     		movs	r0, r4
 105 0052 FFF7FEFF 		bl	HAL_GPIO_Init
 106              	.LVL2:
 196:Core/Src/main.c **** 
 197:Core/Src/main.c **** /* USER CODE BEGIN MX_GPIO_Init_2 */
 198:Core/Src/main.c **** /* USER CODE END MX_GPIO_Init_2 */
 199:Core/Src/main.c **** }
 107              		.loc 1 199 1 is_stmt 0 view .LVU25
 108 0056 08B0     		add	sp, sp, #32
 109              		@ sp needed
 110 0058 10BD     		pop	{r4, pc}
 111              	.L3:
 112 005a C046     		.align	2
 113              	.L2:
 114 005c 00100240 		.word	1073876992
 115 0060 00040048 		.word	1207960576
 116              		.cfi_endproc
 117              	.LFE42:
 119              		.global	__aeabi_idiv
 120              		.global	__aeabi_i2d
 121              		.global	__aeabi_dmul
 122              		.global	__aeabi_dsub
 123              		.global	__aeabi_d2iz
 124              		.global	__aeabi_dadd
 125              		.section	.text.calculate_mandelbrot_fixed_point_arithmetic,"ax",%progbits
 126              		.align	1
 127              		.global	calculate_mandelbrot_fixed_point_arithmetic
 128              		.syntax unified
 129              		.code	16
 130              		.thumb_func
 132              	calculate_mandelbrot_fixed_point_arithmetic:
 133              	.LVL3:
 134              	.LFB43:
 200:Core/Src/main.c **** 
 201:Core/Src/main.c **** /* USER CODE BEGIN 4 */
 202:Core/Src/main.c **** //TODO: Mandelbrot using variable type integers and fixed point arithmetic
 203:Core/Src/main.c **** uint64_t calculate_mandelbrot_fixed_point_arithmetic(int width, int height, int max_iterations) {
 135              		.loc 1 203 97 is_stmt 1 view -0
 136              		.cfi_startproc
 137              		@ args = 0, pretend = 0, frame = 16
 138              		@ frame_needed = 0, uses_anonymous_args = 0
 139              		.loc 1 203 97 is_stmt 0 view .LVU27
 140 0000 F0B5     		push	{r4, r5, r6, r7, lr}
 141              	.LCFI2:
 142              		.cfi_def_cfa_offset 20
ARM GAS  C:\Users\User\AppData\Local\Temp\cc98eHMd.s 			page 7


 143              		.cfi_offset 4, -20
 144              		.cfi_offset 5, -16
 145              		.cfi_offset 6, -12
 146              		.cfi_offset 7, -8
 147              		.cfi_offset 14, -4
 148 0002 DE46     		mov	lr, fp
 149 0004 5746     		mov	r7, r10
 150 0006 4E46     		mov	r6, r9
 151 0008 4546     		mov	r5, r8
 152 000a E0B5     		push	{r5, r6, r7, lr}
 153              	.LCFI3:
 154              		.cfi_def_cfa_offset 36
 155              		.cfi_offset 8, -36
 156              		.cfi_offset 9, -32
 157              		.cfi_offset 10, -28
 158              		.cfi_offset 11, -24
 159 000c 85B0     		sub	sp, sp, #20
 160              	.LCFI4:
 161              		.cfi_def_cfa_offset 56
 162 000e 0700     		movs	r7, r0
 163 0010 8946     		mov	r9, r1
 164 0012 1500     		movs	r5, r2
 204:Core/Src/main.c ****   //uint64_t mandelbrot_sum = 0;
 205:Core/Src/main.c ****     //TODO: Complete the function implementation
 206:Core/Src/main.c ****   checksum = 0;
 165              		.loc 1 206 3 is_stmt 1 view .LVU28
 166              		.loc 1 206 12 is_stmt 0 view .LVU29
 167 0014 334B     		ldr	r3, .L14
 168 0016 0020     		movs	r0, #0
 169              	.LVL4:
 170              		.loc 1 206 12 view .LVU30
 171 0018 0021     		movs	r1, #0
 172              	.LVL5:
 173              		.loc 1 206 12 view .LVU31
 174 001a 1860     		str	r0, [r3]
 175 001c 5960     		str	r1, [r3, #4]
 207:Core/Src/main.c ****   for (int y = 0; y <= height - 1; y++) {
 176              		.loc 1 207 3 is_stmt 1 view .LVU32
 177              	.LBB6:
 178              		.loc 1 207 8 view .LVU33
 179              	.LVL6:
 180              		.loc 1 207 12 is_stmt 0 view .LVU34
 181 001e 0023     		movs	r3, #0
 182 0020 9846     		mov	r8, r3
 183              		.loc 1 207 3 view .LVU35
 184 0022 50E0     		b	.L5
 185              	.LVL7:
 186              	.L8:
 187              	.LBB7:
 188              	.LBB8:
 189              	.LBB9:
 208:Core/Src/main.c **** 	  for (int x=0; x <= width - 1; x++) {
 209:Core/Src/main.c **** 		  int x0 = (x)/(width)*3.5 - 2.5;
 210:Core/Src/main.c **** 		  int y0 = (y)/(height)*2.0 - 1.0;
 211:Core/Src/main.c **** 		  int xi = 0;
 212:Core/Src/main.c **** 		  int yi = 0;
 213:Core/Src/main.c **** 		  int iteration = 0;
ARM GAS  C:\Users\User\AppData\Local\Temp\cc98eHMd.s 			page 8


 214:Core/Src/main.c **** 		  while ((iteration < max_iterations) && ((xi^2)+(yi^2) <= 4)) {
 215:Core/Src/main.c **** 			  int temp = (xi^2) - (yi^2);
 190              		.loc 1 215 6 is_stmt 1 view .LVU36
 191              		.loc 1 215 10 is_stmt 0 view .LVU37
 192 0024 C31A     		subs	r3, r0, r3
 193              	.LVL8:
 216:Core/Src/main.c **** 			  yi = 2*(xi)*(yi) + y0;
 194              		.loc 1 216 6 is_stmt 1 view .LVU38
 195              		.loc 1 216 17 is_stmt 0 view .LVU39
 196 0026 7243     		muls	r2, r6
 197              	.LVL9:
 198              		.loc 1 216 17 view .LVU40
 199 0028 5200     		lsls	r2, r2, #1
 200              		.loc 1 216 9 view .LVU41
 201 002a 5A44     		add	r2, r2, fp
 202 002c 1600     		movs	r6, r2
 203              	.LVL10:
 217:Core/Src/main.c **** 			  xi = temp + x0;
 204              		.loc 1 217 6 is_stmt 1 view .LVU42
 205              		.loc 1 217 9 is_stmt 0 view .LVU43
 206 002e E218     		adds	r2, r4, r3
 207              	.LVL11:
 218:Core/Src/main.c **** 			  iteration += 1;
 208              		.loc 1 218 6 is_stmt 1 view .LVU44
 209              		.loc 1 218 16 is_stmt 0 view .LVU45
 210 0030 0131     		adds	r1, r1, #1
 211              	.LVL12:
 212              	.L6:
 213              		.loc 1 218 16 view .LVU46
 214              	.LBE9:
 214:Core/Src/main.c **** 			  int temp = (xi^2) - (yi^2);
 215              		.loc 1 214 41 is_stmt 1 view .LVU47
 216 0032 A942     		cmp	r1, r5
 217 0034 06DA     		bge	.L7
 214:Core/Src/main.c **** 			  int temp = (xi^2) - (yi^2);
 218              		.loc 1 214 48 is_stmt 0 discriminator 1 view .LVU48
 219 0036 0223     		movs	r3, #2
 220 0038 1000     		movs	r0, r2
 221 003a 5840     		eors	r0, r3
 214:Core/Src/main.c **** 			  int temp = (xi^2) - (yi^2);
 222              		.loc 1 214 55 discriminator 1 view .LVU49
 223 003c 7340     		eors	r3, r6
 214:Core/Src/main.c **** 			  int temp = (xi^2) - (yi^2);
 224              		.loc 1 214 51 discriminator 1 view .LVU50
 225 003e C718     		adds	r7, r0, r3
 214:Core/Src/main.c **** 			  int temp = (xi^2) - (yi^2);
 226              		.loc 1 214 41 discriminator 1 view .LVU51
 227 0040 042F     		cmp	r7, #4
 228 0042 EFDD     		ble	.L8
 229              	.L7:
 219:Core/Src/main.c **** 		  }
 220:Core/Src/main.c **** 		  checksum += iteration;
 230              		.loc 1 220 14 view .LVU52
 231 0044 6646     		mov	r6, ip
 232              	.LVL13:
 233              		.loc 1 220 14 view .LVU53
 234 0046 5746     		mov	r7, r10
ARM GAS  C:\Users\User\AppData\Local\Temp\cc98eHMd.s 			page 9


 235 0048 0395     		str	r5, [sp, #12]
 236              		.loc 1 220 5 is_stmt 1 view .LVU54
 237              		.loc 1 220 14 is_stmt 0 view .LVU55
 238 004a 2648     		ldr	r0, .L14
 239 004c 0091     		str	r1, [sp]
 240 004e CB17     		asrs	r3, r1, #31
 241 0050 0193     		str	r3, [sp, #4]
 242 0052 0268     		ldr	r2, [r0]
 243 0054 4368     		ldr	r3, [r0, #4]
 244              	.LVL14:
 245              		.loc 1 220 14 view .LVU56
 246 0056 009C     		ldr	r4, [sp]
 247 0058 019D     		ldr	r5, [sp, #4]
 248              	.LVL15:
 249              		.loc 1 220 14 view .LVU57
 250 005a 1219     		adds	r2, r2, r4
 251 005c 6B41     		adcs	r3, r3, r5
 252 005e 0260     		str	r2, [r0]
 253 0060 4360     		str	r3, [r0, #4]
 254              	.LBE8:
 208:Core/Src/main.c **** 		  int x0 = (x)/(width)*3.5 - 2.5;
 255              		.loc 1 208 35 is_stmt 1 discriminator 2 view .LVU58
 256 0062 0136     		adds	r6, r6, #1
 257              	.LVL16:
 258              	.L10:
 208:Core/Src/main.c **** 		  int x0 = (x)/(width)*3.5 - 2.5;
 259              		.loc 1 208 20 discriminator 1 view .LVU59
 260 0064 BE42     		cmp	r6, r7
 261 0066 2ADA     		bge	.L12
 262              	.LBB10:
 209:Core/Src/main.c **** 		  int y0 = (y)/(height)*2.0 - 1.0;
 263              		.loc 1 209 5 view .LVU60
 209:Core/Src/main.c **** 		  int y0 = (y)/(height)*2.0 - 1.0;
 264              		.loc 1 209 17 is_stmt 0 view .LVU61
 265 0068 3900     		movs	r1, r7
 266 006a 3000     		movs	r0, r6
 267 006c FFF7FEFF 		bl	__aeabi_idiv
 268              	.LVL17:
 209:Core/Src/main.c **** 		  int y0 = (y)/(height)*2.0 - 1.0;
 269              		.loc 1 209 25 view .LVU62
 270 0070 FFF7FEFF 		bl	__aeabi_i2d
 271              	.LVL18:
 272 0074 0022     		movs	r2, #0
 273 0076 1C4B     		ldr	r3, .L14+4
 274 0078 FFF7FEFF 		bl	__aeabi_dmul
 275              	.LVL19:
 209:Core/Src/main.c **** 		  int y0 = (y)/(height)*2.0 - 1.0;
 276              		.loc 1 209 30 view .LVU63
 277 007c 0022     		movs	r2, #0
 278 007e 1B4B     		ldr	r3, .L14+8
 279 0080 FFF7FEFF 		bl	__aeabi_dsub
 280              	.LVL20:
 209:Core/Src/main.c **** 		  int y0 = (y)/(height)*2.0 - 1.0;
 281              		.loc 1 209 9 view .LVU64
 282 0084 FFF7FEFF 		bl	__aeabi_d2iz
 283              	.LVL21:
 284 0088 0400     		movs	r4, r0
ARM GAS  C:\Users\User\AppData\Local\Temp\cc98eHMd.s 			page 10


 285              	.LVL22:
 210:Core/Src/main.c **** 		  int xi = 0;
 286              		.loc 1 210 5 is_stmt 1 view .LVU65
 210:Core/Src/main.c **** 		  int xi = 0;
 287              		.loc 1 210 17 is_stmt 0 view .LVU66
 288 008a 4946     		mov	r1, r9
 289 008c 4046     		mov	r0, r8
 290              	.LVL23:
 210:Core/Src/main.c **** 		  int xi = 0;
 291              		.loc 1 210 17 view .LVU67
 292 008e FFF7FEFF 		bl	__aeabi_idiv
 293              	.LVL24:
 210:Core/Src/main.c **** 		  int xi = 0;
 294              		.loc 1 210 26 view .LVU68
 295 0092 FFF7FEFF 		bl	__aeabi_i2d
 296              	.LVL25:
 297 0096 0200     		movs	r2, r0
 298 0098 0B00     		movs	r3, r1
 299 009a FFF7FEFF 		bl	__aeabi_dadd
 300              	.LVL26:
 210:Core/Src/main.c **** 		  int xi = 0;
 301              		.loc 1 210 31 view .LVU69
 302 009e 0022     		movs	r2, #0
 303 00a0 134B     		ldr	r3, .L14+12
 304 00a2 FFF7FEFF 		bl	__aeabi_dsub
 305              	.LVL27:
 210:Core/Src/main.c **** 		  int xi = 0;
 306              		.loc 1 210 9 view .LVU70
 307 00a6 FFF7FEFF 		bl	__aeabi_d2iz
 308              	.LVL28:
 309 00aa 8446     		mov	ip, r0
 310              	.LVL29:
 211:Core/Src/main.c **** 		  int yi = 0;
 311              		.loc 1 211 5 is_stmt 1 view .LVU71
 212:Core/Src/main.c **** 		  int iteration = 0;
 312              		.loc 1 212 5 view .LVU72
 213:Core/Src/main.c **** 		  while ((iteration < max_iterations) && ((xi^2)+(yi^2) <= 4)) {
 313              		.loc 1 213 5 view .LVU73
 214:Core/Src/main.c **** 			  int temp = (xi^2) - (yi^2);
 314              		.loc 1 214 5 view .LVU74
 213:Core/Src/main.c **** 		  while ((iteration < max_iterations) && ((xi^2)+(yi^2) <= 4)) {
 315              		.loc 1 213 9 is_stmt 0 view .LVU75
 316 00ac 0021     		movs	r1, #0
 212:Core/Src/main.c **** 		  int iteration = 0;
 317              		.loc 1 212 9 view .LVU76
 318 00ae 0020     		movs	r0, #0
 319              	.LVL30:
 211:Core/Src/main.c **** 		  int yi = 0;
 320              		.loc 1 211 9 view .LVU77
 321 00b0 0022     		movs	r2, #0
 322 00b2 E346     		mov	fp, ip
 323 00b4 B446     		mov	ip, r6
 324              	.LVL31:
 211:Core/Src/main.c **** 		  int yi = 0;
 325              		.loc 1 211 9 view .LVU78
 326 00b6 0600     		movs	r6, r0
 327              	.LVL32:
ARM GAS  C:\Users\User\AppData\Local\Temp\cc98eHMd.s 			page 11


 211:Core/Src/main.c **** 		  int yi = 0;
 328              		.loc 1 211 9 view .LVU79
 329 00b8 BA46     		mov	r10, r7
 330 00ba 039D     		ldr	r5, [sp, #12]
 214:Core/Src/main.c **** 			  int temp = (xi^2) - (yi^2);
 331              		.loc 1 214 11 view .LVU80
 332 00bc B9E7     		b	.L6
 333              	.LVL33:
 334              	.L12:
 214:Core/Src/main.c **** 			  int temp = (xi^2) - (yi^2);
 335              		.loc 1 214 11 view .LVU81
 336              	.LBE10:
 337              	.LBE7:
 207:Core/Src/main.c **** 	  for (int x=0; x <= width - 1; x++) {
 338              		.loc 1 207 37 discriminator 2 view .LVU82
 339 00be 039D     		ldr	r5, [sp, #12]
 207:Core/Src/main.c **** 	  for (int x=0; x <= width - 1; x++) {
 340              		.loc 1 207 37 is_stmt 1 discriminator 2 view .LVU83
 341 00c0 0123     		movs	r3, #1
 342 00c2 9C46     		mov	ip, r3
 343 00c4 E044     		add	r8, r8, ip
 344              	.LVL34:
 345              	.L5:
 207:Core/Src/main.c **** 	  for (int x=0; x <= width - 1; x++) {
 346              		.loc 1 207 21 discriminator 1 view .LVU84
 347 00c6 C845     		cmp	r8, r9
 348 00c8 02DA     		bge	.L13
 349              	.LBB11:
 208:Core/Src/main.c **** 		  int x0 = (x)/(width)*3.5 - 2.5;
 350              		.loc 1 208 13 is_stmt 0 view .LVU85
 351 00ca 0026     		movs	r6, #0
 352 00cc 0395     		str	r5, [sp, #12]
 353 00ce C9E7     		b	.L10
 354              	.L13:
 355              	.LBE11:
 356              	.LBE6:
 221:Core/Src/main.c **** 	  }
 222:Core/Src/main.c ****   }
 223:Core/Src/main.c ****   return checksum;
 357              		.loc 1 223 3 is_stmt 1 view .LVU86
 358              		.loc 1 223 10 is_stmt 0 view .LVU87
 359 00d0 044B     		ldr	r3, .L14
 360              		.loc 1 223 10 discriminator 1 view .LVU88
 361 00d2 1868     		ldr	r0, [r3]
 362 00d4 5968     		ldr	r1, [r3, #4]
 224:Core/Src/main.c **** }
 363              		.loc 1 224 1 view .LVU89
 364 00d6 05B0     		add	sp, sp, #20
 365              		@ sp needed
 366              	.LVL35:
 367              	.LVL36:
 368              	.LVL37:
 369              		.loc 1 224 1 view .LVU90
 370 00d8 F0BC     		pop	{r4, r5, r6, r7}
 371 00da BB46     		mov	fp, r7
 372 00dc B246     		mov	r10, r6
 373 00de A946     		mov	r9, r5
ARM GAS  C:\Users\User\AppData\Local\Temp\cc98eHMd.s 			page 12


 374 00e0 A046     		mov	r8, r4
 375 00e2 F0BD     		pop	{r4, r5, r6, r7, pc}
 376              	.L15:
 377              		.align	2
 378              	.L14:
 379 00e4 00000000 		.word	checksum
 380 00e8 00000C40 		.word	1074528256
 381 00ec 00000440 		.word	1074003968
 382 00f0 0000F03F 		.word	1072693248
 383              		.cfi_endproc
 384              	.LFE43:
 386              		.global	__aeabi_dcmple
 387              		.section	.text.calculate_mandelbrot_double,"ax",%progbits
 388              		.align	1
 389              		.global	calculate_mandelbrot_double
 390              		.syntax unified
 391              		.code	16
 392              		.thumb_func
 394              	calculate_mandelbrot_double:
 395              	.LVL38:
 396              	.LFB44:
 225:Core/Src/main.c **** 
 226:Core/Src/main.c **** //TODO: Mandelbrot using variable type double
 227:Core/Src/main.c **** uint64_t calculate_mandelbrot_double(int width, int height, int max_iterations){
 397              		.loc 1 227 80 is_stmt 1 view -0
 398              		.cfi_startproc
 399              		@ args = 0, pretend = 0, frame = 56
 400              		@ frame_needed = 0, uses_anonymous_args = 0
 401              		.loc 1 227 80 is_stmt 0 view .LVU92
 402 0000 F0B5     		push	{r4, r5, r6, r7, lr}
 403              	.LCFI5:
 404              		.cfi_def_cfa_offset 20
 405              		.cfi_offset 4, -20
 406              		.cfi_offset 5, -16
 407              		.cfi_offset 6, -12
 408              		.cfi_offset 7, -8
 409              		.cfi_offset 14, -4
 410 0002 DE46     		mov	lr, fp
 411 0004 5746     		mov	r7, r10
 412 0006 4E46     		mov	r6, r9
 413 0008 4546     		mov	r5, r8
 414 000a E0B5     		push	{r5, r6, r7, lr}
 415              	.LCFI6:
 416              		.cfi_def_cfa_offset 36
 417              		.cfi_offset 8, -36
 418              		.cfi_offset 9, -32
 419              		.cfi_offset 10, -28
 420              		.cfi_offset 11, -24
 421 000c 8FB0     		sub	sp, sp, #60
 422              	.LCFI7:
 423              		.cfi_def_cfa_offset 96
 424 000e 8346     		mov	fp, r0
 425 0010 0D91     		str	r1, [sp, #52]
 426 0012 9146     		mov	r9, r2
 228:Core/Src/main.c ****     //uint64_t mandelbrot_sum = 0;
 229:Core/Src/main.c ****     //TODO: Complete the function implementation
 230:Core/Src/main.c ****     checksum = 0;
ARM GAS  C:\Users\User\AppData\Local\Temp\cc98eHMd.s 			page 13


 427              		.loc 1 230 5 is_stmt 1 view .LVU93
 428              		.loc 1 230 14 is_stmt 0 view .LVU94
 429 0014 4F49     		ldr	r1, .L26
 430              	.LVL39:
 431              		.loc 1 230 14 view .LVU95
 432 0016 0022     		movs	r2, #0
 433              	.LVL40:
 434              		.loc 1 230 14 view .LVU96
 435 0018 0023     		movs	r3, #0
 436 001a 0A60     		str	r2, [r1]
 437 001c 4B60     		str	r3, [r1, #4]
 231:Core/Src/main.c ****     //max_iterations = (double)max_iterations;
 232:Core/Src/main.c ****       for (int y = 0; y <= height - 1; y++) {
 438              		.loc 1 232 7 is_stmt 1 view .LVU97
 439              	.LBB12:
 440              		.loc 1 232 12 view .LVU98
 441              	.LVL41:
 442              		.loc 1 232 16 is_stmt 0 view .LVU99
 443 001e 0023     		movs	r3, #0
 444 0020 0C93     		str	r3, [sp, #48]
 445              		.loc 1 232 7 view .LVU100
 446 0022 83E0     		b	.L17
 447              	.LVL42:
 448              	.L20:
 449              	.LBB13:
 450              	.LBB14:
 451              	.LBB15:
 233:Core/Src/main.c ****     	  for (int x=0; x <= width - 1; x++) {
 234:Core/Src/main.c ****     		  y = (double)y;
 235:Core/Src/main.c ****     		  x = (double)x;
 236:Core/Src/main.c ****     		  double x0 = (x)/(width)*3.5 - 2.5;
 237:Core/Src/main.c ****     		  double y0 = (y)/(height)*2.0 - 1.0;
 238:Core/Src/main.c ****     		  double xi = 0;
 239:Core/Src/main.c ****     		  double yi = 0;
 240:Core/Src/main.c ****     		  int iteration = 0;
 241:Core/Src/main.c ****     		  while ((iteration < max_iterations) && ((xi*xi)+(yi*yi) <= 4)) {
 242:Core/Src/main.c ****     			  double temp = (xi*xi) - (yi*yi);
 452              		.loc 1 242 10 is_stmt 1 view .LVU101
 453              		.loc 1 242 17 is_stmt 0 view .LVU102
 454 0024 2200     		movs	r2, r4
 455 0026 2B00     		movs	r3, r5
 456 0028 0298     		ldr	r0, [sp, #8]
 457 002a 0399     		ldr	r1, [sp, #12]
 458 002c FFF7FEFF 		bl	__aeabi_dsub
 459              	.LVL43:
 460 0030 0400     		movs	r4, r0
 461 0032 0D00     		movs	r5, r1
 462              	.LVL44:
 243:Core/Src/main.c ****     			  yi = 2*(xi)*(yi) + y0;
 463              		.loc 1 243 10 is_stmt 1 view .LVU103
 464              		.loc 1 243 16 is_stmt 0 view .LVU104
 465 0034 3200     		movs	r2, r6
 466 0036 3B00     		movs	r3, r7
 467 0038 3000     		movs	r0, r6
 468 003a 3900     		movs	r1, r7
 469 003c FFF7FEFF 		bl	__aeabi_dadd
 470              	.LVL45:
ARM GAS  C:\Users\User\AppData\Local\Temp\cc98eHMd.s 			page 14


 471              		.loc 1 243 21 view .LVU105
 472 0040 009A     		ldr	r2, [sp]
 473 0042 019B     		ldr	r3, [sp, #4]
 474 0044 FFF7FEFF 		bl	__aeabi_dmul
 475              	.LVL46:
 476              		.loc 1 243 13 view .LVU106
 477 0048 069A     		ldr	r2, [sp, #24]
 478 004a 079B     		ldr	r3, [sp, #28]
 479 004c FFF7FEFF 		bl	__aeabi_dadd
 480              	.LVL47:
 481 0050 0090     		str	r0, [sp]
 482 0052 0191     		str	r1, [sp, #4]
 483              	.LVL48:
 244:Core/Src/main.c ****     			  xi = temp + x0;
 484              		.loc 1 244 10 is_stmt 1 view .LVU107
 485              		.loc 1 244 13 is_stmt 0 view .LVU108
 486 0054 2200     		movs	r2, r4
 487 0056 2B00     		movs	r3, r5
 488 0058 0498     		ldr	r0, [sp, #16]
 489 005a 0599     		ldr	r1, [sp, #20]
 490              	.LVL49:
 491              		.loc 1 244 13 view .LVU109
 492 005c FFF7FEFF 		bl	__aeabi_dadd
 493              	.LVL50:
 494 0060 0600     		movs	r6, r0
 495              	.LVL51:
 496              		.loc 1 244 13 view .LVU110
 497 0062 0F00     		movs	r7, r1
 498              	.LVL52:
 245:Core/Src/main.c ****     			  iteration += 1;
 499              		.loc 1 245 10 is_stmt 1 view .LVU111
 500              		.loc 1 245 20 is_stmt 0 view .LVU112
 501 0064 0123     		movs	r3, #1
 502 0066 9C46     		mov	ip, r3
 503 0068 E044     		add	r8, r8, ip
 504              	.LVL53:
 505              	.L18:
 506              		.loc 1 245 20 view .LVU113
 507              	.LBE15:
 241:Core/Src/main.c ****     			  double temp = (xi*xi) - (yi*yi);
 508              		.loc 1 241 45 is_stmt 1 view .LVU114
 509 006a C845     		cmp	r8, r9
 510 006c 1DDA     		bge	.L19
 241:Core/Src/main.c ****     			  double temp = (xi*xi) - (yi*yi);
 511              		.loc 1 241 52 is_stmt 0 discriminator 1 view .LVU115
 512 006e 3200     		movs	r2, r6
 513 0070 3B00     		movs	r3, r7
 514 0072 3000     		movs	r0, r6
 515 0074 3900     		movs	r1, r7
 516 0076 FFF7FEFF 		bl	__aeabi_dmul
 517              	.LVL54:
 518 007a 0290     		str	r0, [sp, #8]
 519 007c 0391     		str	r1, [sp, #12]
 241:Core/Src/main.c ****     			  double temp = (xi*xi) - (yi*yi);
 520              		.loc 1 241 60 discriminator 1 view .LVU116
 521 007e 009C     		ldr	r4, [sp]
 522 0080 019D     		ldr	r5, [sp, #4]
ARM GAS  C:\Users\User\AppData\Local\Temp\cc98eHMd.s 			page 15


 523 0082 2200     		movs	r2, r4
 524 0084 2B00     		movs	r3, r5
 525 0086 2000     		movs	r0, r4
 526 0088 2900     		movs	r1, r5
 527 008a FFF7FEFF 		bl	__aeabi_dmul
 528              	.LVL55:
 529 008e 0400     		movs	r4, r0
 530 0090 0D00     		movs	r5, r1
 241:Core/Src/main.c ****     			  double temp = (xi*xi) - (yi*yi);
 531              		.loc 1 241 56 discriminator 1 view .LVU117
 532 0092 0200     		movs	r2, r0
 533 0094 0B00     		movs	r3, r1
 534 0096 0298     		ldr	r0, [sp, #8]
 535 0098 0399     		ldr	r1, [sp, #12]
 536 009a FFF7FEFF 		bl	__aeabi_dadd
 537              	.LVL56:
 241:Core/Src/main.c ****     			  double temp = (xi*xi) - (yi*yi);
 538              		.loc 1 241 45 discriminator 1 view .LVU118
 539 009e 0022     		movs	r2, #0
 540 00a0 2D4B     		ldr	r3, .L26+4
 541 00a2 FFF7FEFF 		bl	__aeabi_dcmple
 542              	.LVL57:
 543 00a6 0028     		cmp	r0, #0
 544 00a8 BCD1     		bne	.L20
 545              	.L19:
 246:Core/Src/main.c ****     		  }
 247:Core/Src/main.c ****     		  checksum += iteration;
 546              		.loc 1 247 18 view .LVU119
 547 00aa 0B9C     		ldr	r4, [sp, #44]
 548 00ac 5546     		mov	r5, r10
 549              		.loc 1 247 9 is_stmt 1 view .LVU120
 550              		.loc 1 247 18 is_stmt 0 view .LVU121
 551 00ae 2949     		ldr	r1, .L26
 552 00b0 4346     		mov	r3, r8
 553 00b2 0893     		str	r3, [sp, #32]
 554 00b4 DB17     		asrs	r3, r3, #31
 555 00b6 0993     		str	r3, [sp, #36]
 556 00b8 0A68     		ldr	r2, [r1]
 557 00ba 4B68     		ldr	r3, [r1, #4]
 558 00bc 089E     		ldr	r6, [sp, #32]
 559 00be 099F     		ldr	r7, [sp, #36]
 560              	.LVL58:
 561              		.loc 1 247 18 view .LVU122
 562 00c0 9219     		adds	r2, r2, r6
 563 00c2 7B41     		adcs	r3, r3, r7
 564 00c4 0A60     		str	r2, [r1]
 565 00c6 4B60     		str	r3, [r1, #4]
 566              	.LBE14:
 233:Core/Src/main.c ****     		  y = (double)y;
 567              		.loc 1 233 39 is_stmt 1 discriminator 2 view .LVU123
 568 00c8 0134     		adds	r4, r4, #1
 569              	.LVL59:
 570              	.L22:
 233:Core/Src/main.c ****     		  y = (double)y;
 571              		.loc 1 233 24 discriminator 1 view .LVU124
 572 00ca AC42     		cmp	r4, r5
 573 00cc 2ADA     		bge	.L24
ARM GAS  C:\Users\User\AppData\Local\Temp\cc98eHMd.s 			page 16


 574              	.LBB16:
 234:Core/Src/main.c ****     		  x = (double)x;
 575              		.loc 1 234 9 view .LVU125
 235:Core/Src/main.c ****     		  double x0 = (x)/(width)*3.5 - 2.5;
 576              		.loc 1 235 9 view .LVU126
 236:Core/Src/main.c ****     		  double y0 = (y)/(height)*2.0 - 1.0;
 577              		.loc 1 236 9 view .LVU127
 236:Core/Src/main.c ****     		  double y0 = (y)/(height)*2.0 - 1.0;
 578              		.loc 1 236 24 is_stmt 0 view .LVU128
 579 00ce 2900     		movs	r1, r5
 580 00d0 2000     		movs	r0, r4
 581 00d2 FFF7FEFF 		bl	__aeabi_idiv
 582              	.LVL60:
 236:Core/Src/main.c ****     		  double y0 = (y)/(height)*2.0 - 1.0;
 583              		.loc 1 236 32 view .LVU129
 584 00d6 FFF7FEFF 		bl	__aeabi_i2d
 585              	.LVL61:
 586 00da 0022     		movs	r2, #0
 587 00dc 1F4B     		ldr	r3, .L26+8
 588 00de FFF7FEFF 		bl	__aeabi_dmul
 589              	.LVL62:
 236:Core/Src/main.c ****     		  double y0 = (y)/(height)*2.0 - 1.0;
 590              		.loc 1 236 16 view .LVU130
 591 00e2 0022     		movs	r2, #0
 592 00e4 1E4B     		ldr	r3, .L26+12
 593 00e6 FFF7FEFF 		bl	__aeabi_dsub
 594              	.LVL63:
 595 00ea 0490     		str	r0, [sp, #16]
 596 00ec 0591     		str	r1, [sp, #20]
 597              	.LVL64:
 237:Core/Src/main.c ****     		  double xi = 0;
 598              		.loc 1 237 9 is_stmt 1 view .LVU131
 237:Core/Src/main.c ****     		  double xi = 0;
 599              		.loc 1 237 24 is_stmt 0 view .LVU132
 600 00ee 5946     		mov	r1, fp
 601 00f0 0C98     		ldr	r0, [sp, #48]
 602              	.LVL65:
 237:Core/Src/main.c ****     		  double xi = 0;
 603              		.loc 1 237 24 view .LVU133
 604 00f2 FFF7FEFF 		bl	__aeabi_idiv
 605              	.LVL66:
 237:Core/Src/main.c ****     		  double xi = 0;
 606              		.loc 1 237 33 view .LVU134
 607 00f6 FFF7FEFF 		bl	__aeabi_i2d
 608              	.LVL67:
 609 00fa 0200     		movs	r2, r0
 610 00fc 0B00     		movs	r3, r1
 611 00fe FFF7FEFF 		bl	__aeabi_dadd
 612              	.LVL68:
 237:Core/Src/main.c ****     		  double xi = 0;
 613              		.loc 1 237 16 view .LVU135
 614 0102 0022     		movs	r2, #0
 615 0104 174B     		ldr	r3, .L26+16
 616 0106 FFF7FEFF 		bl	__aeabi_dsub
 617              	.LVL69:
 618 010a 0690     		str	r0, [sp, #24]
 619 010c 0791     		str	r1, [sp, #28]
ARM GAS  C:\Users\User\AppData\Local\Temp\cc98eHMd.s 			page 17


 620              	.LVL70:
 238:Core/Src/main.c ****     		  double yi = 0;
 621              		.loc 1 238 9 is_stmt 1 view .LVU136
 239:Core/Src/main.c ****     		  int iteration = 0;
 622              		.loc 1 239 9 view .LVU137
 240:Core/Src/main.c ****     		  while ((iteration < max_iterations) && ((xi*xi)+(yi*yi) <= 4)) {
 623              		.loc 1 240 9 view .LVU138
 241:Core/Src/main.c ****     			  double temp = (xi*xi) - (yi*yi);
 624              		.loc 1 241 9 view .LVU139
 240:Core/Src/main.c ****     		  while ((iteration < max_iterations) && ((xi*xi)+(yi*yi) <= 4)) {
 625              		.loc 1 240 13 is_stmt 0 view .LVU140
 626 010e 0023     		movs	r3, #0
 627 0110 9846     		mov	r8, r3
 239:Core/Src/main.c ****     		  int iteration = 0;
 628              		.loc 1 239 16 view .LVU141
 629 0112 0022     		movs	r2, #0
 630 0114 0023     		movs	r3, #0
 631 0116 0092     		str	r2, [sp]
 632 0118 0193     		str	r3, [sp, #4]
 238:Core/Src/main.c ****     		  double yi = 0;
 633              		.loc 1 238 16 view .LVU142
 634 011a 1600     		movs	r6, r2
 635 011c 1F00     		movs	r7, r3
 636 011e 0B94     		str	r4, [sp, #44]
 637 0120 AA46     		mov	r10, r5
 241:Core/Src/main.c ****     			  double temp = (xi*xi) - (yi*yi);
 638              		.loc 1 241 15 view .LVU143
 639 0122 A2E7     		b	.L18
 640              	.LVL71:
 641              	.L24:
 241:Core/Src/main.c ****     			  double temp = (xi*xi) - (yi*yi);
 642              		.loc 1 241 15 view .LVU144
 643              	.LBE16:
 644              	.LBE13:
 232:Core/Src/main.c ****     	  for (int x=0; x <= width - 1; x++) {
 645              		.loc 1 232 41 discriminator 2 view .LVU145
 646 0124 AB46     		mov	fp, r5
 232:Core/Src/main.c ****     	  for (int x=0; x <= width - 1; x++) {
 647              		.loc 1 232 41 is_stmt 1 discriminator 2 view .LVU146
 648 0126 0C9B     		ldr	r3, [sp, #48]
 649 0128 0133     		adds	r3, r3, #1
 650 012a 0C93     		str	r3, [sp, #48]
 651              	.LVL72:
 652              	.L17:
 232:Core/Src/main.c ****     	  for (int x=0; x <= width - 1; x++) {
 653              		.loc 1 232 25 discriminator 1 view .LVU147
 654 012c 0C9B     		ldr	r3, [sp, #48]
 655 012e 0D9A     		ldr	r2, [sp, #52]
 656 0130 9342     		cmp	r3, r2
 657 0132 05DA     		bge	.L25
 658              	.LBB17:
 233:Core/Src/main.c ****     		  y = (double)y;
 659              		.loc 1 233 17 is_stmt 0 view .LVU148
 660 0134 0023     		movs	r3, #0
 661 0136 1C00     		movs	r4, r3
 662 0138 5D46     		mov	r5, fp
 663 013a 0D9B     		ldr	r3, [sp, #52]
ARM GAS  C:\Users\User\AppData\Local\Temp\cc98eHMd.s 			page 18


 664 013c 9B46     		mov	fp, r3
 665              	.LVL73:
 233:Core/Src/main.c ****     		  y = (double)y;
 666              		.loc 1 233 17 view .LVU149
 667 013e C4E7     		b	.L22
 668              	.LVL74:
 669              	.L25:
 233:Core/Src/main.c ****     		  y = (double)y;
 670              		.loc 1 233 17 view .LVU150
 671              	.LBE17:
 672              	.LBE12:
 248:Core/Src/main.c ****     	  }
 249:Core/Src/main.c ****       }
 250:Core/Src/main.c **** 
 251:Core/Src/main.c ****       return checksum;
 673              		.loc 1 251 7 is_stmt 1 view .LVU151
 674              		.loc 1 251 14 is_stmt 0 view .LVU152
 675 0140 044B     		ldr	r3, .L26
 676              	.LVL75:
 677              		.loc 1 251 14 discriminator 1 view .LVU153
 678 0142 1868     		ldr	r0, [r3]
 679 0144 5968     		ldr	r1, [r3, #4]
 252:Core/Src/main.c **** }
 680              		.loc 1 252 1 view .LVU154
 681 0146 0FB0     		add	sp, sp, #60
 682              		@ sp needed
 683              	.LVL76:
 684              	.LVL77:
 685              		.loc 1 252 1 view .LVU155
 686 0148 F0BC     		pop	{r4, r5, r6, r7}
 687 014a BB46     		mov	fp, r7
 688 014c B246     		mov	r10, r6
 689 014e A946     		mov	r9, r5
 690 0150 A046     		mov	r8, r4
 691 0152 F0BD     		pop	{r4, r5, r6, r7, pc}
 692              	.L27:
 693              		.align	2
 694              	.L26:
 695 0154 00000000 		.word	checksum
 696 0158 00001040 		.word	1074790400
 697 015c 00000C40 		.word	1074528256
 698 0160 00000440 		.word	1074003968
 699 0164 0000F03F 		.word	1072693248
 700              		.cfi_endproc
 701              	.LFE44:
 703              		.section	.text.Error_Handler,"ax",%progbits
 704              		.align	1
 705              		.global	Error_Handler
 706              		.syntax unified
 707              		.code	16
 708              		.thumb_func
 710              	Error_Handler:
 711              	.LFB45:
 253:Core/Src/main.c **** 
 254:Core/Src/main.c **** /* USER CODE END 4 */
 255:Core/Src/main.c **** 
 256:Core/Src/main.c **** /**
ARM GAS  C:\Users\User\AppData\Local\Temp\cc98eHMd.s 			page 19


 257:Core/Src/main.c ****   * @brief  This function is executed in case of error occurrence.
 258:Core/Src/main.c ****   * @retval None
 259:Core/Src/main.c ****   */
 260:Core/Src/main.c **** void Error_Handler(void)
 261:Core/Src/main.c **** {
 712              		.loc 1 261 1 is_stmt 1 view -0
 713              		.cfi_startproc
 714              		@ Volatile: function does not return.
 715              		@ args = 0, pretend = 0, frame = 0
 716              		@ frame_needed = 0, uses_anonymous_args = 0
 717              		@ link register save eliminated.
 262:Core/Src/main.c ****   /* USER CODE BEGIN Error_Handler_Debug */
 263:Core/Src/main.c ****   /* User can add his own implementation to report the HAL error return state */
 264:Core/Src/main.c ****   __disable_irq();
 718              		.loc 1 264 3 view .LVU157
 719              	.LBB18:
 720              	.LBI18:
 721              		.file 2 "Drivers/CMSIS/Include/cmsis_gcc.h"
   1:Drivers/CMSIS/Include/cmsis_gcc.h **** /**************************************************************************//**
   2:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @file     cmsis_gcc.h
   3:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @brief    CMSIS compiler GCC header file
   4:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @version  V5.0.4
   5:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @date     09. April 2018
   6:Drivers/CMSIS/Include/cmsis_gcc.h ****  ******************************************************************************/
   7:Drivers/CMSIS/Include/cmsis_gcc.h **** /*
   8:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Copyright (c) 2009-2018 Arm Limited. All rights reserved.
   9:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  10:Drivers/CMSIS/Include/cmsis_gcc.h ****  * SPDX-License-Identifier: Apache-2.0
  11:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  12:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Licensed under the Apache License, Version 2.0 (the License); you may
  13:Drivers/CMSIS/Include/cmsis_gcc.h ****  * not use this file except in compliance with the License.
  14:Drivers/CMSIS/Include/cmsis_gcc.h ****  * You may obtain a copy of the License at
  15:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  16:Drivers/CMSIS/Include/cmsis_gcc.h ****  * www.apache.org/licenses/LICENSE-2.0
  17:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  18:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Unless required by applicable law or agreed to in writing, software
  19:Drivers/CMSIS/Include/cmsis_gcc.h ****  * distributed under the License is distributed on an AS IS BASIS, WITHOUT
  20:Drivers/CMSIS/Include/cmsis_gcc.h ****  * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  21:Drivers/CMSIS/Include/cmsis_gcc.h ****  * See the License for the specific language governing permissions and
  22:Drivers/CMSIS/Include/cmsis_gcc.h ****  * limitations under the License.
  23:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
  24:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  25:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __CMSIS_GCC_H
  26:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_H
  27:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  28:Drivers/CMSIS/Include/cmsis_gcc.h **** /* ignore some GCC warnings */
  29:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic push
  30:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wsign-conversion"
  31:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wconversion"
  32:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wunused-parameter"
  33:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  34:Drivers/CMSIS/Include/cmsis_gcc.h **** /* Fallback for __has_builtin */
  35:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __has_builtin
  36:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __has_builtin(x) (0)
  37:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  38:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  39:Drivers/CMSIS/Include/cmsis_gcc.h **** /* CMSIS compiler specific defines */
ARM GAS  C:\Users\User\AppData\Local\Temp\cc98eHMd.s 			page 20


  40:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __ASM
  41:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __ASM                                  __asm
  42:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  43:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __INLINE
  44:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __INLINE                               inline
  45:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  46:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __STATIC_INLINE
  47:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __STATIC_INLINE                        static inline
  48:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  49:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __STATIC_FORCEINLINE                 
  50:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __STATIC_FORCEINLINE                   __attribute__((always_inline)) static inline
  51:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif                                           
  52:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __NO_RETURN
  53:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __NO_RETURN                            __attribute__((__noreturn__))
  54:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  55:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __USED
  56:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __USED                                 __attribute__((used))
  57:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  58:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __WEAK
  59:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __WEAK                                 __attribute__((weak))
  60:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  61:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED
  62:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED                               __attribute__((packed, aligned(1)))
  63:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  64:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED_STRUCT
  65:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED_STRUCT                        struct __attribute__((packed, aligned(1)))
  66:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  67:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED_UNION
  68:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED_UNION                         union __attribute__((packed, aligned(1)))
  69:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  70:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32        /* deprecated */
  71:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  72:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  73:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  74:Drivers/CMSIS/Include/cmsis_gcc.h ****   struct __attribute__((packed)) T_UINT32 { uint32_t v; };
  75:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  76:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32(x)                  (((struct T_UINT32 *)(x))->v)
  77:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  78:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT16_WRITE
  79:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  80:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  81:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  82:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT16_WRITE { uint16_t v; };
  83:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  84:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT16_WRITE(addr, val)    (void)((((struct T_UINT16_WRITE *)(void *)(addr))-
  85:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  86:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT16_READ
  87:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  88:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  89:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  90:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT16_READ { uint16_t v; };
  91:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  92:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT16_READ(addr)          (((const struct T_UINT16_READ *)(const void *)(add
  93:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  94:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32_WRITE
  95:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  96:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
ARM GAS  C:\Users\User\AppData\Local\Temp\cc98eHMd.s 			page 21


  97:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  98:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT32_WRITE { uint32_t v; };
  99:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
 100:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32_WRITE(addr, val)    (void)((((struct T_UINT32_WRITE *)(void *)(addr))-
 101:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 102:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32_READ
 103:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
 104:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
 105:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
 106:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT32_READ { uint32_t v; };
 107:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
 108:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32_READ(addr)          (((const struct T_UINT32_READ *)(const void *)(add
 109:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 110:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __ALIGNED
 111:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __ALIGNED(x)                           __attribute__((aligned(x)))
 112:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 113:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __RESTRICT
 114:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __RESTRICT                             __restrict
 115:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 116:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 117:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 118:Drivers/CMSIS/Include/cmsis_gcc.h **** /* ###########################  Core Function Access  ########################### */
 119:Drivers/CMSIS/Include/cmsis_gcc.h **** /** \ingroup  CMSIS_Core_FunctionInterface
 120:Drivers/CMSIS/Include/cmsis_gcc.h ****     \defgroup CMSIS_Core_RegAccFunctions CMSIS Core Register Access Functions
 121:Drivers/CMSIS/Include/cmsis_gcc.h ****   @{
 122:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 123:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 124:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 125:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Enable IRQ Interrupts
 126:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Enables IRQ interrupts by clearing the I-bit in the CPSR.
 127:Drivers/CMSIS/Include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 128:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 129:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __enable_irq(void)
 130:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 131:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("cpsie i" : : : "memory");
 132:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 133:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 134:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 135:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 136:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Disable IRQ Interrupts
 137:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Disables IRQ interrupts by setting the I-bit in the CPSR.
 138:Drivers/CMSIS/Include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 139:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 140:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __disable_irq(void)
 722              		.loc 2 140 27 view .LVU158
 723              	.LBB19:
 141:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 142:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("cpsid i" : : : "memory");
 724              		.loc 2 142 3 view .LVU159
 725              		.syntax divided
 726              	@ 142 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 727 0000 72B6     		cpsid i
 728              	@ 0 "" 2
 729              		.thumb
 730              		.syntax unified
 731              	.L29:
 732              	.LBE19:
ARM GAS  C:\Users\User\AppData\Local\Temp\cc98eHMd.s 			page 22


 733              	.LBE18:
 265:Core/Src/main.c ****   while (1)
 734              		.loc 1 265 3 view .LVU160
 266:Core/Src/main.c ****   {
 267:Core/Src/main.c ****   }
 735              		.loc 1 267 3 view .LVU161
 265:Core/Src/main.c ****   while (1)
 736              		.loc 1 265 9 view .LVU162
 737 0002 FEE7     		b	.L29
 738              		.cfi_endproc
 739              	.LFE45:
 741              		.section	.text.SystemClock_Config,"ax",%progbits
 742              		.align	1
 743              		.global	SystemClock_Config
 744              		.syntax unified
 745              		.code	16
 746              		.thumb_func
 748              	SystemClock_Config:
 749              	.LFB41:
 142:Core/Src/main.c ****   RCC_OscInitTypeDef RCC_OscInitStruct = {0};
 750              		.loc 1 142 1 view -0
 751              		.cfi_startproc
 752              		@ args = 0, pretend = 0, frame = 64
 753              		@ frame_needed = 0, uses_anonymous_args = 0
 754 0000 00B5     		push	{lr}
 755              	.LCFI8:
 756              		.cfi_def_cfa_offset 4
 757              		.cfi_offset 14, -4
 758 0002 91B0     		sub	sp, sp, #68
 759              	.LCFI9:
 760              		.cfi_def_cfa_offset 72
 143:Core/Src/main.c ****   RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 761              		.loc 1 143 3 view .LVU164
 143:Core/Src/main.c ****   RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 762              		.loc 1 143 22 is_stmt 0 view .LVU165
 763 0004 3022     		movs	r2, #48
 764 0006 0021     		movs	r1, #0
 765 0008 04A8     		add	r0, sp, #16
 766 000a FFF7FEFF 		bl	memset
 767              	.LVL78:
 144:Core/Src/main.c **** 
 768              		.loc 1 144 3 is_stmt 1 view .LVU166
 144:Core/Src/main.c **** 
 769              		.loc 1 144 22 is_stmt 0 view .LVU167
 770 000e 1022     		movs	r2, #16
 771 0010 0021     		movs	r1, #0
 772 0012 6846     		mov	r0, sp
 773 0014 FFF7FEFF 		bl	memset
 774              	.LVL79:
 149:Core/Src/main.c ****   RCC_OscInitStruct.HSIState = RCC_HSI_ON;
 775              		.loc 1 149 3 is_stmt 1 view .LVU168
 149:Core/Src/main.c ****   RCC_OscInitStruct.HSIState = RCC_HSI_ON;
 776              		.loc 1 149 36 is_stmt 0 view .LVU169
 777 0018 0223     		movs	r3, #2
 778 001a 0493     		str	r3, [sp, #16]
 150:Core/Src/main.c ****   RCC_OscInitStruct.HSICalibrationValue = RCC_HSICALIBRATION_DEFAULT;
 779              		.loc 1 150 3 is_stmt 1 view .LVU170
ARM GAS  C:\Users\User\AppData\Local\Temp\cc98eHMd.s 			page 23


 150:Core/Src/main.c ****   RCC_OscInitStruct.HSICalibrationValue = RCC_HSICALIBRATION_DEFAULT;
 780              		.loc 1 150 30 is_stmt 0 view .LVU171
 781 001c 013B     		subs	r3, r3, #1
 782 001e 0793     		str	r3, [sp, #28]
 151:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_NONE;
 783              		.loc 1 151 3 is_stmt 1 view .LVU172
 151:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_NONE;
 784              		.loc 1 151 41 is_stmt 0 view .LVU173
 785 0020 0F33     		adds	r3, r3, #15
 786 0022 0893     		str	r3, [sp, #32]
 152:Core/Src/main.c ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 787              		.loc 1 152 3 is_stmt 1 view .LVU174
 153:Core/Src/main.c ****   {
 788              		.loc 1 153 3 view .LVU175
 153:Core/Src/main.c ****   {
 789              		.loc 1 153 7 is_stmt 0 view .LVU176
 790 0024 04A8     		add	r0, sp, #16
 791 0026 FFF7FEFF 		bl	HAL_RCC_OscConfig
 792              	.LVL80:
 153:Core/Src/main.c ****   {
 793              		.loc 1 153 6 discriminator 1 view .LVU177
 794 002a 0028     		cmp	r0, #0
 795 002c 0DD1     		bne	.L33
 160:Core/Src/main.c ****                               |RCC_CLOCKTYPE_PCLK1;
 796              		.loc 1 160 3 is_stmt 1 view .LVU178
 160:Core/Src/main.c ****                               |RCC_CLOCKTYPE_PCLK1;
 797              		.loc 1 160 31 is_stmt 0 view .LVU179
 798 002e 0723     		movs	r3, #7
 799 0030 0093     		str	r3, [sp]
 162:Core/Src/main.c ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 800              		.loc 1 162 3 is_stmt 1 view .LVU180
 162:Core/Src/main.c ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 801              		.loc 1 162 34 is_stmt 0 view .LVU181
 802 0032 0023     		movs	r3, #0
 803 0034 0193     		str	r3, [sp, #4]
 163:Core/Src/main.c ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV1;
 804              		.loc 1 163 3 is_stmt 1 view .LVU182
 163:Core/Src/main.c ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV1;
 805              		.loc 1 163 35 is_stmt 0 view .LVU183
 806 0036 0293     		str	r3, [sp, #8]
 164:Core/Src/main.c **** 
 807              		.loc 1 164 3 is_stmt 1 view .LVU184
 164:Core/Src/main.c **** 
 808              		.loc 1 164 36 is_stmt 0 view .LVU185
 809 0038 0393     		str	r3, [sp, #12]
 166:Core/Src/main.c ****   {
 810              		.loc 1 166 3 is_stmt 1 view .LVU186
 166:Core/Src/main.c ****   {
 811              		.loc 1 166 7 is_stmt 0 view .LVU187
 812 003a 0021     		movs	r1, #0
 813 003c 6846     		mov	r0, sp
 814 003e FFF7FEFF 		bl	HAL_RCC_ClockConfig
 815              	.LVL81:
 166:Core/Src/main.c ****   {
 816              		.loc 1 166 6 discriminator 1 view .LVU188
 817 0042 0028     		cmp	r0, #0
 818 0044 03D1     		bne	.L34
ARM GAS  C:\Users\User\AppData\Local\Temp\cc98eHMd.s 			page 24


 170:Core/Src/main.c **** 
 819              		.loc 1 170 1 view .LVU189
 820 0046 11B0     		add	sp, sp, #68
 821              		@ sp needed
 822 0048 00BD     		pop	{pc}
 823              	.L33:
 155:Core/Src/main.c ****   }
 824              		.loc 1 155 5 is_stmt 1 view .LVU190
 825 004a FFF7FEFF 		bl	Error_Handler
 826              	.LVL82:
 827              	.L34:
 168:Core/Src/main.c ****   }
 828              		.loc 1 168 5 view .LVU191
 829 004e FFF7FEFF 		bl	Error_Handler
 830              	.LVL83:
 831              		.cfi_endproc
 832              	.LFE41:
 834              		.section	.text.main,"ax",%progbits
 835              		.align	1
 836              		.global	main
 837              		.syntax unified
 838              		.code	16
 839              		.thumb_func
 841              	main:
 842              	.LFB40:
  77:Core/Src/main.c ****   /* USER CODE BEGIN 1 */
 843              		.loc 1 77 1 view -0
 844              		.cfi_startproc
 845              		@ Volatile: function does not return.
 846              		@ args = 0, pretend = 0, frame = 0
 847              		@ frame_needed = 0, uses_anonymous_args = 0
 848 0000 70B5     		push	{r4, r5, r6, lr}
 849              	.LCFI10:
 850              		.cfi_def_cfa_offset 16
 851              		.cfi_offset 4, -16
 852              		.cfi_offset 5, -12
 853              		.cfi_offset 6, -8
 854              		.cfi_offset 14, -4
  85:Core/Src/main.c **** 
 855              		.loc 1 85 3 view .LVU193
 856 0002 FFF7FEFF 		bl	HAL_Init
 857              	.LVL84:
  92:Core/Src/main.c **** 
 858              		.loc 1 92 3 view .LVU194
 859 0006 FFF7FEFF 		bl	SystemClock_Config
 860              	.LVL85:
  99:Core/Src/main.c ****   /* USER CODE BEGIN 2 */
 861              		.loc 1 99 3 view .LVU195
 862 000a FFF7FEFF 		bl	MX_GPIO_Init
 863              	.LVL86:
 102:Core/Src/main.c **** 
 864              		.loc 1 102 3 view .LVU196
 865 000e 104C     		ldr	r4, .L37
 866 0010 0122     		movs	r2, #1
 867 0012 0121     		movs	r1, #1
 868 0014 2000     		movs	r0, r4
 869 0016 FFF7FEFF 		bl	HAL_GPIO_WritePin
ARM GAS  C:\Users\User\AppData\Local\Temp\cc98eHMd.s 			page 25


 870              	.LVL87:
 105:Core/Src/main.c ****   
 871              		.loc 1 105 3 view .LVU197
 105:Core/Src/main.c ****   
 872              		.loc 1 105 16 is_stmt 0 view .LVU198
 873 001a FFF7FEFF 		bl	HAL_GetTick
 874              	.LVL88:
 105:Core/Src/main.c ****   
 875              		.loc 1 105 14 discriminator 1 view .LVU199
 876 001e 0D4D     		ldr	r5, .L37+4
 877 0020 2860     		str	r0, [r5]
 111:Core/Src/main.c **** 
 878              		.loc 1 111 3 is_stmt 1 view .LVU200
 111:Core/Src/main.c **** 
 879              		.loc 1 111 14 is_stmt 0 view .LVU201
 880 0022 FFF7FEFF 		bl	HAL_GetTick
 881              	.LVL89:
 111:Core/Src/main.c **** 
 882              		.loc 1 111 12 discriminator 1 view .LVU202
 883 0026 0C4B     		ldr	r3, .L37+8
 884 0028 1860     		str	r0, [r3]
 114:Core/Src/main.c **** 
 885              		.loc 1 114 3 is_stmt 1 view .LVU203
 114:Core/Src/main.c **** 
 886              		.loc 1 114 29 is_stmt 0 view .LVU204
 887 002a 2B68     		ldr	r3, [r5]
 888 002c C01A     		subs	r0, r0, r3
 114:Core/Src/main.c **** 
 889              		.loc 1 114 18 view .LVU205
 890 002e 0B4B     		ldr	r3, .L37+12
 891 0030 1860     		str	r0, [r3]
 117:Core/Src/main.c **** 
 892              		.loc 1 117 3 is_stmt 1 view .LVU206
 893 0032 0122     		movs	r2, #1
 894 0034 0221     		movs	r1, #2
 895 0036 2000     		movs	r0, r4
 896 0038 FFF7FEFF 		bl	HAL_GPIO_WritePin
 897              	.LVL90:
 120:Core/Src/main.c **** 
 898              		.loc 1 120 3 view .LVU207
 899 003c FA20     		movs	r0, #250
 900 003e 8000     		lsls	r0, r0, #2
 901 0040 FFF7FEFF 		bl	HAL_Delay
 902              	.LVL91:
 123:Core/Src/main.c **** 
 903              		.loc 1 123 3 view .LVU208
 904 0044 0022     		movs	r2, #0
 905 0046 0321     		movs	r1, #3
 906 0048 2000     		movs	r0, r4
 907 004a FFF7FEFF 		bl	HAL_GPIO_WritePin
 908              	.LVL92:
 909              	.L36:
 129:Core/Src/main.c ****   {
 910              		.loc 1 129 3 view .LVU209
 133:Core/Src/main.c ****   /* USER CODE END 3 */
 911              		.loc 1 133 3 view .LVU210
 129:Core/Src/main.c ****   {
ARM GAS  C:\Users\User\AppData\Local\Temp\cc98eHMd.s 			page 26


 912              		.loc 1 129 9 view .LVU211
 913 004e FEE7     		b	.L36
 914              	.L38:
 915              		.align	2
 916              	.L37:
 917 0050 00040048 		.word	1207960576
 918 0054 00000000 		.word	start_time
 919 0058 00000000 		.word	end_time
 920 005c 00000000 		.word	execution_time
 921              		.cfi_endproc
 922              	.LFE40:
 924              		.global	init_height
 925              		.section	.data.init_height,"aw"
 926              		.align	2
 929              	init_height:
 930 0000 80000000 		.word	128
 931              		.global	init_width
 932              		.section	.data.init_width,"aw"
 933              		.align	2
 936              	init_width:
 937 0000 80000000 		.word	128
 938              		.global	checksum
 939              		.section	.bss.checksum,"aw",%nobits
 940              		.align	3
 943              	checksum:
 944 0000 00000000 		.space	8
 944      00000000 
 945              		.global	execution_time
 946              		.section	.bss.execution_time,"aw",%nobits
 947              		.align	2
 950              	execution_time:
 951 0000 00000000 		.space	4
 952              		.global	end_time
 953              		.section	.bss.end_time,"aw",%nobits
 954              		.align	2
 957              	end_time:
 958 0000 00000000 		.space	4
 959              		.global	start_time
 960              		.section	.bss.start_time,"aw",%nobits
 961              		.align	2
 964              	start_time:
 965 0000 00000000 		.space	4
 966              		.text
 967              	.Letext0:
 968              		.file 3 "C:\\ST\\STM32CubeIDE_1.19.0\\STM32CubeIDE\\plugins\\com.st.stm32cube.ide.mcu.externaltool
 969              		.file 4 "C:\\ST\\STM32CubeIDE_1.19.0\\STM32CubeIDE\\plugins\\com.st.stm32cube.ide.mcu.externaltool
 970              		.file 5 "Drivers/CMSIS/Device/ST/STM32F0xx/Include/stm32f051x8.h"
 971              		.file 6 "Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_hal_def.h"
 972              		.file 7 "Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_hal_rcc.h"
 973              		.file 8 "Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_hal_gpio.h"
 974              		.file 9 "Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_hal.h"
 975              		.file 10 "<built-in>"
ARM GAS  C:\Users\User\AppData\Local\Temp\cc98eHMd.s 			page 27


DEFINED SYMBOLS
                            *ABS*:00000000 main.c
C:\Users\User\AppData\Local\Temp\cc98eHMd.s:19     .text.MX_GPIO_Init:00000000 $t
C:\Users\User\AppData\Local\Temp\cc98eHMd.s:24     .text.MX_GPIO_Init:00000000 MX_GPIO_Init
C:\Users\User\AppData\Local\Temp\cc98eHMd.s:114    .text.MX_GPIO_Init:0000005c $d
C:\Users\User\AppData\Local\Temp\cc98eHMd.s:126    .text.calculate_mandelbrot_fixed_point_arithmetic:00000000 $t
C:\Users\User\AppData\Local\Temp\cc98eHMd.s:132    .text.calculate_mandelbrot_fixed_point_arithmetic:00000000 calculate_mandelbrot_fixed_point_arithmetic
C:\Users\User\AppData\Local\Temp\cc98eHMd.s:379    .text.calculate_mandelbrot_fixed_point_arithmetic:000000e4 $d
C:\Users\User\AppData\Local\Temp\cc98eHMd.s:943    .bss.checksum:00000000 checksum
C:\Users\User\AppData\Local\Temp\cc98eHMd.s:388    .text.calculate_mandelbrot_double:00000000 $t
C:\Users\User\AppData\Local\Temp\cc98eHMd.s:394    .text.calculate_mandelbrot_double:00000000 calculate_mandelbrot_double
C:\Users\User\AppData\Local\Temp\cc98eHMd.s:695    .text.calculate_mandelbrot_double:00000154 $d
C:\Users\User\AppData\Local\Temp\cc98eHMd.s:704    .text.Error_Handler:00000000 $t
C:\Users\User\AppData\Local\Temp\cc98eHMd.s:710    .text.Error_Handler:00000000 Error_Handler
C:\Users\User\AppData\Local\Temp\cc98eHMd.s:742    .text.SystemClock_Config:00000000 $t
C:\Users\User\AppData\Local\Temp\cc98eHMd.s:748    .text.SystemClock_Config:00000000 SystemClock_Config
C:\Users\User\AppData\Local\Temp\cc98eHMd.s:835    .text.main:00000000 $t
C:\Users\User\AppData\Local\Temp\cc98eHMd.s:841    .text.main:00000000 main
C:\Users\User\AppData\Local\Temp\cc98eHMd.s:917    .text.main:00000050 $d
C:\Users\User\AppData\Local\Temp\cc98eHMd.s:964    .bss.start_time:00000000 start_time
C:\Users\User\AppData\Local\Temp\cc98eHMd.s:957    .bss.end_time:00000000 end_time
C:\Users\User\AppData\Local\Temp\cc98eHMd.s:950    .bss.execution_time:00000000 execution_time
C:\Users\User\AppData\Local\Temp\cc98eHMd.s:929    .data.init_height:00000000 init_height
C:\Users\User\AppData\Local\Temp\cc98eHMd.s:926    .data.init_height:00000000 $d
C:\Users\User\AppData\Local\Temp\cc98eHMd.s:936    .data.init_width:00000000 init_width
C:\Users\User\AppData\Local\Temp\cc98eHMd.s:933    .data.init_width:00000000 $d
C:\Users\User\AppData\Local\Temp\cc98eHMd.s:940    .bss.checksum:00000000 $d
C:\Users\User\AppData\Local\Temp\cc98eHMd.s:947    .bss.execution_time:00000000 $d
C:\Users\User\AppData\Local\Temp\cc98eHMd.s:954    .bss.end_time:00000000 $d
C:\Users\User\AppData\Local\Temp\cc98eHMd.s:961    .bss.start_time:00000000 $d

UNDEFINED SYMBOLS
memset
HAL_GPIO_WritePin
HAL_GPIO_Init
__aeabi_idiv
__aeabi_i2d
__aeabi_dmul
__aeabi_dsub
__aeabi_d2iz
__aeabi_dadd
__aeabi_dcmple
HAL_RCC_OscConfig
HAL_RCC_ClockConfig
HAL_Init
HAL_GetTick
HAL_Delay
